resource "snowflake_view" "DW_REPORT_MS_OSHAH_CONTRACT_MAP" {
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "REPORT"
	name = "MS_OSHAH_CONTRACT_MAP"
	statement = <<-SQL
	 WITH dat AS (
SELECT 
listagg(DISTINCT nvl(PARTNER_CONTRACT_SERVICE_KEY,CONTRACT_KEY )) OVER (PARTITION BY CLIENT_KEY) AS key,
sum(HOURS_SERVED) OVER (PARTITION BY a.CLIENT_KEY) AS merhrs ,
count(VISIT_KEY) OVER (PARTITION BY a.CLIENT_KEY) AS mervisits,
sum(iff(a.INVOICE_STATUS_NAME='Billed',a.BILL_UNITS_SERVED,0)) OVER (PARTITION BY a.CLIENT_KEY) AS mer_billhours,
count(iff(a.CLEAN_SHIFT_FLAG =1 AND a.CONFIRMED_FLAG ='YES',a.VISIT_KEY ,null)) OVER (PARTITION BY a.CLIENT_KEY) AS mer_cleanshiftflg,
count(iff(a.CLEAN_SHIFT_FLAG =0 AND a.CONFIRMED_FLAG ='YES',a.VISIT_KEY ,NULL )) OVER (PARTITION BY a.CLIENT_KEY) AS mer_visitneedmaintainance,
*
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_VISIT_MERGED a 
WHERE CONFIRMED_FLAG ='YES'
AND date_trunc('month',REPORT_DATE)='2023-08-01'
AND ((SOURCE_SYSTEM_ID='17' AND SYSTEM_CODE='OSHAH - MS')
OR SOURCE_SYSTEM_ID ='3' AND SYSTEM_CODE ='MS'
)
), aug_visits AS (
SELECT CLIENT_KEY, a.PARTNER_CONTRACT_SERVICE_KEY , a.CONTRACT_KEY, b.PARTNER_CONTRACT_SERVICE_KEY AS hha_con, merhrs, mervisits,mer_billhours,mer_cleanshiftflg,mer_visitneedmaintainance
FROM dat a
JOIN DW_${var.SF_ENVIRONMENT}.HAH.CONTRACT_MAPPING b ON (a.KEY = b.KEY1 OR a.KEY = b.KEY2 )
GROUP BY ALL 
ORDER BY CLIENT_KEY
), REVENUE_DATAFLEX AS (
	SELECT DATEFROMPARTS(LEFT(INVOICES.PERIOD, 4), RIGHT(TRIM(INVOICES.PERIOD), 2), 1) AS REPORT_DATE, CLIENT.CLIENT_KEY, CONTRACT.CONTRACT_KEY, SUM(INVOICES.HOURSBILLED) HOURS_BILLED
	FROM DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFINVOICES INVOICES
	JOIN HAH.DIM_CLIENT CLIENT
		ON CLIENT.SOURCE_SYSTEM_ID = 3 AND CLIENT.SYSTEM_CODE = INVOICES.DBNAME AND CLIENT.CLIENT_NUMBER = INVOICES.CLIENTNUMBER 
	JOIN HAH.DIM_CONTRACT CONTRACT
		ON CONTRACT.SOURCE_SYSTEM_ID = 3 AND CONTRACT.SYSTEM_CODE = INVOICES.DBNAME AND CONTRACT.CONTRACT_CODE = INVOICES.CONTRACTCODE
	WHERE MOVEDTO = ''
	GROUP BY DATEFROMPARTS(LEFT(INVOICES.PERIOD, 4), RIGHT(TRIM(INVOICES.PERIOD), 2), 1), CLIENT.CLIENT_KEY, CONTRACT.CONTRACT_KEY
), REVENUE_OTHERS AS (
	SELECT DATE_TRUNC(MONTH, REVENUE.REPORT_DATE) AS REPORT_DATE, REVENUE.CLIENT_KEY, REVENUE.CONTRACT_KEY, SUM(REVENUE.INVOICE_HOURS) HOURS_BILLED
	FROM INTEGRATION.FACT_REVENUE_MERGED REVENUE
	JOIN HAH.DIM_INVOICE INVOICE
		ON INVOICE.INVOICE_KEY = REVENUE.INVOICE_KEY
	WHERE REVENUE.SOURCE_SYSTEM_ID <> 3 AND INVOICE.INVOICE_STATUS IN ('Bill Paid','Bill Sent','Fully Paid','Partially Paid')
	GROUP BY DATE_TRUNC(MONTH, REVENUE.REPORT_DATE), REVENUE.CLIENT_KEY, REVENUE.CONTRACT_KEY
), REVENUE AS (
	SELECT L.REPORT_DATE, CLIENT.CLIENT_KEY, /*L.CONTRACT_KEY, */SUM(L.HOURS_BILLED) AS HOURS_BILLED
	FROM (
		SELECT REPORT_DATE, CLIENT_KEY, CONTRACT_KEY, HOURS_BILLED
		FROM REVENUE_DATAFLEX
		UNION ALL
		SELECT REPORT_DATE, CLIENT_KEY, CONTRACT_KEY, HOURS_BILLED
		FROM REVENUE_OTHERS
	) L
	JOIN INTEGRATION.DIM_CLIENT_MERGED AS CLIENT
		ON CLIENT.ORIGINAL_CLIENT_KEY = L.CLIENT_KEY
	WHERE  L.REPORT_DATE='2023-08-01'
	GROUP BY L.REPORT_DATE, CLIENT.CLIENT_KEY, L.CONTRACT_KEY
)
, fin AS (
SELECT
	b.SOURCE_SYSTEM_ID,
	a.CLIENT_KEY,
	a.PARTNER_CONTRACT_SERVICE_KEY,
	a.hha_con,
	a.CONTRACT_KEY,
	MERHRS,
	MERVISITS,
	(r.hours_billed)+ MER_BILLHOURS AS MER_BILLHOURS,
	MER_CLEANSHIFTFLG,
	MER_VISITNEEDMAINTAINANCE
 FROM aug_visits a
JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_CONTRACT b ON a.CONTRACT_KEY =b.CONTRACT_KEY 
LEFT JOIN revenue r ON a.CLIENT_KEY =r.client_key
JOIN (SELECT CLIENT_KEY , HOURS_SERVED  , VISITS_ALL , hours_billed, uu.VISITS_CLEAN_SHIFTS , uu.VISITS_NEED_MAINTENANCE 
FROM DW_${var.SF_ENVIRONMENT}.REPORT.UTILIZATION_2_0 uu
WHERE PERIOD_BEGIN_DATE ='2023-08-01'
UNION all
SELECT CLIENT_KEY , HOURS_SERVED  ,VISITS_ALL , hours_billed,uu.VISITS_CLEAN_SHIFTS , uu.VISITS_NEED_MAINTENANCE 
FROM DW_${var.SF_ENVIRONMENT}.REPORT.UTILIZATION_1_0 uu
WHERE PERIOD_BEGIN_DATE ='2023-08-01') u ON a.CLIENT_KEY =u.CLIENT_KEY 
WHERE b.SOURCE_SYSTEM_ID ='3'
GROUP BY all
ORDER BY  2)
SELECT *
FROM fin;
SQL
	or_replace = true 
	is_secure = false 
}

