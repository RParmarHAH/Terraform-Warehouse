resource "snowflake_view" "DW_REPORT_VW_EXECUTIVE_OPERATIONS_EXCELLENCE_CLIENTS_REACTIVATED" {
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "REPORT"
	name = "VW_EXECUTIVE_OPERATIONS_EXCELLENCE_CLIENTS_REACTIVATED"
	statement = <<-SQL
	 WITH NEW_AND_REACTIVATED_CLIENTS AS ( -- Need to get New clients as well, in order to exclude those who are not true reactives (by revenue category)
	SELECT DISTINCT LIST.PERIOD_BEGIN_DATE,
		LIST.CLIENT_KEY,
		CONTRACTS.REVENUE_CATEGORY,
		MIN(MIN(LIST.FIRST_SERVICE_DATE)) OVER(PARTITION BY LIST.CLIENT_KEY, CONTRACTS.REVENUE_CATEGORY) AS FIRST_SERVICE_DATE,
		FIRST_VALUE(LIST.FIRST_BRANCH_KEY) OVER(PARTITION BY LIST.PERIOD_BEGIN_DATE, LIST.CLIENT_KEY, CONTRACTS.REVENUE_CATEGORY ORDER BY SUM(LIST.HOURS_SERVED) DESC) AS BRANCH_KEY,
		FIRST_VALUE(LIST.FIRST_SUPERVISOR_KEY) OVER(PARTITION BY LIST.PERIOD_BEGIN_DATE, LIST.CLIENT_KEY, CONTRACTS.REVENUE_CATEGORY ORDER BY SUM(LIST.HOURS_SERVED) DESC) AS SUPERVISOR_KEY
	FROM (
		SELECT PERIOD_BEGIN_DATE, CLIENT_KEY, CONTRACT_KEY, FIRST_SERVICE_DATE, FIRST_BRANCH_KEY, FIRST_SUPERVISOR_KEY, HOURS_SERVED
		FROM REPORT.CLIENTS_STARTED
		UNION ALL
		SELECT PERIOD_BEGIN_DATE, CLIENT_KEY, CONTRACT_KEY, FIRST_SERVICE_DATE, CURRENT_BRANCH_KEY, CURRENT_SUPERVISOR_KEY, HOURS_SERVED
		FROM REPORT.CLIENTS_REACTIVATED 
	) LIST
	JOIN REPORT.VW_DASHBOARD_CONTRACTS CONTRACTS
		ON CONTRACTS.CONTRACT_KEY = LIST.CONTRACT_KEY
	WHERE CONTRACTS.INCLUDE_FOR_EXEC_OPS_CLIENTS = 1
	GROUP BY LIST.PERIOD_BEGIN_DATE,
		LIST.CLIENT_KEY,
		CONTRACTS.REVENUE_CATEGORY,
		LIST.FIRST_BRANCH_KEY,
		LIST.FIRST_SUPERVISOR_KEY
), REACTIVATED_CLIENTS_BY_CONTRACT AS (
	SELECT DISTINCT CLIENTS.PERIOD_BEGIN_DATE, 
		CLIENTS.CLIENT_KEY,
		CLIENTS.REVENUE_CATEGORY,
		CLIENTS.FIRST_SERVICE_DATE,
		CLIENTS.BRANCH_KEY,
		CLIENTS.SUPERVISOR_KEY
	FROM NEW_AND_REACTIVATED_CLIENTS CLIENTS
	JOIN REPORT.VW_EXECUTIVE_OPERATIONS_EXCELLENCE_CLIENTS_REACTIVATED_DIM_DATE DATES
		ON DATES.PERIOD_BEGIN_DATE = CLIENTS.PERIOD_BEGIN_DATE
	WHERE CLIENTS.FIRST_SERVICE_DATE < CLIENTS.PERIOD_BEGIN_DATE
), VISITS_BY_CATEGORY AS (
	-- Capture visits by category, for those clients who switched contracts and are active under a different contract but same category
	SELECT DATE_TRUNC(MONTH, VISIT.REPORT_DATE) AS PERIOD_BEGIN_DATE, 
		VISIT.CLIENT_KEY, 
		CONTRACTS.REVENUE_CATEGORY
	FROM HAH.FACT_VISIT VISIT
	JOIN REPORT.VW_DASHBOARD_CONTRACTS CONTRACTS
		ON CONTRACTS.CONTRACT_KEY = VISIT.CONTRACT_KEY
	WHERE CONTRACTS.INCLUDE_FOR_EXEC_OPS_CLIENTS = 1
		AND VISIT.CONFIRMED_FLAG = 'YES' 
		AND VISIT.HOURS_SERVED > 0
	GROUP BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, CONTRACTS.REVENUE_CATEGORY
), REACTIVATED_CLIENTS AS (
	SELECT REACTIVATED.PERIOD_BEGIN_DATE,
		REACTIVATED.CLIENT_KEY,
		REACTIVATED.REVENUE_CATEGORY,
		REACTIVATED.FIRST_SERVICE_DATE,
		REACTIVATED.BRANCH_KEY AS CURRENT_BRANCH_KEY,
		REACTIVATED.SUPERVISOR_KEY AS CURRENT_SUPERVISOR_KEY
	FROM REACTIVATED_CLIENTS_BY_CONTRACT REACTIVATED
	LEFT JOIN VISITS_BY_CATEGORY PREVIOUS_PERIOD
		ON PREVIOUS_PERIOD.PERIOD_BEGIN_DATE = DATEADD(MONTH, -1, REACTIVATED.PERIOD_BEGIN_DATE)
			AND PREVIOUS_PERIOD.CLIENT_KEY = REACTIVATED.CLIENT_KEY
			AND PREVIOUS_PERIOD.REVENUE_CATEGORY = REACTIVATED.REVENUE_CATEGORY
	WHERE PREVIOUS_PERIOD.PERIOD_BEGIN_DATE IS NULL
)
	SELECT PERIOD_BEGIN_DATE,
		CLIENT_KEY,
		REVENUE_CATEGORY,
		FIRST_SERVICE_DATE,
		CURRENT_BRANCH_KEY,
		CURRENT_SUPERVISOR_KEY
	FROM REACTIVATED_CLIENTS;
SQL
	or_replace = true 
	is_secure = false 
}

