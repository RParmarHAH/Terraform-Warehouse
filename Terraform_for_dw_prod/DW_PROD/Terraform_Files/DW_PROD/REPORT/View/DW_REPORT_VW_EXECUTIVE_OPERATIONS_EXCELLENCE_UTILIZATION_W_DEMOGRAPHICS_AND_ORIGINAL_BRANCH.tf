resource "snowflake_view" "DW_REPORT_VW_EXECUTIVE_OPERATIONS_EXCELLENCE_UTILIZATION_W_DEMOGRAPHICS_AND_ORIGINAL_BRANCH" {
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "REPORT"
	name = "VW_EXECUTIVE_OPERATIONS_EXCELLENCE_UTILIZATION_W_DEMOGRAPHICS_AND_ORIGINAL_BRANCH"
	statement = <<-SQL
	 WITH DATES AS (
		SELECT DISTINCT FIRST_DAY_OF_MONTH, CONCAT(MONTH_NAME, ' ', "YEAR") PERIOD_NAME
        FROM HAH.DIM_DATE
--        WHERE FIRST_DAY_OF_MONTH BETWEEN '2018-01-01' and '2020-12-31'
        WHERE FIRST_DAY_OF_MONTH BETWEEN '2018-01-01' AND DATEADD( 'MONTH', 2, CURRENT_DATE())
	), 
	FIRSTSERVICEDATE AS (
SELECT CLIENT_KEY,DATE_TRUNC('MONTH',MIN(SERVICE_DATE)) FIRST_SERVICE_MONTH FROM INTEGRATION.FACT_VISIT_MERGED WHERE NVL(CONFIRMED_FLAG,'YES')='YES'
	AND SOURCE_SYSTEM_ID = 7 GROUP BY CLIENT_KEY 
),CONTRACTS AS (
		SELECT DISTINCT C.CONTRACT_KEY, 
			C.CONTRACT_CODE, 
			C.CONTRACT_NAME, 
			C.REVENUE_CATEGORY,
			INCLUDE_FOR_EXEC_OPS_CLIENTS AS INCLUDE_FOR_CLIENTS,
			INCLUDE_FOR_EXEC_OPS_HOURS AS INCLUDE_FOR_HOURS
		FROM REPORT.VW_DASHBOARD_CONTRACTS C
		LEFT JOIN (SELECT DISTINCT CONTRACT_KEY ,BILL_UNIT_TYPE FROM HAH.FACT_VISIT) V ON C.CONTRACT_KEY = V.CONTRACT_KEY
		WHERE INCLUDE_FOR_EXEC_OPS_HOURS = TRUE AND nvl(V.BILL_UNIT_TYPE,'Hourly') ='Hourly'
--		WHERE INCLUDE_FOR_EXEC_OPS_CLIENTS = TRUE OR INCLUDE_FOR_EXEC_OPS_HOURS = TRUE
	), UTILIZATION_DATA AS (
		SELECT DISTINCT DATA.PERIOD_BEGIN_DATE,
			DATES.PERIOD_NAME,
            DATA.Original_Branch_Key,
			DATA.BRANCH_KEY,
			DATA.STATE,
			DATA.OFFICE_NUMBER,
			DATA.OFFICE_NAME,
			DATA.SUPERVISOR_KEY,
			DATA.SUPERVISOR_CODE,
			DATA.CLIENT_KEY AS CLIENT_KEY_DATA,
			DATA.CLIENT_NUMBER, 
			DATA.ORIGINAL_SOURCE_SYSTEM_ID,
			DATA.SOURCE_SYSTEM_ID,
            CLIENT.CLIENT_STATE_CODE as CLIENT_STATE,
            CLIENT.CLIENT_ETHNICITY,
            CLIENT.CLIENT_GENDER,
            DATEDIFF(YEAR, CLIENT.CLIENT_DOB, DATA.PERIOD_BEGIN_DATE) as CLIENT_AGE,
            COALESCE (DATE_TRUNC('MONTH', CLIENT.DERIVED_FIRST_SERVICE_DATE),FSD.FIRST_SERVICE_MONTH) as FIRST_SERVICE_MONTH,
			DATA.CONTRACT_KEY,
			DATA.CONTRACT_CODE,
			CONTRACT.CONTRACT_NAME,
			CONTRACT.INCLUDE_FOR_CLIENTS,
			CONTRACT.INCLUDE_FOR_HOURS,
			CONTRACT.REVENUE_CATEGORY,
			CASE WHEN CONTRACT.INCLUDE_FOR_CLIENTS = 1 THEN client.CLIENT_KEY END CLIENT_KEY,
			--CASE WHEN CONTRACT.INCLUDE_FOR_CLIENTS = 1 THEN COALESCE(CM.MASTER_CLIENT_KEY,DATA.CLIENT_KEY) END CLIENT_KEY,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 THEN DATA.HOURS_BILLED END, 0) HOURS_BILLED_ALL,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 THEN DATA.HOURS_SERVED END, 0) HOURS_SERVED_ALL,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 THEN DATA.HOURS_AUTHORIZED END, 0) HOURS_AUTHORIZED_ALL,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) <= 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_SERVED END, 0) HOURS_SERVED_WHERE_AUTH_EXISTS,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) <= 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_BILLED END, 0) HOURS_BILLED_WHERE_AUTH_EXISTS,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) <= 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_AUTHORIZED END, 0) HOURS_AUTHORIZED_WHERE_AUTH_EXISTS,
--			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) = 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_SERVED END, 0) HOURS_SERVED_WHERE_AUTH_EXISTS,
--			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) = 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_BILLED END, 0) HOURS_BILLED_WHERE_AUTH_EXISTS,
--			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) = 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_AUTHORIZED END, 0) HOURS_AUTHORIZED_WHERE_AUTH_EXISTS,
			DATA.ETL_LAST_UPDATED_DATE,
			DATA.VISITS_ALL,
			DATA.VISITS_CLEAN_SHIFTS,
			DATA.VISITS_NEED_MAINTENANCE
		, M.AGENCY,	CASE WHEN M.AGENCY = 'COMMUNITY CARE' THEN TRUE ELSE FALSE END AS CCSI_FLAG ,
       IFF(COALESCE(CCSI_CLIENT.CLIENT_KEY,CCSI_ACQUIRED_CLIENT.CLIENT_KEY,MATRIXCARE_CLIENT.CLIENT_KEY,ALAYACARE_CLIENT.CLIENT_KEY,PRAETORIAN_CLIENT.CLIENT_KEY,PREFERRED_CLIENT.CLIENT_KEY,EDISON_CLIENT.CLIENT_KEY,MERIDIUS_ACQUIRED_CLIENT.CLIENT_KEY,LONGEVITY_ACQUIRED_CLIENT.CLIENT_KEY,ASR_CLIENT.CLIENT_KEY,CLEARCARE_CLIENT.CLIENT_KEY,BERKSHIRE_CLIENT.CLIENT_KEY,OPENSYSTEMS_CLIENT.CLIENT_KEY,AXXESS_CLIENT.CLIENT_KEY,ALLIANCE_CLIENT.CLIENT_KEY,MYCARE_CLIENT.CLIENT_KEY,ALL_GEN_CLIENT.CLIENT_KEY,RECCO_CLIENT.CLIENT_KEY) IS NULL, FALSE, TRUE) AS CLIENT_ACQUIRED_FLAG,
        CASE WHEN COALESCE (CCSI_CLIENT.CLIENT_KEY,CCSI_ACQUIRED_CLIENT.CLIENT_KEY) IS NOT NULL THEN 'CCSI'
        WHEN MATRIXCARE_CLIENT.CLIENT_KEY IS NOT NULL THEN 'ADAPTIVE' 
        WHEN ALAYACARE_CLIENT.CLIENT_KEY IS NOT NULL THEN UPPER(ALAYACARE_CLIENT.AQUISITION_NAME)
        WHEN PRAETORIAN_CLIENT.CLIENT_KEY IS NOT NULL THEN 'PRAETORIAN' 
        WHEN PREFERRED_CLIENT.CLIENT_KEY IS NOT NULL THEN 'PREFERRED'
        WHEN EDISON_CLIENT.CLIENT_KEY IS NOT NULL THEN 'EDISON'
        WHEN LONGEVITY_ACQUIRED_CLIENT.CLIENT_KEY IS NOT NULL THEN 'LONGEVITY'
        WHEN MERIDIUS_ACQUIRED_CLIENT.CLIENT_KEY IS NOT NULL THEN 'MERIDIUS'
        WHEN ASR_CLIENT.CLIENT_KEY IS NOT NULL THEN 'ASR'
        WHEN CLEARCARE_CLIENT.CLIENT_KEY IS NOT NULL THEN 'CLEARCARE'
        WHEN BERKSHIRE_CLIENT.CLIENT_KEY IS NOT NULL THEN 'BERKSHIRE'
		WHEN OPENSYSTEMS_CLIENT.CLIENT_KEY IS NOT NULL THEN 'OPENSYSTEMS'
		WHEN AXXESS_CLIENT.CLIENT_KEY IS NOT NULL THEN 'AXXESS'
		WHEN ALLIANCE_CLIENT.CLIENT_KEY IS NOT NULL THEN 'ALLIANCE'
		WHEN MYCARE_CLIENT.CLIENT_KEY IS NOT NULL THEN 'MYCARE'
		WHEN ALL_GEN_CLIENT.CLIENT_KEY IS NOT NULL THEN 'ALL GENERATIONS'
		WHEN RECCO_CLIENT.CLIENT_KEY IS NOT NULL THEN 'RECCO'
        ELSE NULL END AS CLIENT_ACQUISITION_NAME,
		DATA.HOURS_SCHEDULED,
			DATA.HOURS_CANCELLED, 
			DATA.HOURS_IN_REVIEW,
			DATA.HOURS_MISSED, 
			DATA.HOURS_RESCHEDULED,
			DATA.FUTURE_HOURS, 
			DATA.FUTURE_CANCELLED_HOURS, 
			DATA.FUTURE_HOLD_HOURS,
			DATA.VISITS_SCHEDULED, 
			DATA.VISITS_COMPLETED,
			DATA.VISITS_CANCELLED,
			DATA.VISITS_IN_REVIEW,
			DATA.VISITS_MISSED,
			DATA.VISITS_RESCHEDULED,
			DATA.FUTURE_VISITS,
			DATA.FUTURE_CANCELLED_VISITS,
			DATA.FUTURE_HOLD_VISITS,
			DATA.CLIENT_SERVED_FLAG
		FROM REPORT.UTILIZATION AS DATA
		JOIN CONTRACTS CONTRACT
			ON CONTRACT.CONTRACT_KEY = DATA.CONTRACT_KEY --AND Data.CONTRACT_KEY NOT in ('7a063b085cebe336b0d355ac9df05840', '040c3a083eba1cfd52725c26878010ba','b63036c4869a4398a28f2b2a1bedbcde')
		JOIN DATES DATES 
			ON DATES.FIRST_DAY_OF_MONTH = DATA.PERIOD_BEGIN_DATE 
		LEFT JOIN FIRSTSERVICEDATE FSD ON FSD.CLIENT_KEY=DATA.CLIENT_KEY
        JOIN INTEGRATION.DIM_CLIENT_MERGED CLIENT
            ON CLIENT.CLIENT_KEY = DATA.CLIENT_KEY
         LEFT JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.DIM_CLIENT_MERGED M ON M.ORIGINAL_CLIENT_KEY = DATA.ORIGINAL_CLIENT_KEY
--        LEFT OUTER JOIN (SELECT BRANCH_KEY FROM HAH.DIM_BRANCH WHERE SOURCE_SYSTEM_ID = 8) CCSI_BRANCH
--ON CCSI_BRANCH.BRANCH_KEY = DATA.ORIGINAL_BRANCH_KEY 
LEFT OUTER JOIN  HAH.FACT_CLIENT_ACQUIRED CCSI_CLIENT
	ON CCSI_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY 
	AND CCSI_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY 
	AND CCSI_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY 
	AND CCSI_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE)
	AND CCSI_CLIENT.AQUISITION_NAME = 'CCSI'
LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED WHERE AQUISITION_NAME = 'CCSI') CCSI_ACQUIRED_CLIENT
ON CCSI_ACQUIRED_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND PERIOD_BEGIN_DATE >= '2021-07-01'
--     LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED_MERGED WHERE NOTES = 'Altamaha') ALAYACARE_CLIENT
--ON ALAYACARE_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY
LEFT OUTER JOIN  HAH.FACT_CLIENT_ACQUIRED ALAYACARE_CLIENT
	ON ALAYACARE_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY 
	AND ALAYACARE_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY 
	AND ALAYACARE_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY 
	AND ALAYACARE_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE)
	AND ALAYACARE_CLIENT.SOURCE_SYSTEM_ID  = 9
--LEFT OUTER JOIN (SELECT BRANCH_KEY FROM HAH.DIM_BRANCH WHERE SOURCE_SYSTEM_ID = 7 AND BRANCH_NAME LIKE 'A_%') MATRIXCARE_BRANCH
--	  ON MATRIXCARE_BRANCH.BRANCH_KEY = DATA.ORIGINAL_BRANCH_KEY
LEFT OUTER JOIN  HAH.FACT_CLIENT_ACQUIRED MATRIXCARE_CLIENT
ON MATRIXCARE_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY 
	AND MATRIXCARE_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY 
	AND MATRIXCARE_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY 
	AND MATRIXCARE_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE)
	AND MATRIXCARE_CLIENT.AQUISITION_NAME = 'ADAPTIVE' 
--     LEFT JOIN STAGE.VW_MATRIXCARE_MASTER_CLIENT_MAPPING CM ON DATA.CLIENT_KEY=CM.CLIENT_KEY	
--LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED_MERGED WHERE NOTES = 'Praetorian') PRAETORIAN_ACQUIRED_CLIENT
--ON PRAETORIAN_ACQUIRED_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND DATA.PERIOD_BEGIN_DATE >= '2022-01-01'
LEFT OUTER JOIN  HAH.FACT_CLIENT_ACQUIRED PRAETORIAN_CLIENT
	ON PRAETORIAN_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY 
	AND PRAETORIAN_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND DATA.PERIOD_BEGIN_DATE >= '2022-01-01'
	AND PRAETORIAN_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY 
	AND PRAETORIAN_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE)
	AND PRAETORIAN_CLIENT.AQUISITION_NAME = 'Praetorian' 
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED MERIDIUS_ACQUIRED_CLIENT ON 
	      MERIDIUS_ACQUIRED_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      MERIDIUS_ACQUIRED_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      MERIDIUS_ACQUIRED_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      MERIDIUS_ACQUIRED_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      MERIDIUS_ACQUIRED_CLIENT.AQUISITION_NAME ='Meridius'
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED LONGEVITY_ACQUIRED_CLIENT ON 
	      LONGEVITY_ACQUIRED_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      LONGEVITY_ACQUIRED_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      LONGEVITY_ACQUIRED_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      LONGEVITY_ACQUIRED_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      LONGEVITY_ACQUIRED_CLIENT.AQUISITION_NAME ='Longevity'
--LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED_MERGED WHERE NOTES = 'Preferred') PREFERRED_CLIENT
--ON PREFERRED_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED PREFERRED_CLIENT ON 
	      PREFERRED_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      PREFERRED_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      PREFERRED_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      PREFERRED_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      PREFERRED_CLIENT.AQUISITION_NAME ='PREFERRED'	      
--LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED_MERGED WHERE NOTES = 'Edison') EDISON_CLIENT
--ON EDISON_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED EDISON_CLIENT ON 
	      EDISON_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      EDISON_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      EDISON_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      EDISON_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      EDISON_CLIENT.AQUISITION_NAME ='EDISON'	
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED ASR_CLIENT ON 
	      ASR_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      ASR_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      ASR_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      ASR_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      ASR_CLIENT.AQUISITION_NAME ='ASR'
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED CLEARCARE_CLIENT ON 
	      CLEARCARE_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      CLEARCARE_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      CLEARCARE_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      CLEARCARE_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      CLEARCARE_CLIENT.AQUISITION_NAME ='CLEARCARE'
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED BERKSHIRE_CLIENT ON 
	      BERKSHIRE_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      BERKSHIRE_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      BERKSHIRE_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      BERKSHIRE_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      BERKSHIRE_CLIENT.AQUISITION_NAME ='BERKSHIRE'
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED OPENSYSTEMS_CLIENT ON 
	      OPENSYSTEMS_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      OPENSYSTEMS_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      OPENSYSTEMS_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      OPENSYSTEMS_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      OPENSYSTEMS_CLIENT.AQUISITION_NAME ='OPENSYSTEMS'
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED AXXESS_CLIENT ON 
	      AXXESS_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      AXXESS_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      AXXESS_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      AXXESS_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      AXXESS_CLIENT.AQUISITION_NAME ='AXXESS'
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED ALLIANCE_CLIENT ON 
	      ALLIANCE_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      ALLIANCE_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      ALLIANCE_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      ALLIANCE_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      ALLIANCE_CLIENT.AQUISITION_NAME ='ALLIANCE'
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED MYCARE_CLIENT ON 
	      MYCARE_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      MYCARE_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      MYCARE_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      MYCARE_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      MYCARE_CLIENT.AQUISITION_NAME ='MYCARE'	  
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED ALL_GEN_CLIENT ON 
	      ALL_GEN_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      ALL_GEN_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      ALL_GEN_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      ALL_GEN_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      ALL_GEN_CLIENT.AQUISITION_NAME ='All Generations'
LEFT OUTER JOIN HAH.FACT_CLIENT_ACQUIRED RECCO_CLIENT ON 
	      RECCO_CLIENT.CLIENT_KEY = DATA.CLIENT_KEY AND
	      RECCO_CLIENT.CONTRACT_KEY = DATA.CONTRACT_KEY AND
	      RECCO_CLIENT.BRANCH_KEY = DATA.BRANCH_KEY AND
	      RECCO_CLIENT.SERVICE_MONTH = DATE_TRUNC('MONTH',DATA.PERIOD_BEGIN_DATE) AND 
	      RECCO_CLIENT.AQUISITION_NAME ='RECCO'
WHERE IFF(DATA.CLIENT_SERVED_FLAG = TRUE, NVL(DATA.HOURS_SERVED, 0), 1) > 0
	)													   
	SELECT PERIOD_BEGIN_DATE, PERIOD_NAME, STATE, ORIGINAL_BRANCH_KEY, BRANCH_KEY, OFFICE_NUMBER, OFFICE_NAME, SUPERVISOR_KEY, SUPERVISOR_CODE, 
	CLIENT_KEY_DATA, CLIENT_KEY, CLIENT_NUMBER, ORIGINAL_SOURCE_SYSTEM_ID, SOURCE_SYSTEM_ID, CONTRACT_KEY, CONTRACT_CODE, 
	HOURS_SCHEDULED, HOURS_CANCELLED, HOURS_IN_REVIEW, HOURS_MISSED, HOURS_RESCHEDULED, FUTURE_HOURS, FUTURE_CANCELLED_HOURS, FUTURE_HOLD_HOURS, 
	HOURS_SERVED_WHERE_AUTH_EXISTS, HOURS_BILLED_WHERE_AUTH_EXISTS, HOURS_AUTHORIZED_WHERE_AUTH_EXISTS, HOURS_SERVED_ALL, HOURS_BILLED_ALL, 
	HOURS_AUTHORIZED_ALL, INCLUDE_FOR_CLIENTS, INCLUDE_FOR_HOURS, REVENUE_CATEGORY,	VISITS_SCHEDULED, VISITS_COMPLETED, VISITS_CANCELLED, VISITS_IN_REVIEW, VISITS_MISSED, VISITS_RESCHEDULED, FUTURE_VISITS, FUTURE_CANCELLED_VISITS, FUTURE_HOLD_VISITS, VISITS_ALL, VISITS_CLEAN_SHIFTS, VISITS_NEED_MAINTENANCE, CLIENT_STATE, CLIENT_ETHNICITY, CLIENT_GENDER, CLIENT_AGE, FIRST_SERVICE_MONTH, AGENCY, CCSI_FLAG, CLIENT_ACQUIRED_FLAG, 
	CLIENT_ACQUISITION_NAME, CLIENT_SERVED_FLAG, ETL_LAST_UPDATED_DATE	
	FROM UTILIZATION_DATA
    ORDER BY Period_Begin_Date, Client_Key;
SQL
	or_replace = true 
	is_secure = false 
}

