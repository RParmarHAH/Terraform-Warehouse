resource "snowflake_view" "DW_REPORT_VW_GATOR_CAREGIVER_CARE_PROGRAM" {
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "REPORT"
	name = "VW_GATOR_CAREGIVER_CARE_PROGRAM"
	statement = <<-SQL
	 ------------------------------------------------------------------------------------------------------------------------------
/*
Object Type : 	View
Object Name	: 	VW_GATOR_CAREGIVER_CARE_PROGRAM
Author		:	Mohit Vaghadiya
Description :
	- Provides Caregiver Care Program Information from Gator considering base as Client's Care Program
Rule Applicable For Service Period (Clients who received a services From CGs within mentioned timeframe) :
	Legacy Client (Erolled Prior To LCM) 	- 	Program Start Date To July 2023 (LCM Live Date)
	OSH Program Client						-	Program Start Date To Program End
	Enrolled On LCM Live Date				-	Program Start Date To LCM Dienrollment Date
	Enrolled After LCM Started				-	Enrollment Start Date To Enrollment End Date
Know Gap/Open Issues :
	** Considering the existing dedupe issue, we may not find few DW Clients/Caregiver matching with Original Client/Employee Key, which
	   should be fixed with new Client/Caregiver Cross Walk Version
	** There can be client/caregiver w/o Care Program which doesn't fall in above mentioned Rule. Means there will be gap
	   e.g. Clients who enrolled and dropped prior to LCM
*/
--*****************************************************************************************************************************
-- CHANGE LOG :
-- Version	Date(MM/DD/YYYY)	Author				Change Description
-- --------	----------------   	------------------	---------------------------------------------------------------------------
-- 1.0		09/08/2023   		Mohit Vaghadiya		Initial development
-- 1.1		10/19/2023			Mohit Vaghadiya		Added Filter to Exclude Test Account (Accounts w/o Employee Key)
-------------------------------------------------------------------------------------------------------------------------------
WITH CLIENT_CARE_PROGRAM AS
(
	SELECT CLIENT_CARE_PROGRAM.ACCOUNT_ID 
			, CLIENT_CARE_PROGRAM.CLIENT_KEY 
			, CLIENT_CARE_PROGRAM.ORIGINAL_CLIENT_KEY 
			, CLIENT_CARE_PROGRAM.BRANCH_KEY 
			, CLIENT_CARE_PROGRAM.CLIENT_FIRST_NAME 
			, CLIENT_CARE_PROGRAM.CLIENT_LAST_NAME 
			, CLIENT_CARE_PROGRAM.CARE_PROGRAM_NAME 
			, CLIENT_CARE_PROGRAM.CARE_PROGRAM_CODE 
			, CLIENT_CARE_PROGRAM.CLIENT_CARE_PROGRAM_STATUS 
			, CLIENT_CARE_PROGRAM.ROSTER_DISQUALIFICATION 
			, CLIENT_CARE_PROGRAM.GEOGRAPHY_DISQUALIFICATION 
			, CLIENT_CARE_PROGRAM.CARE_ACTIVE_DISQUALIFICATION 
			, CLIENT_CARE_PROGRAM.OPT_OUT_FLAG 
			, CLIENT_CARE_PROGRAM.OPT_OUT_REASON 
			-- OSH Program Info is not available in Gator ** Hard Coded Program Start/Ed Date below
			, IFF(CLIENT_CARE_PROGRAM.CARE_PROGRAM_CODE = 'OSH', '2022-01-01', CARE_PROGRAM.STARTDATE)::DATE AS PROGRAM_START_DATE
			, IFF(CLIENT_CARE_PROGRAM.CARE_PROGRAM_CODE = 'OSH', '2023-07-20', CARE_PROGRAM.ENDDATE)::DATE AS PROGRAM_END_DATE
	FROM DW_${var.SF_ENVIRONMENT}.REPORT.VW_GATOR_CLIENT_CARE_PROGRAM CLIENT_CARE_PROGRAM
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HEALTH_NAVIGATOR.CAREPROGRAM CARE_PROGRAM
		ON CARE_PROGRAM.SL_EXTERNAL_ID__C = CLIENT_CARE_PROGRAM.CARE_PROGRAM_CODE
	WHERE CLIENT_CARE_PROGRAM.CARE_PROGRAM_CODE IS NOT NULL
)
, CLIENT_ENROLLMENT_PERIOD AS
(
	-- Getting Client's Enrollment Period From LCM History
	SELECT ENROLLMENT.CLIENT_KEY
			, ENROLLMENT.PARTNER_CONTRACT_KEY
			, ENROLLMENT.PROGRAM_CODE
			, MIN(ENROLLMENT.ETL_INSERTED_DATE::DATE) AS ENROLLMENT_START_DATE
			, CLIENT_DISENROLLMENT.DISENROLLMENT_DATE::DATE ENROLLMENT_END_DATE
	FROM APP_DB_${var.SF_ENVIRONMENT}.CARE_COORDINATION.CLIENT_PROGRAM_MEMBERSHIP_STATUS_HISTORY ENROLLMENT,
	LATERAL 
	(
		SELECT MIN(ETL_INSERTED_DATE) AS DISENROLLMENT_DATE 
		FROM APP_DB_${var.SF_ENVIRONMENT}.CARE_COORDINATION.CLIENT_PROGRAM_MEMBERSHIP_STATUS_HISTORY DISENROLLMENT
		WHERE ENROLLMENT.CLIENT_KEY = DISENROLLMENT.CLIENT_KEY
				AND ENROLLMENT.PARTNER_CONTRACT_KEY = DISENROLLMENT.PARTNER_CONTRACT_KEY
				AND DISENROLLMENT.STATUS = 'Disenrolled'
				AND DISENROLLMENT.ETL_INSERTED_DATE > ENROLLMENT.ETL_INSERTED_DATE
	) AS CLIENT_DISENROLLMENT
	WHERE ENROLLMENT.STATUS = 'Enrolled'
	GROUP BY ALL
)
, CLIENT_CARE_PROGRAM_INFO AS
(
	-- Getting Client's Care Program Information along with Enrollment Start Date - End Date
	SELECT DISTINCT CARE_PROGRAM.CLIENT_KEY
					, CARE_PROGRAM.ORIGINAL_CLIENT_KEY
					, CARE_PROGRAM.BRANCH_KEY
					, CARE_PROGRAM.CLIENT_FIRST_NAME
					, CARE_PROGRAM.CLIENT_LAST_NAME
					, CARE_PROGRAM.CARE_PROGRAM_NAME
					, CARE_PROGRAM.CARE_PROGRAM_CODE
					, CARE_PROGRAM.CLIENT_CARE_PROGRAM_STATUS
					, CARE_PROGRAM.ROSTER_DISQUALIFICATION
					, CARE_PROGRAM.GEOGRAPHY_DISQUALIFICATION
					, CARE_PROGRAM.CARE_ACTIVE_DISQUALIFICATION
					, CARE_PROGRAM.OPT_OUT_FLAG
					, CARE_PROGRAM.OPT_OUT_REASON
					, CARE_PROGRAM.PROGRAM_START_DATE
					, CARE_PROGRAM.PROGRAM_END_DATE
					, CASE WHEN ER_PERIOD.ENROLLMENT_START_DATE = '2023-07-20' -- LCM Live ON Dev/PROD - DEV {2023-07-11} - PROD {2023-07-20}
								OR CARE_PROGRAM.CLIENT_CARE_PROGRAM_STATUS = 'Legacy'
								THEN CARE_PROGRAM.PROGRAM_START_DATE
						   ELSE NVL(ER_PERIOD.ENROLLMENT_START_DATE, CARE_PROGRAM.PROGRAM_START_DATE)
					  END::DATE AS ENROLLMENT_START_DATE
					, CASE WHEN CARE_PROGRAM.CARE_PROGRAM_CODE IN ('OSH')
								THEN CARE_PROGRAM.PROGRAM_END_DATE
						   WHEN CARE_PROGRAM.CLIENT_CARE_PROGRAM_STATUS = 'Legacy'
								THEN '2023-07-20'  -- LCM Live ON Dev/PROD - DEV {2023-07-11} - PROD {2023-07-20}
						   WHEN CARE_PROGRAM.CLIENT_CARE_PROGRAM_STATUS IN ('Enrolled', 'Pending Disenrollment')
						   		THEN NULL
						   ELSE ER_PERIOD.ENROLLMENT_END_DATE
					  END::DATE AS ENROLLMENT_END_DATE
	FROM CLIENT_CARE_PROGRAM CARE_PROGRAM
	LEFT JOIN CLIENT_ENROLLMENT_PERIOD ER_PERIOD
		ON ER_PERIOD.CLIENT_KEY = CARE_PROGRAM.CLIENT_KEY
			AND ER_PERIOD.PROGRAM_CODE = CARE_PROGRAM.CARE_PROGRAM_CODE
)
, CG_CLIENT_ENGAGEMENT AS
(
	-- Geting Client CG Engagement during Enrollment Start - End Date
	SELECT VISIT.EMPLOYEE_KEY
			, CARE_PROGRAM_NAME
			, CARE_PROGRAM_CODE
			, CLIENT_CARE_PROGRAM_STATUS 
			, ROSTER_DISQUALIFICATION
			, GEOGRAPHY_DISQUALIFICATION
			, CARE_ACTIVE_DISQUALIFICATION
			, OPT_OUT_FLAG
			, OPT_OUT_REASON
			, CLIENT_PROGRAM.ENROLLMENT_START_DATE
			, CLIENT_PROGRAM.ENROLLMENT_END_DATE
	FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.DIM_CLIENT_MERGED CLIENT
	INNER JOIN CLIENT_CARE_PROGRAM_INFO CLIENT_PROGRAM
		ON CLIENT_PROGRAM.ORIGINAL_CLIENT_KEY = CLIENT.ORIGINAL_CLIENT_KEY
	INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_VISIT_MERGED VISIT
		ON VISIT.CLIENT_KEY = CLIENT.CLIENT_KEY 
	INNER JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_CONTRACT CONTRACT
		ON CONTRACT.CONTRACT_KEY = VISIT.CONTRACT_KEY 
	INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.DIM_BRANCH_MERGED BRANCH
		ON BRANCH.ORIGINAL_BRANCH_KEY = VISIT.BRANCH_KEY 
	WHERE BRANCH.OFFICE_STATE_CODE IN ('PA', 'NY', 'IL', 'IN')
			AND CONTRACT.REVENUE_CATEGORY IN ('HH', 'HC')
			AND VISIT.CONFIRMED_FLAG = 'YES'
			AND VISIT.SERVICE_DATE BETWEEN DATEADD(DAYS, -14, CLIENT_PROGRAM.ENROLLMENT_START_DATE::DATE) AND NVL(CLIENT_PROGRAM.ENROLLMENT_END_DATE, CURRENT_DATE)::DATE
			AND CLIENT_PROGRAM.CARE_PROGRAM_CODE IS NOT NULL
	GROUP BY ALL
	HAVING SUM(VISIT.HOURS_SERVED) >= 4
)
, CAREGIVER_CARE_PROGRAM AS
(
	--CG Care Program along with Gator Account Information
	SELECT DISTINCT GATOR_CAREGIVER.ACCOUNT_ID
					, CG_ENG.CARE_PROGRAM_NAME
					, CG_ENG.CARE_PROGRAM_CODE
					, CG_ENG.CLIENT_CARE_PROGRAM_STATUS
					, CG_ENG.ROSTER_DISQUALIFICATION
					, CG_ENG.GEOGRAPHY_DISQUALIFICATION
					, CG_ENG.CARE_ACTIVE_DISQUALIFICATION
					, CG_ENG.OPT_OUT_FLAG
					, CG_ENG.OPT_OUT_REASON
					, CG_ENG.ENROLLMENT_START_DATE
					, CG_ENG.ENROLLMENT_END_DATE
	FROM DW_${var.SF_ENVIRONMENT}.REPORT.VW_GATOR_CAREGIVER_MAPPING GATOR_CAREGIVER
	INNER JOIN CG_CLIENT_ENGAGEMENT CG_ENG
		ON CG_ENG.EMPLOYEE_KEY = GATOR_CAREGIVER.ORIGINAL_EMPLOYEE_KEY 
	WHERE 1=1
			AND CG_ENG.CARE_PROGRAM_CODE IS NOT NULL
)
SELECT DISTINCT GATOR_CAREGIVER.ACCOUNT_ID
			, GATOR_CAREGIVER.EMPLOYEE_KEY
			, GATOR_CAREGIVER.ORIGINAL_EMPLOYEE_KEY
			, GATOR_CAREGIVER.EMPLOYEE_FIRST_NAME
			, GATOR_CAREGIVER.EMPLOYEE_LAST_NAME
			, CG_PROGRAM.CARE_PROGRAM_NAME
			, CG_PROGRAM.CARE_PROGRAM_CODE
			, CG_PROGRAM.CLIENT_CARE_PROGRAM_STATUS
			, CG_PROGRAM.ROSTER_DISQUALIFICATION
			, CG_PROGRAM.GEOGRAPHY_DISQUALIFICATION
			, CG_PROGRAM.CARE_ACTIVE_DISQUALIFICATION
			, CG_PROGRAM.OPT_OUT_FLAG
			, CG_PROGRAM.OPT_OUT_REASON
FROM DW_${var.SF_ENVIRONMENT}.REPORT.VW_GATOR_CAREGIVER_MAPPING GATOR_CAREGIVER
LEFT JOIN CAREGIVER_CARE_PROGRAM CG_PROGRAM
	ON CG_PROGRAM.ACCOUNT_ID = GATOR_CAREGIVER.ACCOUNT_ID
WHERE GATOR_CAREGIVER.EMPLOYEE_KEY IS NOT NULL -- Exluding Test Records W/O Gator Employee Key
ORDER BY GATOR_CAREGIVER.ACCOUNT_ID;
SQL
	or_replace = true 
	is_secure = false 
}

