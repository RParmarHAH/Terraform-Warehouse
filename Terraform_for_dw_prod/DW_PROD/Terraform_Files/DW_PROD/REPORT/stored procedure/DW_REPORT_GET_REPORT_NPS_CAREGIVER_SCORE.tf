resource "snowflake_procedure" "DW_REPORT_GET_REPORT_NPS_CAREGIVER_SCORE" {
	name ="GET_REPORT_NPS_CAREGIVER_SCORE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "REPORT"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  NPS_CAREGIVER_SCORE
--
-- PURPOSE: Populating NPS score from CAREGIVER along with other fields coming through Qualtrics PULSE Survey.
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 06-04-2023  Meet Hariyani         Initial development.
-- 01-05-2023  Meet Hariyani         Added SENT_DATE.
-- 04-10-2023  Meet Hariyani         Filterd null and TEST employee_keys
-- 11-01-2023  Meet Hariyani         Added filter on status to avoid duplicate.
-- 01-08-2024  Meet Hariyani         Removed dedupe table CTE and driving employee_key from business layer wh_employee_key from DSRH table.
-- 01-08-2024  Meet Hariyani         To capture branch_name and branch_key added join on fact_visit_merged.
--*****************************************************************************************************************************
INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}.REPORT.NPS_CAREGIVER_SCORE
WITH BRANCH AS (
select 
      original_employee_key
     ,branch_key
     ,branch_name
     ,row_number() over(partition by original_employee_key order by report_date desc) rn
from dw_prod.integration.fact_visit_merged
qualify rn = 1
)
,caregiver_survey AS(
SELECT survey_id,survey_key
FROM DW_${var.SF_ENVIRONMENT}.hah.DIM_SURVEY 
WHERE client_employee_indicator = ''EMPLOYEE''
)
,Pulse_survey AS (
SELECT DISTINCT 
    coalesce(SRH.WH_EMPLOYEE_KEY,SRH.EMPLOYEE_KEY) as wh_employee_key
    ,SRH.survey_response_header_key
    ,SRH.RECORDED_DATE
    ,SRH.START_DATE
    ,SRH.END_DATE
    ,coalesce(DE.PRIMARY_BRANCH_NAME,br.branch_name) AS BRANCH_NAME
    ,coalesce(DE.PRIMARY_BRANCH_KEY,br.branch_key) AS BRANCH_KEY
    ,DE.EMPLOYEE_ID
    ,DE.EMPLOYEE_FIRST_NAME
    ,DE.EMPLOYEE_LAST_NAME
    ,DD.SENT_AT AS SENT_DATE
FROM DW_${var.SF_ENVIRONMENT}.HAH.DIM_SURVEY_RESPONSE_HEADER SRH
LEFT JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.DIM_EMPLOYEE_MERGED DE ON DE.ORIGINAL_EMPLOYEE_KEY = coalesce(SRH.WH_EMPLOYEE_KEY,SRH.EMPLOYEE_KEY)
LEFT JOIN branch br ON br.ORIGINAL_EMPLOYEE_KEY =  coalesce(SRH.WH_EMPLOYEE_KEY,SRH.EMPLOYEE_KEY)
LEFT JOIN caregiver_survey cs ON cs.survey_key = srh.SURVEY_KEY 
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.FACT_DISTRIBUTION DD ON SRH.survey_response_header_key = DD.survey_response_header_key 
WHERE srh.survey_key = cs.survey_key AND SRH.employee_key NOT IN (''TEST'') AND SRH.employee_key IS NOT NULL AND SRH.status <> 4)
,NPS AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS NPS ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''recommend help at home'' AND A.SURVEY_KEY = CS.SURVEY_KEY) --SELECT * FROM NPS;--6,125
,belonging_text AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS sense_of_belonging_text ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''sense of belonging text''AND A.SURVEY_KEY = CS.SURVEY_KEY )
,clockout_text AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS easily_clockin_clockout_text ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''easily clockin clockout text''AND A.SURVEY_KEY = CS.SURVEY_KEY )
,clockout AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS easily_clockin_clockout ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''easily clockin clockout'' AND A.SURVEY_KEY = CS.SURVEY_KEY)
,experience AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS improve_your_experience ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''improve your experience'' AND A.SURVEY_KEY = CS.SURVEY_KEY)
,schedule AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS satisfied_with_schedule ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''satisfied with schedule''AND A.SURVEY_KEY = CS.SURVEY_KEY)
,support AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS support_from_office_team ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''support from office team''AND A.SURVEY_KEY = CS.SURVEY_KEY)
,support_text AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS support_from_office_team_text ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''support from office team text'' AND A.SURVEY_KEY = CS.SURVEY_KEY)
,paid AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS paid_on_time ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''paid on time''AND A.SURVEY_KEY = CS.SURVEY_KEY)
,belonging AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS sense_of_belonging ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''sense of belonging''AND A.SURVEY_KEY = CS.SURVEY_KEY)
,schedule_text AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS satisfied_with_schedule_text ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''satisfied with schedule text''AND A.SURVEY_KEY = CS.SURVEY_KEY)
,prepared_text AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS prepared_for_new_client_text ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''prepared for new client text''AND A.SURVEY_KEY = CS.SURVEY_KEY)
,paid_text AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS paid_on_time_text ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''paid on time text''AND A.SURVEY_KEY = CS.SURVEY_KEY)
,prepared AS (
SELECT b.employee_key ,NVL(c.CHOICE_TEXT::VARCHAR,TRIM(SPLIT_PART(b.COMMENTS, ''='', 2))::VARCHAR) AS prepared_for_new_client ,SURVEY_RESPONSE_HEADER_KEY
FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_MAPPING a
INNER JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_SURVEY_QUESTION_RESPONSE_MAPPING b ON a.SURVEY_QUESTION_KEY = b.SURVEY_QUESTION_KEY
left JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_QUESTION_CHOICE_MAPPING c ON c.CHOICE_LABLE::VARCHAR = TRIM(SPLIT_PART(b.COMMENTS, ''='', 2)) AND b.SURVEY_QUESTION_KEY = c.SURVEY_QUESTION_KEY
LEFT JOIN CAREGIVER_SURVEY CS ON CS.SURVEY_KEY = B.SURVEY_KEY
WHERE QUESTION_CONTEXT = ''prepared for new client''AND A.SURVEY_KEY = CS.SURVEY_KEY)
,FINAL AS (
SELECT 
	PS.WH_EMPLOYEE_KEY,
	PS.EMPLOYEE_ID,
	PS.EMPLOYEE_FIRST_NAME,
	PS.EMPLOYEE_LAST_NAME,
	ps.survey_response_header_key,
	PS.RECORDED_DATE,
    PS.SENT_DATE,
	PS.START_DATE,
	PS.END_DATE,
	PS.BRANCH_NAME AS BRANCH_NAME,
	PS.BRANCH_KEY AS BRANCH_KEY,
	nps.NPS,
	e.improve_your_experience,
	bl.sense_of_belonging,
	bt.sense_of_belonging_text,
	c.easily_clockin_clockout,
	ct.easily_clockin_clockout_text,
	su.support_from_office_team,
	sut.support_from_office_team_text,
	p.paid_on_time,
	paid.paid_on_time_text,
	sc.satisfied_with_schedule,
	st.satisfied_with_schedule_text,
	pr.prepared_for_new_client,
	pt.prepared_for_new_client_text
FROM pulse_survey ps 
LEFT JOIN NPS ON NPS.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN belonging_text bt ON bt.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN clockout_text CT ON CT.survey_response_header_key = PS.survey_response_header_key
LEFT JOIN clockout C ON C.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN experience e ON e.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN schedule sc ON sc.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN support su ON su.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN support_text sut ON sut.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN paid p ON p.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN belonging bl ON bl.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN schedule_text st ON st.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN prepared_text pt ON pt.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN paid_text paid ON paid.survey_response_header_key = ps.survey_response_header_key
LEFT JOIN prepared pr ON pr.survey_response_header_key = ps.survey_response_header_key
)SELECT * FROM FINAL;

RETURN(''SUCCESS'');

END
 EOT
}

