resource "snowflake_procedure" "DW_REPORT_GET_REPORT_SCHEDULE_METRICS_MONTHLY" {
	name ="GET_REPORT_SCHEDULE_METRICS_MONTHLY"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "REPORT"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE 
return_result VARCHAR;
BEGIN 
    --*****************************************************************************************************************************
-- NAME:  NEW_METRICS_MONTHLY
--
-- PURPOSE: Creates derived monthly metrics for each Employee, Client, Branch, Contract and Month based on visit/service data
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------        
-- 11/09/22    Saurav Purohit        Initial development
--09/05/23      Nutan jagnade        FUTURE_HOURS_NO_CAREGIVER column added
-- 24/05/23	   Sanket jain  		 added PARTNER_CONTRACT_SERVICE_KEY
--*****************************************************************************************************************************

INSERT OVERWRITE INTO REPORT.SCHEDULE_METRICS_MONTHLY
	(REPORT_DATE, SOURCE_SYSTEM_ID, ORIGINAL_CLIENT_KEY, CLIENT_KEY, CONTRACT_KEY, PARTNER_CONTRACT_SERVICE_KEY, ORIGINAL_EMPLOYEE_KEY, EMPLOYEE_KEY, BRANCH_KEY, VISITS_SCHEDULED, 
	VISITS_COMPLETED, VISITS_CANCELLED, VISITS_IN_REVIEW, FUTURE_VISITS,FUTURE_VISITS_NO_CAREGIVER, FUTURE_CANCELLED_VISITS, FUTURE_HOLD_VISITS, VISITS_MISSED, VISITS_RESCHEDULED, 
	HOURS_SCHEDULED, HOURS_SERVED, HOURS_CANCELLED, HOURS_IN_REVIEW, FUTURE_HOURS,FUTURE_HOURS_NO_CAREGIVER, FUTURE_CANCELLED_HOURS, FUTURE_HOLD_HOURS, HOURS_MISSED, HOURS_RESCHEDULED, 
	CLIENT_SERVED_FLAG, ETL_TASK_KEY, ETL_INSERTED_TASK_KEY, ETL_INSERTED_DATE, ETL_INSERTED_BY, ETL_LAST_UPDATED_DATE, ETL_LAST_UPDATED_BY, ETL_DELETED_FLAG)
	--


	WITH METRICS AS (
	SELECT
		DATE_TRUNC(MONTH, VISIT.SERVICE_DATE) REPORT_DATE,
		VISIT.SOURCE_SYSTEM_ID,
		VISIT.ORIGINAL_CLIENT_KEY,  
		VISIT.CLIENT_KEY,
		VISIT.CONTRACT_KEY,
		VISIT.PARTNER_CONTRACT_SERVICE_KEY,
		VISIT.ORIGINAL_EMPLOYEE_KEY,
		VISIT.EMPLOYEE_KEY,
		VISIT.BRANCH_KEY,
        VISIT.SCHEDULED_EMPLOYEE_KEY,
COUNT(VISIT.VISIT_KEY) --OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS VISITS_SCHEDULED
			,
		COUNT(iff(VISIT.CONFIRMED_FLAG = ''YES'', VISIT.VISIT_KEY, NULL)) -- OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY,VISIT.EMPLOYEE_KEY) 
			AS VISITS_COMPLETED
			,
		COUNT(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND VISIT.SERVICE_DATE <= CURRENT_DATE() 
					AND (VISIT.VISIT_STATUS_NAME = ''Did not happen'' OR VISIT.SCHEDULE_STATUS_NAME in (''Hold'',''Cancelled'')), VISIT.VISIT_KEY, NULL))
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS VISITS_CANCELLED
			,
		COUNT(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND VISIT.SERVICE_DATE <= CURRENT_DATE() 
					AND VISIT.VISIT_STATUS_NAME = ''In Review'',VISIT.VISIT_KEY, NULL))
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS VISITS_IN_REVIEW
			,
		COUNT(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND (VISIT.VISIT_STATUS_NAME = ''Future'' OR 
							(VISIT.SERVICE_DATE > CURRENT_DATE() 
							AND NVL(VISIT.SCHEDULE_STATUS_NAME,''0'') NOT IN (''Hold'',''Cancelled'') 
							AND nvl(VISIT.VISIT_STATUS_NAME,''0'') <> ''Did not happen''
							)
						),VISIT.VISIT_KEY, NULL))
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS FUTURE_VISITS
			,
		COUNT(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND VISIT.SERVICE_DATE > CURRENT_DATE() 
					AND (VISIT.VISIT_STATUS_NAME = ''Did not happen'' OR VISIT.SCHEDULE_STATUS_NAME in (''Cancelled''))
					,VISIT.VISIT_KEY, NULL))
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS FUTURE_CANCELLED_VISITS
			,
		COUNT(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND VISIT.SERVICE_DATE > CURRENT_DATE() 
					AND VISIT.SCHEDULE_STATUS_NAME in (''Hold'')
					,VISIT.VISIT_KEY, NULL))
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS FUTURE_HOLD_VISITS
			,
		COUNT(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') and
       (VISIT.VISIT_STATUS_NAME = ''Future'' OR VISIT.SERVICE_DATE > CURRENT_DATE()) 
        AND VISIT.SCHEDULED_EMPLOYEE_KEY IS NULL
		AND NVL(VISIT.SCHEDULE_STATUS_NAME,''0'')  IN ( ''Scheduled-Open'', ''Scheduled - Open'')
		AND NVL(VISIT.VISIT_STATUS_NAME,''0'') <> ''Did not happen''
		,VISIT.VISIT_KEY,NULL))
			AS FUTURE_VISITS_NO_CAREGIVER,
		COUNT(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND (VISIT.SERVICE_DATE <= CURRENT_DATE() 
					AND NVL(VISIT.SCHEDULE_STATUS_NAME,''0'') <> ''Hold'' 
					AND VISIT.VISIT_STATUS_NAME IS NULL), VISIT.VISIT_KEY, NULL))
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS VISITS_MISSED
			,
		COUNT(iff(VISIT.SCHEDULE_STATUS_CODE = ''s03'', VISIT.VISIT_KEY, NULL)) 
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS VISITS_RESCHEDULED,
		--
		NVL(SUM(VISIT.SCHEDULE_DURATION), 0) --OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS HOURS_SCHEDULED
			,
			--
		NVL(SUM(iff(VISIT.CONFIRMED_FLAG = ''YES'',VISIT.HOURS_SERVED,0)),0)
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS HOURS_SERVED
			,
		NVL(SUM(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND  VISIT.SERVICE_DATE <= CURRENT_DATE() 
					AND (VISIT.VISIT_STATUS_NAME = ''Did not happen'' OR VISIT.SCHEDULE_STATUS_NAME in (''Hold'',''Cancelled'')),VISIT.SCHEDULE_DURATION,0)),0)
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS HOURS_CANCELLED
			,
		NVL(SUM(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND VISIT.SERVICE_DATE <= CURRENT_DATE() 
					AND VISIT.VISIT_STATUS_NAME = ''In Review'',VISIT.SCHEDULE_DURATION,0)),0)
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS HOURS_IN_REVIEW
			,
		NVL(SUM(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND (VISIT.VISIT_STATUS_NAME = ''Future'' OR 
						(VISIT.SERVICE_DATE > CURRENT_DATE() AND NVL(VISIT.SCHEDULE_STATUS_NAME,''0'') NOT IN (''Hold'',''Cancelled'') AND nvl(VISIT.VISIT_STATUS_NAME,''0'') <> ''Did not happen'')
						),VISIT.SCHEDULE_DURATION,0)),0) 
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS FUTURE_HOURS
			,
--        NVL(SUM(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'')
--                        AND (VISIT.VISIT_STATUS_NAME = ''Future'' OR
--                                        (VISIT.SERVICE_DATE > CURRENT_DATE() AND  VISIT.SCHEDULED_EMPLOYEE_KEY IS NULL
--										AND NVL(VISIT.SCHEDULE_STATUS_NAME,''0'')  IN ( ''Scheduled_Open'')
--										AND NVL(VISIT.VISIT_STATUS_NAME,''0'') <> ''Did not happen''))
--										,VISIT.SCHEDULE_DURATION,0)),0)
NVL(SUM(iff((VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') and
       (VISIT.VISIT_STATUS_NAME = ''Future'' OR VISIT.SERVICE_DATE > CURRENT_DATE()) 
        AND VISIT.SCHEDULED_EMPLOYEE_KEY IS NULL
		AND NVL(VISIT.SCHEDULE_STATUS_NAME,''0'')  IN ( ''Scheduled-Open'', ''Scheduled - Open'')
		AND NVL(VISIT.VISIT_STATUS_NAME,''0'') <> ''Did not happen'')
		,VISIT.SCHEDULE_DURATION,0)),0)
			AS FUTURE_HOURS_NO_CAREGIVER,
		NVL(SUM(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND VISIT.SERVICE_DATE > CURRENT_DATE() 
					AND (VISIT.VISIT_STATUS_NAME = ''Did not happen'' OR VISIT.SCHEDULE_STATUS_NAME in (''Cancelled'')),VISIT.SCHEDULE_DURATION,0)),0)
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			FUTURE_CANCELLED_HOURS
			,
		NVL(SUM(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND VISIT.SERVICE_DATE > CURRENT_DATE() 
					AND VISIT.SCHEDULE_STATUS_NAME in (''Hold''), VISIT.SCHEDULE_DURATION,0)),0)
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS FUTURE_HOLD_HOURS
			,
		NVL(SUM(iff(VISIT.CONFIRMED_FLAG IN (''NO'',''UNKNOWN'') 
					AND (VISIT.SERVICE_DATE <= CURRENT_DATE() 
					AND NVL(VISIT.SCHEDULE_STATUS_NAME,''0'') <> ''Hold'' 
					AND VISIT.VISIT_STATUS_NAME IS NULL),VISIT.SCHEDULE_DURATION,0)),0)
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			HOURS_MISSED
			,
		NVL(SUM(iff(VISIT.SCHEDULE_STATUS_CODE = ''s03'',VISIT.SCHEDULE_DURATION,0)),0)
			--OVER(PARTITION BY DATE_TRUNC(MONTH, VISIT.REPORT_DATE), VISIT.CLIENT_KEY, VISIT.CONTRACT_KEY, VISIT.EMPLOYEE_KEY) 
			AS HOURS_RESCHEDULED
			,
		IFF(VISITS_COMPLETED = 0, FALSE, TRUE) AS CLIENT_SERVED_FLAG
	FROM INTEGRATION.FACT_VISIT_MERGED AS VISIT
	GROUP BY DATE_TRUNC(MONTH, VISIT.SERVICE_DATE), 
		VISIT.CLIENT_KEY, 
		VISIT.SOURCE_SYSTEM_ID,
		VISIT.ORIGINAL_CLIENT_KEY,
		VISIT.ORIGINAL_EMPLOYEE_KEY, 
		VISIT.EMPLOYEE_KEY,
		VISIT.CONTRACT_KEY,
		VISIT.PARTNER_CONTRACT_SERVICE_KEY,
		VISIT.BRANCH_KEY ,
        VISIT.SCHEDULED_EMPLOYEE_KEY
		)
	SELECT REPORT_DATE, SOURCE_SYSTEM_ID, ORIGINAL_CLIENT_KEY, CLIENT_KEY, CONTRACT_KEY, PARTNER_CONTRACT_SERVICE_KEY, ORIGINAL_EMPLOYEE_KEY, EMPLOYEE_KEY, BRANCH_KEY, 
	VISITS_SCHEDULED, VISITS_COMPLETED, VISITS_CANCELLED, VISITS_IN_REVIEW, FUTURE_VISITS,FUTURE_VISITS_NO_CAREGIVER, FUTURE_CANCELLED_VISITS, FUTURE_HOLD_VISITS, VISITS_MISSED, VISITS_RESCHEDULED, 
	HOURS_SCHEDULED, HOURS_SERVED, HOURS_CANCELLED, HOURS_IN_REVIEW, FUTURE_HOURS,FUTURE_HOURS_NO_CAREGIVER, FUTURE_CANCELLED_HOURS, FUTURE_HOLD_HOURS, HOURS_MISSED, HOURS_RESCHEDULED, 
	CLIENT_SERVED_FLAG ,-- ETL Fields	
       :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
       :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,      
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	CURRENT_USER as ETL_INSERTED_BY ,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE,
	CURRENT_USER as ETL_LAST_UPDATED_BY,
	0 as ETL_DELETED_FLAG
	FROM METRICS ;
          
SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result
FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;

 EOT
}

