resource "snowflake_procedure" "DW_REPORT_GET_REPORT_CGR_OBS_SURVEY_RESPONSES_CC" {
	name ="GET_REPORT_CGR_OBS_SURVEY_RESPONSES_CC"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "REPORT"
	language  = "JAVASCRIPT"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

        var sql = `

--*****************************************************************************************************************************
-- NAME:  CGR_OBS_SURVEY_RESPONSES_CC
-- PURPOSE: Qualtrics HM Survey Responses
--			
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 11/23/22   Ayshwarya	            Initial version
--*****************************************************************************************************************************

INSERT OVERWRITE INTO REPORT.CGR_OBS_SURVEY_RESPONSES_CC


WITH FlattenedResponses AS 


(

SELECT * ,c.value::string AS Response
FROM 
(SELECT CAST(DS.RECORDED_DATE AS DATE) AS RECORDED_DATE,
DS.SURVEY_RESPONSE_HEADER_KEY,
DS.CLIENT_KEY,
DS.EMPLOYEE_KEY,
DS.BRANCH_KEY,
DP.PARTNER_CODE,
LANGUAGE,
PROGRESS,
FS.QUESTION_ID,
FSD.ANSWER,
FS.SURVEY_QUESTION_KEY

FROM INTEGRATION.DIM_SURVEY_RESPONSE_HEADER_MERGED DS
INNER JOIN HAH.FACT_SURVEY_RESPONSE_DETAIL  FSD ON FSD.SURVEY_RESPONSE_HEADER_KEY  = DS.SURVEY_RESPONSE_HEADER_KEY 
INNER JOIN HAH.FACT_SURVEY_QUESTION FS ON FS.SURVEY_QUESTION_KEY = FSD.SURVEY_QUESTION_KEY 
LEFT JOIN HAH.DIM_PARTNER DP ON DP.PARTNER_KEY = DS.PARTNER_KEY
WHERE DS.SURVEY_ID IN ( ''SV_9R11KQoz9btyWto'',''SV_8rhFLN1ZJEdKRds'')) ,
     LATERAL FLATTEN(INPUT=>SPLIT(ANSWER, '','')) c
     
     ),

RESPONSES AS 

(SELECT 
RECORDED_DATE,
SURVEY_RESPONSE_HEADER_KEY,
CLIENT_KEY,
EMPLOYEE_KEY,
BRANCH_KEY,
PARTNER_CODE,
LANGUAGE,
FIRST_VALUE( RECORDED_DATE) OVER(PARTITION BY EMPLOYEE_KEY,CLIENT_KEY  ORDER BY RECORDED_DATE) AS CLIENT_EMPLOYEE_FIRST_SURVEY_DATE,
FIRST_VALUE( RECORDED_DATE) OVER(PARTITION BY EMPLOYEE_KEY ORDER BY RECORDED_DATE) AS EMPLOYEE_FIRST_SURVEY_DATE,
FIRST_VALUE( RECORDED_DATE) OVER(PARTITION BY CLIENT_KEY  ORDER BY RECORDED_DATE) AS CLIENT_FIRST_SURVEY_DATE,
LAST_VALUE( RECORDED_DATE) OVER(PARTITION BY EMPLOYEE_KEY,CLIENT_KEY  ORDER BY RECORDED_DATE) AS CLIENT_EMPLOYEE_LATEST_SURVEY_DATE,
LAST_VALUE( RECORDED_DATE) OVER(PARTITION BY EMPLOYEE_KEY ORDER BY RECORDED_DATE) AS EMPLOYEE_LATEST_SURVEY_DATE,
LAST_VALUE( RECORDED_DATE) OVER(PARTITION BY CLIENT_KEY  ORDER BY RECORDED_DATE) AS CLIENT_LATEST_SURVEY_DATE,
CASE WHEN PROGRESS  = 100 THEN ''COMPLETE'' ELSE ''PARTIAL'' END AS SURVEY_STATUS,
MAX(CASE WHEN F.QUESTION_ID = ''QID29'' THEN RESPONSE END) AS GENERAL_APPEARANCE,
MAX(CASE WHEN F.QUESTION_ID = ''QID30_TEXT'' THEN RESPONSE END) AS APPEARANCE_NOTES,
MAX(CASE WHEN F.QUESTION_ID = ''QID62'' AND RESPONSE ILIKE ''%EATING%'' THEN 1 ELSE 0 END) AS EATING_HABITS,
MAX(CASE WHEN F.QUESTION_ID = ''QID62'' AND RESPONSE ILIKE ''%DRINKING%'' THEN 1 ELSE 0 END) AS DRINKING_HABITS,
SUM(CASE WHEN F.QUESTION_ID = ''QID31'' AND RESPONSE ILIKE ''%TRANSFERS%'' THEN ANSWER_SCALE  ELSE 0 END )AS CHANGES_TRANSFERS,
SUM(CASE WHEN F.QUESTION_ID = ''QID31'' AND RESPONSE ILIKE ''%WALKING%'' THEN ANSWER_SCALE  ELSE 0 END )AS CHANGES_WALKING,
MAX(CASE WHEN F.QUESTION_ID = ''QID32'' THEN RESPONSE END )AS MISSED_MEDICATIONS,
MAX(CASE WHEN F.QUESTION_ID = ''QID33_TEXT'' THEN RESPONSE END) AS MISSED_MEDICATIONS_DETAILS,
MAX(CASE WHEN F.QUESTION_ID = ''QID36'' THEN RESPONSE END) AS CHANGED_MEDICATION,
MAX(CASE WHEN F.QUESTION_ID = ''QID37_TEXT'' THEN RESPONSE END) AS  CHANGED_MEDICATION_DETAILS,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_3''THEN ANSWER_SCALE END) AS CHANGES_AGITATION,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_7''THEN ANSWER_SCALE END) AS CHANGES_ANKLELEG_SWELLING,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_6''THEN ANSWER_SCALE END) AS CHANGES_BREATHING,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_2''THEN ANSWER_SCALE END) AS CHANGES_CONFUSION,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_4''THEN ANSWER_SCALE END) AS  CHANGES_DAYTIME_SLEEPINESS,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_5''THEN ANSWER_SCALE END) AS CHANGES_PAIN,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_1''THEN ANSWER_SCALE END) AS  CHANGES_SADNESS,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_9''THEN ANSWER_SCALE END) AS CHANGES_SKIN_BREAKDOWN,
MAX(CASE WHEN F.QUESTION_ID = ''QID34_8''THEN ANSWER_SCALE END) AS CHANGES_SWELLING_ELSEWHERE,
MAX(CASE WHEN F.QUESTION_ID = ''QID35''THEN ANSWER_SCALE END) AS CHANGES_SLEEPING_PATTERNS,
SUM(CASE WHEN F.QUESTION_ID = ''QID38'' AND RESPONSE ILIKE ''%URINATION%'' THEN ANSWER_SCALE  ELSE 0 END )AS URINATION_FREQUENCY,
MAX(CASE WHEN F.QUESTION_ID = ''QID38'' AND RESPONSE ILIKE ''%BLADDER%'' THEN 1  ELSE 0 END )AS BLADDER_BOWEL_CONTROL,
MAX(CASE WHEN F.QUESTION_ID = ''QID38'' AND RESPONSE ILIKE ''%NO BOWEL%'' THEN 1  ELSE 0 END )AS BOWEL_MOVEMENT,
MAX(CASE WHEN F.QUESTION_ID = ''QID38'' AND RESPONSE ILIKE ''%URINE%'' THEN 1  ELSE 0 END )AS URINE_SMELL,
MAX(CASE WHEN F.QUESTION_ID = ''QID38'' AND RESPONSE ILIKE ''%DIARRHEA%'' THEN 1  ELSE 0 END )AS DIARRHEA_ISSUES,
MAX(CASE WHEN F.QUESTION_ID = ''QID39''THEN RESPONSE END) AS FALLEN_SINCE_LAST_VISIT,
MAX(CASE WHEN F.QUESTION_ID = ''QID50''THEN RESPONSE END) AS FALL_RECORDED_RISKCONNECT,
MAX(CASE WHEN F.QUESTION_ID = ''QID40_1_TEXT''THEN RESPONSE END) AS INJURY_FROM_FALL,
MAX(CASE WHEN F.QUESTION_ID = ''QID41''THEN RESPONSE END) AS ERVISIT_SINCE_LAST_VISIT,
MAX(CASE WHEN F.QUESTION_ID = ''QID53''THEN RESPONSE END) AS URGENTVISIT_SINCE_LAST_VISIT,
MAX(CASE WHEN F.QUESTION_ID = ''QID42''THEN RESPONSE END) AS THREE_PLUS_DAYS_OF_FOOD,
MAX(CASE WHEN F.QUESTION_ID = ''QID49''THEN RESPONSE END) AS  CURRENT_FOOD_SUPPLY,
MAX(CASE WHEN F.QUESTION_ID = ''QID43_1''THEN RESPONSE END) AS  WORKING_SMOKE_DETECTOR,
MAX(CASE WHEN F.QUESTION_ID = ''QID43_5''THEN RESPONSE END) AS  WORKING_ELECTRICAL_SYSTEM,
MAX(CASE WHEN F.QUESTION_ID = ''QID43_4''THEN RESPONSE END) AS  WORKING_FURNACE,
MAX(CASE WHEN F.QUESTION_ID = ''QID43_6''THEN RESPONSE END) AS HOME_FREE_OF_PESTS,
MAX(CASE WHEN F.QUESTION_ID = ''QID43_2''THEN RESPONSE END) AS WORKING_OVEN,
MAX(CASE WHEN F.QUESTION_ID = ''QID43_3''THEN RESPONSE END) AS WORKING_STOVE,
MAX(CASE WHEN F.QUESTION_ID = ''QID51_4''THEN RESPONSE END) AS DIASTOLIC_BLOOD_PRESSURE1,
MAX(CASE WHEN F.QUESTION_ID = ''QID51_1''THEN RESPONSE END) AS SYSTOLIC_BLOOD_PRESSURE1,
MAX(CASE WHEN F.QUESTION_ID = ''QID55_4''THEN RESPONSE END)  AS DIASTOLIC_BLOOD_PRESSURE2,
MAX(CASE WHEN F.QUESTION_ID = ''QID55_1''THEN RESPONSE END)  AS SYSTOLIC_BLOOD_PRESSURE2,
MAX(CASE WHEN F.QUESTION_ID = ''QID56_TEXT''THEN RESPONSE END)  AS MEDICATIONS_FOOD_IN_LAST_24HOURS,
MAX(CASE WHEN F.QUESTION_ID = ''QID48_4_TEXT'' THEN TRIM(REGEXP_REPLACE(RESPONSE,''[a-z/-/A-z/,/’/''''/]'','''')) END ) AS CLIENT_WEIGHT,
MAX(CASE WHEN RESPONSE ILIKE ''%lb%'' THEN ''LBS''WHEN RESPONSE ILIKE ''%poun%'' THEN ''LBS''
WHEN RESPONSE ILIKE ''%pd%'' THEN ''LBS'' WHEN RESPONSE ILIKE ''%lib%'' THEN ''LBS''
WHEN RESPONSE ILIKE ''%kg%''  THEN ''KG''WHEN RESPONSE ILIKE ''%kil%'' THEN ''KG''END) AS WEIGHT_UNITS,
MAX(CASE WHEN F.QUESTION_ID = ''QID45'' AND RESPONSE = ''Yes'' THEN ''TRUE'' ELSE ''FALSE'' END)  AS GAINED_LOST_5LBS,
MAX(CASE WHEN F.QUESTION_ID = ''QID46'' THEN RESPONSE END ) AS DIABETIC,
MAX(CASE WHEN F.QUESTION_ID = ''QID47_4_TEXT'' THEN RESPONSE END)  AS LAST_BLOOD_SUGAR_READING,
MAX(CASE WHEN F.QUESTION_ID = ''QID601_1'' THEN RESPONSE END)  AS LAST_BLOOD_SUGAR_READING_MONTH,
MAX(CASE WHEN F.QUESTION_ID = ''QID603_1'' THEN RESPONSE END)  AS LAST_BLOOD_SUGAR_READING_YEAR,
MAX(CASE WHEN F.QUESTION_ID = ''QID602_1'' THEN RESPONSE END)  AS LAST_BLOOD_SUGAR_READING_DAY,
MAX(CASE WHEN F.QUESTION_ID = ''QID57_1_TEXT'' THEN RESPONSE END)  AS CURRENT_BLOOD_SUGAR
FROM FlattenedResponses F
LEFT JOIN HAH.FACT_SURVEY_RESPONSE_SCALE_MAPPING FSM ON FSM.SURVEY_QUESTION_KEY = F.SURVEY_QUESTION_KEY AND UPPER(F.RESPONSE) = FSM.ANSWER 
GROUP BY 
RECORDED_DATE,
SURVEY_RESPONSE_HEADER_KEY,
CLIENT_KEY ,
BRANCH_KEY,
EMPLOYEE_KEY,
PARTNER_CODE,
LANGUAGE,
PROGRESS),

VISITS AS

( SELECT  DISTINCT SERVICE_DATE AS CORRESPONDINGVISITDT ,F.CLIENT_KEY ,F.EMPLOYEE_KEY, f.recorded_date
FROM INTEGRATION.FACT_VISIT_MERGED V
INNER JOIN FlattenedResponses F ON F.CLIENT_KEY = V.CLIENT_KEY AND V.EMPLOYEE_KEY  = f.EMPLOYEE_KEY AND  V.SERVICE_DATE = f.RECORDED_DATE
WHERE V.CONFIRMED_FLAG = ''YES''
),

PRIORVISITS AS

(SELECT 
SERVICE_DATE AS PRIORVISITDT, vi.CLIENT_KEY ,vi.EMPLOYEE_KEY,CORRESPONDINGVISITDT,ROW_NUMBER ()OVER(PARTITION BY V.EMPLOYEE_KEY,V.CLIENT_KEY,RECORDED_DATE  ORDER BY SERVICE_DATE DESC ) AS RowNum
FROM INTEGRATION.FACT_VISIT_MERGED V
INNER JOIN Visits vi ON vi.CLIENT_KEY = V.CLIENT_KEY AND vi.EMPLOYEE_KEY = V.EMPLOYEE_KEY AND SERVICE_DATE < CORRESPONDINGVISITDT
),

LATESTVISIT AS 
(SELECT DISTINCT
PRIORVISITDT,
CLIENT_KEY,
EMPLOYEE_KEY,
CORRESPONDINGVISITDT
FROM PRIORVISITS 

WHERE ROWNUM = 1)


SELECT DISTINCT 
RECORDED_DATE,
R.SURVEY_RESPONSE_HEADER_KEY,
R.CLIENT_KEY,
R.EMPLOYEE_KEY,
BRANCH_KEY,
PARTNER_CODE,
LANGUAGE,
TO_DATE(CLIENT_EMPLOYEE_FIRST_SURVEY_DATE) AS CLIENT_EMPLOYEE_FIRST_SURVEY_DATE,
TO_DATE(EMPLOYEE_FIRST_SURVEY_DATE) AS EMPLOYEE_FIRST_SURVEY_DATE,
TO_DATE(CLIENT_FIRST_SURVEY_DATE) AS CLIENT_FIRST_SURVEY_DATE,
TO_DATE(CLIENT_EMPLOYEE_LATEST_SURVEY_DATE) AS CLIENT_EMPLOYEE_LATEST_SURVEY_DATE,
TO_DATE(CLIENT_LATEST_SURVEY_DATE) AS CLIENT_LATEST_SURVEY_DATE,
TO_DATE(EMPLOYEE_LATEST_SURVEY_DATE) AS EMPLOYEE_LATEST_SURVEY_DATE,
SURVEY_STATUS,
NULL ,
NULL,
CASE WHEN GENERAL_APPEARANCE = ''Yes'' THEN 1 ELSE 0 END AS GENERAL_APPEARANCE,
APPEARANCE_NOTES,
EATING_HABITS,
DRINKING_HABITS,
CHANGES_TRANSFERS,
CHANGES_WALKING,
CASE WHEN MISSED_MEDICATIONS= ''Yes'' THEN 1 ELSE 0 END AS MISSED_MEDICATIONS,
MISSED_MEDICATIONS_DETAILS,
CASE WHEN CHANGED_MEDICATION = ''Yes'' THEN 1 ELSE 0 END AS CHANGED_MEDICATIONS,
CHANGED_MEDICATION_DETAILS,
CHANGES_AGITATION,
CHANGES_ANKLELEG_SWELLING,
CHANGES_BREATHING,
CHANGES_CONFUSION,
CHANGES_DAYTIME_SLEEPINESS,
CHANGES_PAIN,
CHANGES_SADNESS,
CHANGES_SKIN_BREAKDOWN,
CHANGES_SWELLING_ELSEWHERE,
CHANGES_SLEEPING_PATTERNS,
URINATION_FREQUENCY,
BLADDER_BOWEL_CONTROL,
BOWEL_MOVEMENT,
URINE_SMELL,
DIARRHEA_ISSUES,
CASE WHEN FALLEN_SINCE_LAST_VISIT = ''Yes'' THEN 1 ELSE 0 END AS FALLEN_SINCE_LAST_VISIT,
CASE WHEN FALL_RECORDED_RISKCONNECT = ''Yes'' THEN 1 ELSE 0 END AS FALL_RECORDED_RISKCONNECT,
INJURY_FROM_FALL,
CASE WHEN ERVISIT_SINCE_LAST_VISIT = ''Yes'' THEN 1 ELSE 0 END AS ERVISIT_SINCE_LAST_VISIT,
CASE WHEN URGENTVISIT_SINCE_LAST_VISIT = ''Yes'' THEN 1 ELSE 0 END AS URGENTVISIT_SINCE_LAST_VISIT,
CASE WHEN THREE_PLUS_DAYS_OF_FOOD = ''Yes'' THEN 1 ELSE 0 END AS THREE_PLUS_DAYS_OF_FOOD,
CASE WHEN CURRENT_FOOD_SUPPLY = ''Yes'' THEN 1 ELSE 0 END AS CURRENT_FOOD_SUPPLY,
CASE WHEN WORKING_SMOKE_DETECTOR = ''Yes'' THEN 1 ELSE 0 END AS WORKING_SMOKE_DETECTOR,
CASE WHEN WORKING_ELECTRICAL_SYSTEM = ''Yes'' THEN 1 ELSE 0 END AS WORKING_ELECTRICAL_SYSTEM ,
CASE WHEN WORKING_FURNACE = ''Yes'' THEN 1 ELSE 0 END AS WORKING_FURNACE,
CASE WHEN HOME_FREE_OF_PESTS = ''Yes'' THEN 1 ELSE 0 END AS HOME_FREE_OF_PESTS,
CASE WHEN WORKING_OVEN = ''Yes'' THEN 1 ELSE 0 END AS WORKING_OVEN,
CASE WHEN WORKING_STOVE = ''Yes'' THEN 1 ELSE 0 END AS WORKING_STOVE ,
DIASTOLIC_BLOOD_PRESSURE1,
SYSTOLIC_BLOOD_PRESSURE1,
DIASTOLIC_BLOOD_PRESSURE2,
SYSTOLIC_BLOOD_PRESSURE2,
MEDICATIONS_FOOD_IN_LAST_24HOURS,
--TRIM(REGEXP_REPLACE(CLIENT_WEIGHT,''[a-z/-/A-z/,/’/''/]'','')) AS 
CLIENT_WEIGHT,
WEIGHT_UNITS,
GAINED_LOST_5LBS,
CASE WHEN DIABETIC = ''Yes'' THEN 1 ELSE 0 END AS DIABETIC,
LAST_BLOOD_SUGAR_READING,
CAST(CONCAT(LAST_BLOOD_SUGAR_READING_DAY||''-'' || SUBSTRING(LAST_BLOOD_SUGAR_READING_MONTH,1,3) || ''-'' ||LAST_BLOOD_SUGAR_READING_YEAR) AS DATE) AS LAST_BLOOD_SUGAR_READING_DATE,
CURRENT_BLOOD_SUGAR
FROM RESPONSES R
LEFT JOIN LATESTVISIT V ON V.CLIENT_KEY = R.CLIENT_KEY AND V.EMPLOYEE_KEY = R.EMPLOYEE_KEY;


`;
  try {
        snowflake.execute (
            {sqlText: sql}
            );
        return "Succeeded.";   // Return a success/error indicator.
        }
    catch (err)  {
        return "Failed: " + err;   // Return a success/error indicator.
        }  
  
 EOT
}

