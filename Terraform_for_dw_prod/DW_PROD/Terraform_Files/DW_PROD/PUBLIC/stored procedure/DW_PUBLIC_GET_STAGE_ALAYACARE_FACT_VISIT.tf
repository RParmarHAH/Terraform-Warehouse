resource "snowflake_procedure" "DW_PUBLIC_GET_STAGE_ALAYACARE_FACT_VISIT" {
	name ="GET_STAGE_ALAYACARE_FACT_VISIT"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "PUBLIC"
	language  = "JAVASCRIPT"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

        var sql = `
    --*****************************************************************************************************************************
-- NAME:  ALAYACARE_FACT_VISIT
--
-- PURPOSE: Creates one row per visit according to AlayaCare 
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 10/27/21     Mir Ali             Initial development
-- 12/08/21     Vaidehi Shah		Added Client Groups instead of EmployeeGroup and removed hardcoded SYSTEMCODE
-- 03/08/22		Mir Ali				Updated Hours_Served logic as discussed with AlayaCare
-- 03/09/22		Mir Ali				Added cutover dates for transitioning from Coastal to Alayacare (Georgia)
-- 03/14/22		Mir Ali				Updated logic for Status_Code and Hours_Served per discussion with Alayacare and Implementation team
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.ALAYACARE_FACT_VISIT
WITH EMPLOYEE AS 
(
SELECT * FROM 
(
	SELECT EMPLOYEE_ID,MASTER_ID,EMPLOYEE_ID AS ORIGINAL_RECORD_ID,BRANCH_ID
	FROM  DISC_DEDUPE_${var.SF_ENVIRONMENT}.ALAYACARE.EMPLOYEE_MASTER_LIST  
) 
UNION
SELECT * FROM 
(
	SELECT DISTINCT ID,MASTER_ID,ID AS ORIGINAL_RECORD_ID,BRANCH_ID
	FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.ALAYACARE.EMPLOYEE_MATCH_LIST 
	WHERE ID NOT IN (SELECT EMPLOYEE_ID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.ALAYACARE.EMPLOYEE_MASTER_LIST ) 
) 
)
, CLIENT AS  --VISIT DATA
(
SELECT * FROM 
(
	SELECT CLIENT_ID,MASTER_ID,CLIENT_ID AS ORIGINAL_RECORD_ID,GUID,BRANCH_ID
	FROM  DISC_DEDUPE_${var.SF_ENVIRONMENT}.ALAYACARE.CLIENT_MASTER_LIST 
) 
UNION
SELECT * FROM 
(
	SELECT DISTINCT ID,MASTER_ID,ID AS ORIGINAL_RECORD_ID,GUID,BRANCH_ID
	FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.ALAYACARE.CLIENT_MATCH_LIST 
	WHERE ID NOT IN (SELECT CLIENT_ID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.ALAYACARE.CLIENT_MASTER_LIST) 
) 
), INVOICE_STATUS AS (
	SELECT VISIT_ID, 
		CASE WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS IN (''paid'') THEN 1 END) > 0
				THEN ''Paid''
			WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS IN (''sent'') THEN 1 END) > 0
			THEN ''Billed''
		END AS INVOICE_STATUS
	FROM DISC_${var.SF_ENVIRONMENT}.ALAYACARE.INVOICE_ITEM
	GROUP BY VISIT_ID 
), VISITS AS (
	SELECT MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' || ''-'' || VISITS.VISIT_ID|| ''-'' || ''ALAYACARE'') AS VISIT_KEY,
			DATE_TRUNC (DAY, VISITS.START_AT) AS REPORT_DATE,
			MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' || ''-'' || NVL(TRIM(GROUPS.GROUP_ID),''Unknown'') || ''-'' || ''ALAYACARE'') AS BRANCH_KEY,
			MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' || ''-'' || NVL(C.MASTER_ID::INT,-1) || ''-'' || ''ALAYACARE'') AS CLIENT_KEY,
			MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')''|| ''-'' || NVL(TO_VARCHAR(SERVICES.SERVICE_FUNDER_ID), ''Unknown'') || ''-'' || NVL(TO_VARCHAR(NVL(VISITS.SERVICE_CODE_ID::INT,SERVICES.SERVICE_CODE_ID::INT)), ''Unknown'') || ''-'' || ''ALAYACARE'') AS CONTRACT_KEY, 
			MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' || ''-'' || NVL(E.MASTER_ID::INT,-1) || ''-'' || ''ALAYACARE'') AS EMPLOYEE_KEY,
			9 AS SOURCE_SYSTEM_ID,
			MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || B.BRANCH_ID || '')''||''-''||UPPER(TRIM(B.PROFILE_STATE)) || ''-'' || NVL(GROUPS.GROUP_ID,-1) || ''-'' || ''ALAYACARE'') AS SUPERVISOR_KEY,
			DATE_TRUNC (DAY, VISITS.START_AT) AS SERVICE_DATE,
			PAYROLL_DATES.CHECK_DATE AS PAYROLL_DATE,
			NVL(UPPER(TRIM(GROUPS.PROFILE_COMPANY)), ''Unknown ('' || NVL(GROUPS.GROUP_ID, -1) || '')'') AS BRANCH_NAME,
			NVL(C.MASTER_ID,VISITS.CLIENT_ID) AS CLIENT_NUMBER, 
			NVL(TO_VARCHAR(SERVICES.SERVICE_FUNDER_ID), ''Unknown'') AS CONTRACT_CODE,
			NVL(E.MASTER_ID::INT,VISITS.EMPLOYEE_ID::INT) AS EMPLOYEE_ID, 
			NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')''  AS SYSTEM_CODE,
			UPPER(TRIM(B.PROFILE_STATE)) || ''-'' || NVL(GROUPS.GROUP_ID,-1) AS SUPERVISOR_CODE,
			FALSE AS CLEAN_SHIFT_FLAG,
			CASE WHEN INVOICE_STATUS.INVOICE_STATUS = ''paid'' THEN ''05''
				WHEN INVOICE_STATUS.INVOICE_STATUS = ''sent'' THEN ''04''
				WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NOT NULL THEN ''10''
				WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NULL 
					AND VISITS.VISIT_COMPLETED = 1 
					AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS = ''1'' -- 0-Not Approved, 1-Approved, 2-Rejected, 3-In-violation
						THEN ''02''
				ELSE ''01'' END AS STATUS_CODE,
			CASE WHEN INVOICE_STATUS.INVOICE_STATUS = ''paid'' THEN ''Paid''  
				 WHEN INVOICE_STATUS.INVOICE_STATUS = ''sent'' THEN ''Billed'' 
			 	WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NOT NULL THEN ''Cancelled''
				WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NULL 
					AND VISITS.VISIT_COMPLETED = 1 
					AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS = ''1'' -- 0-Not Approved, 1-Approved, 2-Rejected, 3-In-violation
						THEN ''Confirmed''
				ELSE ''Pending'' END AS STATUS_DESCRIPTION,
			VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID AS CANCEL_REASON_CODE,
			NULL AS CANCEL_REASON_DESCRIPTION,
			NULL AS CANCEL_REASON_NOTES,
			FALSE AS EXCEPTION_REASON_FLAG,
			NULL AS RESOLUTION_CODE,
			NULL AS RESOLUTION_DESCRIPTION,
			NULL AS REJECTION_CODE,
			NULL AS REJECTION_DESCRIPTION,
			NVL(TO_VARCHAR(NVL(VISITS.SERVICE_CODE_ID::INT,SERVICES.SERVICE_CODE_ID::INT)), ''Unknown'') AS BILL_CODE,
			IFF(VISITS.VISIT_COMPUTED_RATE_UNITS = ''hours'', 
				VISITS.VISIT_COMPUTED_RATE, 
				(VISITS.VISIT_COMPUTED_RATE / COALESCE(NULLIF(VISITS.VISIT_SCHEDULED_DURATION, 0)
				, NULLIF(VISITS.VISIT_HOURS_APPROVED, 0), 1))) AS BILL_RATE, 
			NULL AS OVERHEAD_RATE,
			IFF(VISITS.VISIT_COMPUTED_RATE_UNITS = ''hours'',
				COALESCE(
					IFF(
						VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_HOURS_PAY IS NULL,
						IFF(TRIM(VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS) = ''1'', TRY_CAST(VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_HOURS_APPROVED AS DECIMAL(8, 3)), NULL),
						TRY_CAST(VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_HOURS_PAY AS DECIMAL(8, 3))
					), IFF(STATUS_CODE NOT IN (''02'', ''03'', ''04'', ''05''), VISITS.VISIT_SCHEDULED_DURATION, NULL)),
				NULL) AS HOURS_SERVED, 
			NULL AS COMMENTS,
			''Y'' AS IS_EVV_FLAG,
			NULL AS TIMESHEET_TYPE,
			NULL AS TRACKING_ID
	FROM DISC_${var.SF_ENVIRONMENT}.ALAYACARE.VISIT AS VISITS
	LEFT JOIN INVOICE_STATUS AS INVOICE_STATUS
		ON INVOICE_STATUS.VISIT_ID = VISITS.VISIT_ID 
	LEFT JOIN EMPLOYEE E ON VISITS.EMPLOYEE_ID = E.EMPLOYEE_ID AND VISITS.BRANCH_ID = E.BRANCH_ID
	LEFT JOIN  CLIENT C
		ON VISITS.CLIENT_ID = C.CLIENT_ID AND VISITS.BRANCH_ID = C.BRANCH_ID 
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.TBL_GUID_COST_CENTRE_TIER_4 COST_CENTRE_MAPPING
	ON COST_CENTRE_MAPPING.GUID_TO = C.GUID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.TBL_COST_CENTRES_TIER_4 AS COST_CENTRE
	ON COST_CENTRE.ID = COST_CENTRE_MAPPING.COST_CENTRE_ID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.GROUPS AS GROUPS
	ON GROUPS.BRANCH_ID = COST_CENTRE.PROPERTIES_BRANCH_ID
	AND GROUPS.PROFILE_COMPANY = COST_CENTRE.PROPERTIES_DESCRIPTION
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.BRANCH B 
		ON VISITS.BRANCH_ID = B.BRANCH_ID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.SERVICE AS SERVICES
			ON VISITS.SERVICE_ID = SERVICES.SERVICE_ID  AND VISITS.BRANCH_ID = SERVICES.BRANCH_ID
	LEFT JOIN HAH.FACT_BRANCH_PAYROLL_PERIODS AS PAYROLL_DATES
		ON PAYROLL_DATES.BRANCH_KEY = MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' || ''-'' || NVL(TRIM(GROUPS.GROUP_ID),''Unknown'') || ''-'' || ''ALAYACARE'')
			AND VISITS.START_AT::DATE BETWEEN PAYROLL_DATES.PERIOD_START_DATE AND PAYROLL_DATES.PERIOD_END_DATE
	WHERE HOURS_SERVED > 0 
)
	SELECT DATA.VISIT_KEY, DATA.REPORT_DATE, DATA.BRANCH_KEY, DATA.CLIENT_KEY,
		DATA.CONTRACT_KEY, DATA.EMPLOYEE_KEY, DATA.SOURCE_SYSTEM_ID, DATA.SUPERVISOR_KEY,
		DATA.SERVICE_DATE, DATA.PAYROLL_DATE, DATA.BRANCH_NAME, DATA.CLIENT_NUMBER,
		DATA.CONTRACT_CODE, DATA.EMPLOYEE_ID, DATA.SYSTEM_CODE, DATA.SUPERVISOR_CODE,
		DATA.CLEAN_SHIFT_FLAG, DATA.STATUS_CODE, DATA.STATUS_DESCRIPTION, DATA.CANCEL_REASON_CODE,
		DATA.CANCEL_REASON_DESCRIPTION, DATA.CANCEL_REASON_NOTES, DATA.EXCEPTION_REASON_FLAG, 
		DATA.RESOLUTION_CODE, DATA.RESOLUTION_DESCRIPTION, DATA.REJECTION_CODE, DATA.REJECTION_DESCRIPTION,
		DATA.BILL_CODE, DATA.BILL_RATE, DATA.OVERHEAD_RATE, DATA.HOURS_SERVED,
		DATA.COMMENTS, DATA.IS_EVV_FLAG, DATA.TIMESHEET_TYPE, DATA.TRACKING_ID, 
		-- ETL Fields
		
        `;    
             sql += STR_ETL_TASK_KEY;
             sql +=  
             ` AS ETL_TASK_KEY,
        
        
        `;    
             sql += STR_ETL_TASK_KEY;
             sql +=  
             ` AS ETL_INSERTED_TASK_KEY,
        
        convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	    CURRENT_USER as ETL_INSERTED_BY ,
	    convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	    CURRENT_USER as ETL_LAST_UPDATED_BY,
	    0 as ETL_DELETED_FLAG
	FROM VISITS AS DATA
	LEFT JOIN HAH.FACT_SYSTEM_CUTOVER_DATE AS CUTOVER
		ON CUTOVER.SOURCE_SYSTEM_ID = DATA.SOURCE_SYSTEM_ID 
			AND CUTOVER.SYSTEM_CODE = DATA.SYSTEM_CODE
			AND NVL(CUTOVER.BRANCH_KEY, DATA.BRANCH_KEY) = DATA.BRANCH_KEY
			AND NVL(CUTOVER.CONTRACT_KEY, DATA.CONTRACT_KEY) = DATA.CONTRACT_KEY
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.CONFIGURATION CONFIG 
	ON CONFIG.SYSTEM_CODE=DATA.SYSTEM_CODE
	AND CONFIG.CONFIGURATION_ACTIVE=TRUE
	AND CONFIG.SYSTEM_CODE IS NOT NULL
	WHERE DATA.SERVICE_DATE BETWEEN NVL(CUTOVER.START_DATE, DATA.SERVICE_DATE) AND NVL(CUTOVER.END_DATE, DATA.SERVICE_DATE)
;
`;
          try {
                snowflake.execute (
                    {sqlText: sql}
                    );
                return "Succeeded.";   // Return a success/error indicator.
                }
            catch (err)  {
                return "Failed: " + err;   // Return a success/error indicator.
                }  
          
 EOT
}

