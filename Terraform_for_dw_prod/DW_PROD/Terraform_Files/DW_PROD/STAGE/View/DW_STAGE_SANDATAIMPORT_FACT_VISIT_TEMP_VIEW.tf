resource "snowflake_view" "DW_STAGE_SANDATAIMPORT_FACT_VISIT_TEMP_VIEW" {
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "STAGE"
	name = "SANDATAIMPORT_FACT_VISIT_TEMP_VIEW"
	statement = <<-SQL
	 
  WITH avg_bill_rate as (									 
		SELECT agencyid,admissionid,AVG(RATE) as BILL_RATE 
		FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS
		GROUP BY agencyid,admissionid)
,unit_type AS (
SELECT * FROM (SELECT row_number() OVER (PARTITION BY SCHEDULEID ORDER BY rate desc) rn,AGENCYID ,SCHEDULEID, 
CASE UNITTYPE WHEN '01' THEN 'Hourly' WHEN '02' THEN 'Visit' WHEN '05' THEN 'Hourly' WHEN '06' THEN 'Per Diem' 
	else NULL END AS UNITTYPE  
from DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS 
WHERE AGENCYID ='8485' AND RATE NOT IN (0.00, 0.01) AND (UNITTYPE IS NOT NULL OR UNITTYPE <>'')) WHERE rn=1 )
,scheduled_employee AS (
   SELECT * FROM (SELECT ROW_NUMBER () OVER (PARTITION BY SV.AGENCYID ,SV.SCHEDULEID ORDER BY ETL_LAST_UPDATED_DATE DESC) AS rno,
   SV.AGENCYID ,SV.SCHEDULEID ,SV.STATUS, SV.STAFFAGENCYID  
   FROM DISC_${var.SF_ENVIRONMENT}.BI_REPOSITORY.HIST_SANDATAVISITS SV WHERE SV.AGENCYID ='8485' AND SV.STATUS IN('01')) WHERE rno=1)
,DERIVED_STATUS AS (
	SELECT AGENCYID ,SCHEDULEID, CASE WHEN SV.STATUS ='01' AND SV.STAFFAGENCYID IS NULL AND SV.SCHEDULEDATE > CURRENT_DATE() THEN '01OPENFUTURE' 
		 WHEN SV.STATUS ='01' AND SV.STAFFAGENCYID IS NOT NULL AND SV.SCHEDULEDATE > CURRENT_DATE() THEN '01FUTURE'
		 WHEN SV.STATUS ='01' AND SV.STAFFAGENCYID IS NULL AND SV.SCHEDULEDATE <= CURRENT_DATE() THEN '01OPEN' 
		 WHEN SV.STATUS ='01' AND SV.STAFFAGENCYID IS NOT NULL AND SV.SCHEDULEDATE <= CURRENT_DATE() THEN '01'
		ELSE SV.STATUS END AS DERIVED_STATUS
		,md5(4 ||'-'||'8485'||'-'||nvl(DERIVED_STATUS,'S')) AS VISIT_STATUS_KEY
   FROM DISC_${var.SF_ENVIRONMENT}.BI_REPOSITORY.SANDATAVISITS SV WHERE AGENCYID ='8485'
),
EMPLOYEE AS 
(
	SELECT * FROM
	(
		SELECT STAFFAGENCYID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.SANDATAIMPORT.EMPLOYEE_MASTER_LIST
        WHERE AGENCYID=8485
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT STAFFAGENCYID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.SANDATAIMPORT.EMPLOYEE_MATCH_LIST
		WHERE STAFFAGENCYID NOT IN (SELECT STAFFAGENCYID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.SANDATAIMPORT.EMPLOYEE_MASTER_LIST ) 
        AND AGENCYID=8485
	) 
), CLIENT AS
(
	SELECT * FROM
	(
		SELECT CLIENTID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.SANDATAIMPORT.CLIENT_MASTER_LIST
        WHERE AGENCYID=8485 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT CLIENTID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.SANDATAIMPORT.CLIENT_MATCH_LIST
		WHERE CLIENTID NOT IN (SELECT CLIENTID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.SANDATAIMPORT.CLIENT_MASTER_LIST ) 
        AND AGENCYID=8485
	)
)
    SELECT DISTINCT 
    MD5(SV.AGENCYID || '-' || SV.SCHEDULEID || '-' || 'SANDATAIMPORT') AS OLD_VISIT_KEY,
	
    CASE WHEN SV.SERVICEID in ('VBPCG')
	THEN MD5('CC_'||SV.AGENCYID || '-' || SV.SCHEDULEID || '-' || 'SANDATAIMPORT')
	ELSE MD5(SV.AGENCYID || '-' || SV.SCHEDULEID || '-' || 'SANDATAIMPORT')
	END AS NEW_VISIT_KEY,
	
	MD5(NVL(SV.AGENCYID, 'S') || '-' || SV.ADMISSIONTYPE || '-' || 'SANDATAIMPORT') AS OLD_CONTRACT_KEY,
	
	CASE WHEN SV.SERVICEID in ('VBPCG')
	THEN MD5(NVL('CC_'||SV.AGENCYID, 'S') || '-' || SV.ADMISSIONTYPE || '-' || 'SANDATAIMPORT')
	ELSE MD5(NVL(SV.AGENCYID, 'S') || '-' || SV.ADMISSIONTYPE || '-' || 'SANDATAIMPORT')
	END AS NEW_CONTRACT_KEY,
	   
	SV.AGENCYID AS OLD_SYSTEM_CODE,
	
	CASE WHEN SV.SERVICEID in ('VBPCG')
	THEN 'CC_'||SV.AGENCYID
	ELSE SV.AGENCYID
	END AS NEW_SYSTEM_CODE
	
FROM DISC_${var.SF_ENVIRONMENT}.BI_REPOSITORY.SANDATAVISITS SV
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.BI_REPOSITORY.EXTERNALIDS EID
	ON EID.DBNAME = 'PA' AND EID.TYP = 'L' AND EID.EXTID = SV.LOCATIONID 
LEFT JOIN EMPLOYEE STF ON STF.AGENCYID=SV.AGENCYID AND STF.STAFFAGENCYID= SV.STAFFAGENCYID

LEFT JOIN CLIENT C ON C.AGENCYID = SV.AGENCYID AND C.CLIENTID = SV.CLIENTID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS CAD
	ON CAD.AGENCYID = SV.AGENCYID AND CAD.ADMISSIONID = SV.ADMISSIONID 																			
LEFT JOIN (SELECT AGENCYID,scheduleid,admissionid,avg(rate) as bill_rate, avg(try_to_number(unittype)) AS unittype
	 from DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS 
	 group by AGENCYID,scheduleid,admissionid) ca on
	sv.agencyid = ca.agencyid and sv.scheduleid = ca.scheduleid
	and sv.admissionid = ca.admissionid 
LEFT JOIN avg_bill_rate avg_bill_rate_ca on
SV.agencyid = avg_bill_rate_ca.agencyid 
and SV.admissionid = avg_bill_rate_ca.admissionid
LEFT JOIN UNIT_TYPE U ON SV.AGENCYID= U.AGENCYID AND SV.SCHEDULEID = U.SCHEDULEID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_SCHEDULES sch ON SV.AGENCYID = sch.AGENCYID AND SV.SCHEDULEID = sch.SCHEDULEID 
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_REJECTIONCODES r ON sch.REJECTIONCODE = r.code AND sch.agencyid = r.AGENCYID
LEFT JOIN DERIVED_STATUS DSTATUS ON SV.AGENCYID = DSTATUS.AGENCYID AND SV.SCHEDULEID = DSTATUS.SCHEDULEID
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_VISIT_STATUS_MAPPING STATUS ON DSTATUS.VISIT_STATUS_KEY = STATUS.VISIT_STATUS_KEY

LEFT JOIN scheduled_employee SEMP ON SV.AGENCYID = SEMP.AGENCYID AND SV.SCHEDULEID = SEMP.SCHEDULEID
WHERE SV.AGENCYID = '8485' 
AND NVL(SV.STAFFAGENCYID,'') <> '' AND SV.CLIENTID IS NOT NULL
	AND NVL(SV.ADMISSIONTYPE, '') <> '' AND LEN(NVL(SV.STATUS,'')) <= 2  
	AND SV.SERVICEID  in ('VBPCG');
SQL
	or_replace = true 
	is_secure = false 
}

