resource "snowflake_view" "DW_STAGE_VW_CURRENT_DELETED_DATAFLEXSYNCDATA_DIM_INVOICE" {
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "STAGE"
	name = "VW_CURRENT_DELETED_DATAFLEXSYNCDATA_DIM_INVOICE"
	statement = <<-SQL
	 WITH CHANGED_DATA_ARINVOICES AS (
	SELECT DISTINCT INV.DBNAME, INV.INVOICENUMBER, INV.OFFICE, INV.PERIOD, INV.CONTRACTCODE, 
		COALESCE(BRANCH.BRANCH_KEY, MD5(INV.DBNAME || '-' || INV.OFFICE || '-' || 'DATAFLEXSYNCDATA')) AS BRANCH_KEY,
		TRY_CAST(CONCAT(-100, INV.OFFICE) AS INTEGER) AS DUMMY_CLIENT_NUMBER,
		MD5(INV.DBNAME || '-' || DUMMY_CLIENT_NUMBER || '-' || 'DATAFLEXSYNCDATA-DUMMY') AS DUMMY_CLIENT_KEY
	FROM DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFARINVOICES INV
	LEFT JOIN HAH.DIM_BRANCH AS BRANCH
		ON BRANCH.SOURCE_SYSTEM_ID = 3 AND BRANCH.SYSTEM_CODE = INV.DBNAME AND BRANCH.OFFICE_CODE = INV.OFFICE::STRING	
		 WHERE  1 = 2 -- Do not include this CTE for Current_Deleted view

),DEDUPE_CLIENT as
(
select md5(F.DBNAME || '-' || substring(F.MASTER_ID,3) || '-' || 'DATAFLEXSYNCDATA') CLIENT_KEY
,substring(F.MASTER_ID,3) AS CLIENT_NUMBER
,substring(F.MASTER_ID,3) AS MASTER_CLIENT_NUMBER
,F.DBNAME AS SYSTEM_CODE
from DISC_DEDUPE_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.CLIENT_MASTER_LIST F
UNION
select md5(M.DBNAME || '-' || UPPER(NVL(TRIM(substring(M.MASTER_ID,3)), '')) || '-' || 'DATAFLEXSYNCDATA') CLIENT_KEY
,M.NUMBER::VARCHAR AS CLIENT_NUMBER
,substring(M.MASTER_ID,3) MASTER_CLIENT_NUMBER
,M.DBNAME AS SYSTEM_CODE
from DISC_DEDUPE_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.CLIENT_MATCH_LIST M
WHERE M.ID<>M.MASTER_ID
UNION
select F.CLIENT_KEY
,F.CLIENT_NUMBER ::VARCHAR
,F.CLIENT_NUMBER MASTER_CLIENT_NUMBER
,F.SYSTEM_CODE
from HAH.DIM_CLIENT F
WHERE F.SOURCE_SYSTEM_ID=3
AND CLIENT_LAST_NAME='BULK BILLING DUMMY CLIENT'
and F.CLIENT_NUMBER<0
)
SELECT
      md5(inv.DBNAME ||'-'|| inv.invoiceno ||'-'|| 'DATAFLEXSYNCDATA') AS INVOICE_KEY --PK
FROM DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.HIST_DFINVOICES inv
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFINVOICEDETAILS det
    ON inv.DBNAME = det.DBNAME
           AND inv.INVOICENO = det.INVOICENO
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCONTRACTS con
    ON inv.CONTRACTCODE = con.CONTRACTCODE
           AND inv.DBNAME = con.DBNAME
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFBILLPERSONS bp
        ON con.DBNAME = bp.DBNAME
               AND con.BILLPERSONCODE = bp.CODE
LEFT JOIN DEDUPE_CLIENT DC
        on inv.CLIENTNUMBER::VARCHAR=DC.CLIENT_NUMBER
		   and inv.DBNAME=DC.SYSTEM_CODE
WHERE inv.ETL_DELETED_FLAG = TRUE
    AND CAST(inv.ETL_LAST_UPDATED_DATE AS DATE) IN (SELECT CAST(MAX(ETL_LAST_UPDATED_DATE) AS DATE) FROM DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.HIST_DFINVOICES)
GROUP BY inv.DBNAME, inv.INVOICENO, NVL((DC.MASTER_CLIENT_NUMBER::INT),inv.CLIENTNUMBER), inv.OFFICE, inv.PERIOD, con.PAYORCODE, con.CONTRACTNAME, bp.NAME, inv.STATUS, inv.OUTSANDINGAMOUNT
-- Bulk billing invoices (from DfArInvoices -- unique key for details is INV.DBNAME, INV.INVOICENUMBER, INV.OFFICE, INV.PERIOD, INV.CONTRACTCODE, INV.SERVICEAREA, INV.SUPPLEMENTNO)
UNION ALL
SELECT MD5(CHANGED_DATA.DBNAME || '-' || CHANGED_DATA.INVOICENUMBER || '-' || 
		CHANGED_DATA.OFFICE || '-' || CHANGED_DATA.PERIOD || '-' || CHANGED_DATA.CONTRACTCODE || '-' || 'DATAFLEXSYNCDATA-DFARINVOICES') AS INVOICE_KEY
		
FROM CHANGED_DATA_ARINVOICES AS CHANGED_DATA 
JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFARINVOICES INV
	ON INV.DBNAME = CHANGED_DATA.DBNAME AND INV.INVOICENUMBER = CHANGED_DATA.INVOICENUMBER
		AND INV.OFFICE = CHANGED_DATA.OFFICE AND INV.PERIOD = CHANGED_DATA.PERIOD AND INV.CONTRACTCODE = CHANGED_DATA.CONTRACTCODE
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCONTRACTS con
    ON inv.CONTRACTCODE = con.CONTRACTCODE
           AND inv.DBNAME = con.DBNAME
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFBILLPERSONS bp
        ON con.DBNAME = bp.DBNAME
               AND con.BILLPERSONCODE = bp.CODE
GROUP BY CHANGED_DATA.DBNAME, CHANGED_DATA.INVOICENUMBER, 
	CHANGED_DATA.OFFICE, CHANGED_DATA.PERIOD, CHANGED_DATA.CONTRACTCODE, 
	CHANGED_DATA.DUMMY_CLIENT_KEY, CHANGED_DATA.BRANCH_KEY,
	CON.PAYORCODE, CON.CONTRACTNAME, BP.NAME;
SQL
	or_replace = true 
	is_secure = false 
}

