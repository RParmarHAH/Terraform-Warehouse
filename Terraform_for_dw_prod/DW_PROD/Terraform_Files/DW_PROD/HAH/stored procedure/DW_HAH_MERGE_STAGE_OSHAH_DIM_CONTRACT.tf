resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_OSHAH_DIM_CONTRACT" {
	name ="MERGE_STAGE_OSHAH_DIM_CONTRACT"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    RETURN_RESULT VARCHAR;
BEGIN

MERGE INTO DW_${var.SF_ENVIRONMENT}.HAH.DIM_CONTRACT AS tgt
USING DW_${var.SF_ENVIRONMENT}."STAGE".OSHAH_DIM_CONTRACT AS src
ON tgt.CONTRACT_KEY=src.CONTRACT_KEY
WHEN MATCHED THEN UPDATE SET
	 tgt.CONTRACT_CODE=src.CONTRACT_CODE
	,tgt.SYSTEM_CODE=src.SYSTEM_CODE
	,tgt.SOURCE_SYSTEM_ID=src.SOURCE_SYSTEM_ID
	,tgt.CONTRACT_NAME=src.CONTRACT_NAME
	,tgt.SERVICE_CODE_ID=src.SERVICE_CODE_ID
	,tgt.SERVICE_KEY=src.SERVICE_KEY
	,tgt.DEFAULT_BILL_CODE=src.DEFAULT_BILL_CODE
	,tgt.PAYROLL_CODE=src.PAYROLL_CODE
	,tgt.REVENUE_CATEGORY=src.REVENUE_CATEGORY
	,tgt.REVENUE_SUBCATEGORY_CODE=src.REVENUE_SUBCATEGORY_CODE
	,tgt.REVENUE_SUBCATEGORY_NAME=src.REVENUE_SUBCATEGORY_NAME
	,tgt.PAYOR_CODE=src.PAYOR_CODE
	,tgt.PAYOR_DESCRIPTION=src.PAYOR_DESCRIPTION
	,tgt.SERVICE_LINE_CODE=src.SERVICE_LINE_CODE
	,tgt.SERVICE_LINE_DESCRIPTION=src.SERVICE_LINE_DESCRIPTION
	,tgt.CONTRACT_STATE_CODE=src.CONTRACT_STATE_CODE
	,tgt.TIME_TRANSLATION_CODE=src.TIME_TRANSLATION_CODE
	,tgt.TIME_TRANSLATION_DIVIDER=src.TIME_TRANSLATION_DIVIDER
	,tgt.PAY_TRAVELS_CODE=src.PAY_TRAVELS_CODE
	,tgt.MILEAGE_FLAG=src.MILEAGE_FLAG
	,tgt.PAYABLE_FLAG=src.PAYABLE_FLAG
	,tgt.BILLABLE_FLAG=src.BILLABLE_FLAG
	,tgt.BILLED_BY_QUARTER_HOURS=src.BILLED_BY_QUARTER_HOURS
	,tgt.BILLED_BY_HALF_HOURS=src.BILLED_BY_HALF_HOURS
	,tgt.BILL_UNIT_TYPE=src.BILL_UNIT_TYPE
	,tgt.EFFECTIVE_FROM_DATE=src.EFFECTIVE_FROM_DATE
	,tgt.EFFECTIVE_TO_DATE=src.EFFECTIVE_TO_DATE
	,tgt.ETL_TASK_KEY=src.ETL_TASK_KEY
	,tgt.ETL_INSERTED_TASK_KEY=src.ETL_INSERTED_TASK_KEY
	,tgt.ETL_INSERTED_DATE=src.ETL_INSERTED_DATE
	,tgt.ETL_INSERTED_BY=src.ETL_INSERTED_BY
	,tgt.ETL_LAST_UPDATED_DATE=src.ETL_LAST_UPDATED_DATE
	,tgt.ETL_LAST_UPDATED_BY=src.ETL_LAST_UPDATED_BY
	,tgt.ETL_DELETED_FLAG=src.ETL_DELETED_FLAG
	,tgt.ETL_INFERRED_MEMBER_FLAG=src.ETL_INFERRED_MEMBER_FLAG
	
WHEN NOT MATCHED THEN INSERT (
	 CONTRACT_KEY
	,CONTRACT_CODE
	,SYSTEM_CODE
	,SOURCE_SYSTEM_ID
	,CONTRACT_NAME
	,SERVICE_CODE_ID
	,SERVICE_KEY
	,DEFAULT_BILL_CODE
	,PAYROLL_CODE
	,REVENUE_CATEGORY
	,REVENUE_SUBCATEGORY_CODE
	,REVENUE_SUBCATEGORY_NAME
	,PAYOR_CODE
	,PAYOR_DESCRIPTION
	,SERVICE_LINE_CODE
	,SERVICE_LINE_DESCRIPTION
	,CONTRACT_STATE_CODE
	,TIME_TRANSLATION_CODE
	,TIME_TRANSLATION_DIVIDER
	,PAY_TRAVELS_CODE
	,MILEAGE_FLAG
	,PAYABLE_FLAG
	,BILLABLE_FLAG
	,BILLED_BY_QUARTER_HOURS
	,BILLED_BY_HALF_HOURS
	,BILL_UNIT_TYPE
	,EFFECTIVE_FROM_DATE
	,EFFECTIVE_TO_DATE
	,ETL_TASK_KEY
	,ETL_INSERTED_TASK_KEY
	,ETL_INSERTED_DATE
	,ETL_INSERTED_BY
	,ETL_LAST_UPDATED_DATE
	,ETL_LAST_UPDATED_BY
	,ETL_DELETED_FLAG
	,ETL_INFERRED_MEMBER_FLAG)
	
VALUES (
	 src.CONTRACT_KEY
	,src.CONTRACT_CODE
	,src.SYSTEM_CODE
	,src.SOURCE_SYSTEM_ID
	,src.CONTRACT_NAME
	,src.SERVICE_CODE_ID
	,src.SERVICE_KEY
	,src.DEFAULT_BILL_CODE
	,src.PAYROLL_CODE
	,src.REVENUE_CATEGORY
	,src.REVENUE_SUBCATEGORY_CODE
	,src.REVENUE_SUBCATEGORY_NAME
	,src.PAYOR_CODE
	,src.PAYOR_DESCRIPTION
	,src.SERVICE_LINE_CODE
	,src.SERVICE_LINE_DESCRIPTION
	,src.CONTRACT_STATE_CODE
	,src.TIME_TRANSLATION_CODE
	,src.TIME_TRANSLATION_DIVIDER
	,src.PAY_TRAVELS_CODE
	,src.MILEAGE_FLAG
	,src.PAYABLE_FLAG
	,src.BILLABLE_FLAG
	,src.BILLED_BY_QUARTER_HOURS
	,src.BILLED_BY_HALF_HOURS
	,src.BILL_UNIT_TYPE
	,src.EFFECTIVE_FROM_DATE
	,src.EFFECTIVE_TO_DATE
	,src.ETL_TASK_KEY
	,src.ETL_INSERTED_TASK_KEY
	,src.ETL_INSERTED_DATE
	,src.ETL_INSERTED_BY
	,src.ETL_LAST_UPDATED_DATE
	,src.ETL_LAST_UPDATED_BY
	,src.ETL_DELETED_FLAG
	,src.ETL_INFERRED_MEMBER_FLAG);
    
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;

 EOT
}

