resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_CLEARCARE_FACT_INTAKE" {
	name ="MERGE_STAGE_CLEARCARE_FACT_INTAKE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN
    MERGE INTO HAH.FACT_INTAKE TGT 
	USING STAGE.CLEARCARE_FACT_INTAKE STG 
	ON TGT.INTAKE_KEY = STG.INTAKE_KEY
	WHEN MATCHED THEN 
	UPDATE SET 
	    TGT.INTAKE_KEY=STG.INTAKE_KEY
,TGT.REPORT_DATE=STG.REPORT_DATE
,TGT.BRANCH_KEY=STG.BRANCH_KEY
,TGT.CLIENT_KEY=STG.CLIENT_KEY
,TGT.CONTRACT_KEY=STG.CONTRACT_KEY
,TGT.SOURCE_SYSTEM_ID=STG.SOURCE_SYSTEM_ID
,TGT.REAUTHORIZED_DATE=STG.REAUTHORIZED_DATE
,TGT.PRE_AUTH_NUMBER=STG.PRE_AUTH_NUMBER
,TGT.BEGIN_SERVICE_DATE=STG.BEGIN_SERVICE_DATE
,TGT.END_SERVICE_DATE=STG.END_SERVICE_DATE
,TGT.LATEST_AUTH_BEGIN_DATE=STG.LATEST_AUTH_BEGIN_DATE
,TGT.LATEST_AUTH_END_DATE=STG.LATEST_AUTH_END_DATE
,TGT.BRANCH_NAME=STG.BRANCH_NAME
,TGT.CLIENT_NUMBER=STG.CLIENT_NUMBER
,TGT.CONTRACT_CODE=STG.CONTRACT_CODE
,TGT.BILL_RATE=STG.BILL_RATE
,TGT.SYSTEM_CODE=STG.SYSTEM_CODE
,TGT.CASE_MANAGER=STG.CASE_MANAGER
,TGT.HOURS_AUTHORIZED=STG.HOURS_AUTHORIZED
,TGT.HOURS_AUTHORIZED_NON_ADJUSTED=STG.HOURS_AUTHORIZED_NON_ADJUSTED
,TGT.ETL_TASK_KEY=STG.ETL_TASK_KEY
,TGT.ETL_INSERTED_TASK_KEY=STG.ETL_INSERTED_TASK_KEY
,TGT.ETL_INSERTED_DATE=STG.ETL_INSERTED_DATE
,TGT.ETL_INSERTED_BY=STG.ETL_INSERTED_BY
,TGT.ETL_LAST_UPDATED_DATE=STG.ETL_LAST_UPDATED_DATE
,TGT.ETL_LAST_UPDATED_BY=STG.ETL_LAST_UPDATED_BY
,TGT.ETL_DELETED_FLAG=STG.ETL_DELETED_FLAG      
	WHEN NOT MATCHED THEN 
	INSERT ( 
	   INTAKE_KEY
,REPORT_DATE
,BRANCH_KEY
,CLIENT_KEY
,CONTRACT_KEY
,SOURCE_SYSTEM_ID
,REAUTHORIZED_DATE
,PRE_AUTH_NUMBER
,BEGIN_SERVICE_DATE
,END_SERVICE_DATE
,LATEST_AUTH_BEGIN_DATE
,LATEST_AUTH_END_DATE
,BRANCH_NAME
,CLIENT_NUMBER
,CONTRACT_CODE
,BILL_RATE
,SYSTEM_CODE
,CASE_MANAGER
,HOURS_AUTHORIZED
,HOURS_AUTHORIZED_NON_ADJUSTED
,ETL_TASK_KEY
,ETL_INSERTED_TASK_KEY
,ETL_INSERTED_DATE
,ETL_INSERTED_BY
,ETL_LAST_UPDATED_DATE
,ETL_LAST_UPDATED_BY
,ETL_DELETED_FLAG
	) 
	VALUES (
	   STG.INTAKE_KEY
,STG.REPORT_DATE
,STG.BRANCH_KEY
,STG.CLIENT_KEY
,STG.CONTRACT_KEY
,STG.SOURCE_SYSTEM_ID
,STG.REAUTHORIZED_DATE
,STG.PRE_AUTH_NUMBER
,STG.BEGIN_SERVICE_DATE
,STG.END_SERVICE_DATE
,STG.LATEST_AUTH_BEGIN_DATE
,STG.LATEST_AUTH_END_DATE
,STG.BRANCH_NAME
,STG.CLIENT_NUMBER
,STG.CONTRACT_CODE
,STG.BILL_RATE
,STG.SYSTEM_CODE
,STG.CASE_MANAGER
,STG.HOURS_AUTHORIZED
,STG.HOURS_AUTHORIZED_NON_ADJUSTED
,STG.ETL_TASK_KEY
,STG.ETL_INSERTED_TASK_KEY
,STG.ETL_INSERTED_DATE
,STG.ETL_INSERTED_BY
,STG.ETL_LAST_UPDATED_DATE
,STG.ETL_LAST_UPDATED_BY
,STG.ETL_DELETED_FLAG
);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
    
 EOT
}

