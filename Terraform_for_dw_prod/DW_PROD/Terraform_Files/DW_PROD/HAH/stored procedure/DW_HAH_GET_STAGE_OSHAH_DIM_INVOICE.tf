resource "snowflake_procedure" "DW_HAH_GET_STAGE_OSHAH_DIM_INVOICE" {
	name ="GET_STAGE_OSHAH_DIM_INVOICE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  OSHAH_DIM_INVOICE
--
-- PURPOSE: Creates one row per client according to OPAL
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 1/03/2022	Leo Joy     			Initial development
-- 21/04/2023 	PINKAL PANCHAL 			ADDED INVOICE_STATUS_MAPPING FOR RCM
-- 07/12/2023   Sandesh Gosavi          update code to use config flag
-- 12/09/2023   Pradeep Thippani        Changed INVOICE_STATUS logic
--*****************************************************************************************************************************
INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}."STAGE".OSHAH_DIM_INVOICE 
WITH CLIENT AS 
(
	SELECT * FROM
	(
		SELECT PATIENTID, MASTER_ID, OFFICEID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT PATIENTID, MASTER_ID, OFFICEID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CLIENT_MATCH_LIST
		WHERE PATIENTID NOT IN (SELECT PATIENTID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST )
    )
),
INVOICE_DETAILS AS (
SELECT
	   HEADER.INVOICEHEADERID
	 , MAX(PAY.PAIDDATE::DATE) AS FINAL_PAYMENT
	 , MIN(HEADER.INVOICEDATE::DATE) AS FIRST_PAYMENT
	 , SUM(DETAIL.BILLEDAMOUNT) AS INVOICE_BILLED_AMOUNT
	 , SUM(BILL.PAIDAMOUNT) AS PAID_AMOUNT
	 , SUM(BILL.WRITEOFF) AS WRITEOFFAMOUNT
	 , SUM(BILL.ADJUSTMENT+BILL.TTADJUSTMENT+BILL.OTHERADJUSTMENT) AS ADJUSTMENTS
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.TBLVISITS_REPL VISIT
INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.TBLINVOICEDETAILS_REPL DETAIL 
	ON DETAIL.VISITID = VISIT.VISITID AND DETAIL.PATIENTID = VISIT.PATIENTID
INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.TBLINVOICEHEADER_REPL HEADER 
	ON HEADER.INVOICEHEADERID = DETAIL.INVOICEHEADERID AND HEADER.PATIENTID = DETAIL.PATIENTID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.BILLING_PAIDVISITS_REPL BILL
	ON BILL.VISITID = VISIT.VISITID AND BILL.PATIENTID = VISIT.PATIENTID
-- PAYMENTS Join change on 28/04/23 for RCM by Pinkal
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PAYMENTS PAY 
--	ON BILL.VISITID = PAY.VISITID	AND BILL.PATIENTID = PAY.PATIENTID
	ON BILL.VISITID = PAY.VISITID	AND BILL.PATIENTID = PAY.PATIENTID AND BILL.PAYMENTDETAILID = PAY.PAYMENTID
GROUP BY HEADER.INVOICEHEADERID
),
INVOICE_STATUS_MAPPING AS(
SELECT DISTINCT
	INV.INVOICEHEADERID,
	17 AS SOURCE_SYSTEM_ID,
	CONCAT(''OSHAH - '', TRIM(OFFICE.STATE)) AS SYSTEM_CODE,
    CASE WHEN (NVL(INV.INVOICEAMOUNT,0)-NVL(INVOICE.PAID_AMOUNT,0)) <= 0 THEN ''PAID''
         WHEN NVL(INVOICE.PAID_AMOUNT,0) >0  AND (NVL(INV.INVOICEAMOUNT,0)-NVL(INVOICE.PAID_AMOUNT,0))> 0 THEN ''PARTIAL PAY''
    ELSE ''BILLED'' END AS DERIVED_INVOICE_STATUS,
--changes made on 12/09/2023 for RCM
--	CASE WHEN INV.PAYMENTSTATUS = 0 THEN ''BILLED''
--		WHEN INV.PAYMENTSTATUS = 1 THEN ''PAID''
--		WHEN INV.PAYMENTSTATUS = 2 THEN ''PARTIAL PAY''
--	ELSE ''UNKNOWN'' END AS DERIVED_INVOICE_STATUS,
	MD5(SOURCE_SYSTEM_ID || ''-'' || DERIVED_INVOICE_STATUS || ''-'' || SYSTEM_CODE) AS INVOICE_STATUS_KEY
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.TBLINVOICEHEADER_REPL INV
INNER JOIN INVOICE_DETAILS INVOICE 
      ON INV.INVOICEHEADERID = INVOICE.INVOICEHEADERID--Added on 12/09/2023 for RCM
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL OFFICE ON INV.OFFICEID = OFFICE.OFFICEID
)
SELECT DISTINCT
MD5(''OSHAH'' || ''-'' || HEAD.INVOICEHEADERID || ''-'' || ''HHAEXCHANGE'') AS INVOICE_KEY
	, MD5(''OSHAH'' || ''-'' || CLI.MASTER_ID::NUMBER || ''-'' || ''HHAEXCHANGE'') AS CLIENT_KEY
	, HEAD.VENDORINVOICENUMBER AS INVOICE_NUMBER
	, HEAD.VENDORINVOICENUMBER AS ALTERNATE_INVOICE_NUMBER
	, TO_VARCHAR(HEAD.INVOICEDATE::DATE, ''YYYYMM'') AS PERIOD
	, ''REGULAR'' AS INVOICE_TYPE
	, 1 AS NUMBER_OF_CLIENTS
	, CONCAT(''OSHAH - '', TRIM(OFFICE.STATE)) AS SYSTEM_CODE
	, 17 AS SOURCE_SYSTEM_ID
	, MD5(''OSHAH'' || ''-'' || HEAD.OFFICEID || ''-'' || ''HHAEXCHANGE'') AS BRANCH_KEY
	, P.PAYERID AS PAYOR_CODE
	, UPPER(TRIM(P.PAYERNAME)) AS PAYOR_NAME
	, CASE WHEN HEAD.PAYMENTSTATUS = 0
			THEN TRUE 
			ELSE FALSE
	  END AS INVOICE_OPEN_FLAG --0-OPEN
	, INVOICE.FIRST_PAYMENT AS FIRST_INVOICE_DATE
	, INVOICE.FINAL_PAYMENT AS FINAL_PAYMENT_DATE
	, HEAD.VENDORINVOICENUMBER AS FIRST_INVOICE_NUMBER
	, 1 AS BILL_ITERATION
	, NULL AS BILL_REPRESENTATIVE
	, NULL AS BILL_SUPERVISOR
	, NULL AS BILL_MANAGER
--	, CASE HEAD.PAYMENTSTATUS
--		 WHEN 0 THEN ''BILLED''
--		 WHEN 1 THEN ''FULLY PAID''
--		 WHEN 2 THEN ''PARTIALLY PAID''
--	 END AS INVOICE_STATUS
--	CHANGES MADE ON 21/04/23 FOR INVOICE_STATUS_MAPPING BY PINKAL
	,DISM.DERIVED_INVOICE_STATUS AS INVOICE_STATUS
	, CASE WHEN NVL(INVOICE.WRITEOFFAMOUNT,0)>0
			    THEN TRUE
			    ELSE FALSE 
	  END AS WRITEOFF_FLAG
	, NULL AS WRITEOFF_REASON
	, NVL(HEAD.INVOICEAMOUNT,0) AS AMOUNT_BILLED
	, NVL(INVOICE.PAID_AMOUNT,0) AS AMOUNT_COLLECTED
	, AMOUNT_BILLED - AMOUNT_COLLECTED AS AMOUNT_OUTSTANDING
	, TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
	, TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE
	,:STR_ETL_TASK_KEY AS ETL_TASK_KEY
	,:STR_ETL_TASK_KEY ETL_INSERTED_TASK_KEY
	, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
	, CURRENT_USER as ETL_INSERTED_BY
	, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_UPDATED_DATE
, CURRENT_USER AS ETL_LAST_UPDATED_BY
, 0 AS ETL_DELETED_FLAG
, 0 AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.TBLINVOICEHEADER_REPL HEAD
INNER JOIN INVOICE_DETAILS INVOICE 
	  ON HEAD.INVOICEHEADERID = INVOICE.INVOICEHEADERID
INNER  JOIN CLIENT CLI 
	  ON HEAD.PATIENTID = CLI.PATIENTID
INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.INVOICEDETAILS DETAILS 
	  ON DETAILS.INVOICEHEADERID = HEAD.INVOICEHEADERID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL OFFICE 
	  ON HEAD.OFFICEID = OFFICE.OFFICEID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.STAGE_PAYER_REPL P 
	  ON DETAILS.PAYERID = P.PAYERID
LEFT JOIN INVOICE_STATUS_MAPPING ISM ON ISM.INVOICEHEADERID = HEAD.INVOICEHEADERID
LEFT JOIN HAH.DIM_INVOICE_STATUS_MAPPING DISM ON DISM.INVOICE_STATUS_KEY = ISM.INVOICE_STATUS_KEY
WHERE OFFICE.STATE IN (SELECT STATE FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE);
RETURN ''SUCCESS'';
END;

 EOT
}

