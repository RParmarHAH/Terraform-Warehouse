resource "snowflake_procedure" "DW_HAH_GET_STAGE_CLEARCARE_DIM_CLIENT" {
	name ="GET_STAGE_CLEARCARE_DIM_CLIENT"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN
--*****************************************************************************************************************************
-- NAME:  Clear care DIM CLIENT
--
-- PURPOSE: Populates Stage Dim CLIENT for Clear Care 
--			
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 08/05/21    SAM HUFF             Initial version
-- 11/08/23	   Shikhar Saxena		Updated Client_Ethnicity LOGIC and added HISPANIC_OR_LATINO column
-- 11/21/23  Sandesh Gosavi       ADDED A LOGIC FOR DISCHARGE_REASON
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.CLEARCARE_DIM_CLIENT
WITH CARE_DATES AS (
    SELECT CARE.PATIENT_ID, MAX(SHIFT_DATE) AS MAX_CARELOG, MIN(SHIFT_DATE) AS MIN_CARELOG
    FROM DISC_${var.SF_ENVIRONMENT}.CLEARCARE.CARELOGS_CARELOG CARE
    LEFT JOIN DISC_${var.SF_ENVIRONMENT}.CLEARCARE.PROFILE_PATIENT_AGENCYLOCATION CLIENT ON CLIENT.PATIENT_ID = CARE.PATIENT_ID
    GROUP BY 1
)
SELECT 
		MD5(''CLEARCARE'' ||''-''|| CL.MASTER_ID ||''-''|| ''CLEARCARE'' ) as CLIENT_KEY
		,CL.ID AS CLIENT_NUMBER
		,''CLEARCARE'' AS SYSTEM_CODE
		,16 AS SOURCE_SYSTEM_ID
        
        --TYPICALLY USE SSN, UNAVAILABLE FOR CLIENT/EMPLOYEE
		,NULL  AS CLIENT_PID 
        
		, NULL AS CLIENT_MEDICARE_ID -- NA
        , NULL AS MEDICAID_ID -- NA
		,CL.DOB  AS CLIENT_DOB 
		,NULL AS CLIENT_DATE_OF_DEATH 
		,CASE
			WHEN CL.GENDER = ''F'' THEN ''FEMALE''
			WHEN CL.GENDER = ''M'' THEN ''MALE''
		END AS CLIENT_GENDER,
        
        --BOTH UNKNOWN
		 NULL  AS Client_Ethnicity 
		,FALSE AS HISPANIC_OR_LATINO
		, NULL AS CLIENT_GENDER_IDENTITY -- NA
        , NULL AS CLIENT_SEXUAL_ORIENTATION -- NA
        , NULL AS CLIENT_RACE --NA
        ,NULL AS CLIENT_MARITAL_STATUS
		,NULL  AS CLIENT_SALUTATION
		,CL.FIRST_NAME  AS CLIENT_FIRST_NAME
		,PR.MIDDLE_NAME AS CLIENT_MIDDLE_NAME
		,CL.LAST_NAME  AS CLIENT_LAST_NAME
        ,CONCAT(UPPER(TRIM(CL.LAST_NAME)), '', '' , UPPER(TRIM(CL.FIRST_NAME)) , '' '',NVL(UPPER(TRIM(PR.MIDDLE_NAME)),'' '')) AS CLIENT_NAME
        ,CL.ADDRESS  AS CLIENT_ADDRESS1
		,PR.ADDRESS_LINE_2  AS CLIENT_ADDRESS2 
		,UPPER(TRIM(CL.CITY)) AS CLIENT_CITY
		,UPPER(TRIM(PR.STATE))  AS CLIENT_STATE_CODE
		,PR.ZIP  AS CLIENT_ZIP
		,NULL AS CLIENT_CLN_ADDRESS1
		,NULL AS CLIENT_CLN_ADDRESS2
		,NULL AS CLIENT_CLN_CITY
		,NULL AS CLIENT_CLN_STATE_CODE
		,NULL AS CLIENT_CLN_ZIP
		,NULL AS CLIENT_STD_ADDRESS1
		,NULL AS CLIENT_STD_ADDRESS2
		,NULL AS CLIENT_STD_CITY
		,NULL AS CLIENT_STD_STATE_CODE
		,NULL AS CLIENT_STD_ZIP
        ,CL.PHONE AS CLIENT_HOME_PHONE
		,PR.MOBILE_PHONE AS CLIENT_CELL_PHONE  
		,PR.WORK_PHONE AS CLIENT_WORK_PHONE 
     	,NULL AS CLIENT_FAX_NUMBER 
		,PR.EMAIL AS CLIENT_PERSONAL_EMAIL    
        ,PR.PROSPECT_DATE_CREATED::DATE AS REFERRAL_DATE  
        ,CARE_DATES.MIN_CARELOG::DATE - NVL(PR.PROSPECT_DATE_CREATED::DATE, PR.CREATED::DATE) AS DAYS_TO_SERVICE
		,NULL AS CONTRACT_BEGIN_DATE   
		,NULL AS CONTRACT_END_DATE   
		,CARE_DATES.MIN_CARELOG::DATE as FIRST_SERVICE_DATE   
		,CARE_DATES.MAX_CARELOG::DATE as LAST_SERVICE_DATE
		,PR.CREATED::DATE AS BEGIN_DATE
	    ,CARE_DATES.MAX_CARELOG::DATE AS END_DATES
        ,CASE WHEN PR.DEACTIVATED = TRUE THEN ''FALSE'' ELSE ''TRUE'' END AS ACTIVE_CLIENT_FLAG 
		,CASE
            WHEN  PR.DEACTIVATION_REASON  = 10  THEN ''OH-HOLD''
			WHEN  PR.DEACTIVATION_REASON  = 20 THEN ''NO_LONGER_NEED_CARE''
			WHEN  PR.DEACTIVATION_REASON  = 30 THEN ''CHOSE_OTHER_PROVIDER''
			WHEN  PR.DEACTIVATION_REASON  = 40 THEN ''MOVED_TO_CARE_FACILITY''
			WHEN  PR.DEACTIVATION_REASON  = 50 THEN ''HOSPITALIATION_FIRST_ADMISSION''
			WHEN  PR.DEACTIVATION_REASON  = 60 THEN ''HOSPITALIATION_READMISSION''
			WHEN  PR.DEACTIVATION_REASON  = 70 THEN ''MOVED_OUT_OF_AREA''
			WHEN PR.DEACTIVATION_REASON  = 80 THEN ''DISSATIFIED''
			WHEN  PR.DEACTIVATION_REASON  = 90 THEN ''DECEASED''
        ELSE NULL  
        END AS  DISCHARGE_REASON	 
		,NULL AS ON_HOLD_FLAGART_DATE
		,NULL AS ON_HOLD_EN    
		,NULL AS ON_HOLD_STD_DATE
        ,NULL as LINKED_ID
		,NULL AS ACQUIRED_FROM_COMPANY_KEY
		,NULL AS ACQUIRED_FROM_COMPANY_ID
		,NULL AS ACQUIRED_FROM_COMPANY_FULL_NAME
		,NULL AS ACQUISITION_DATE
		,NULL AS ACQUISITION_FLAG
		,NULL AS ADMISSION_DATE
		,NULL AS ADMISSION_FLAG
		,NULL AS CLIENT_CONVERTED_FLAG 
		,MD5(PM.AGENCY_ID || ''-'' || PM.ID || ''-'' || ''CLEARCARE'') AS PRIMARY_SUPERVISOR_KEY 
		,PM.ID AS PRIMARY_SUPERVISOR_CODE
		,CONCAT(UPPER(TRIM(PM.LAST_NAME)), '', '' , UPPER(TRIM(PM.FIRST_NAME)) , '' '',NVL(UPPER(TRIM(PM.MIDDLE_NAME)),'' '')) AS PRIMARY_SUPERVISOR_NAME
		,MD5(SM.AGENCY_ID || ''-'' || SM.ID || ''-'' || ''CLEARCARE'') AS SECONDARY_SUPERVISOR_KEY
		,SM.ID AS SECONDARY_SUPERVISOR_CODE
		,CONCAT(UPPER(TRIM(SM.LAST_NAME)), '', '' , UPPER(TRIM(SM.FIRST_NAME)) , '' '',NVL(UPPER(TRIM(SM.MIDDLE_NAME)),'' '')) AS SECONDARY_SUPERVISOR_NAME
        
        --NEED DIM BRANCH KEY, STATE, NAME
        ,MD5( AG.AGENCY_ID || ''-'' || AG.NAME || ''-'' || ''CLEARCARE'') AS PRIMARY_BRANCH_KEY
		,''OH'' || '' - '' || UPPER(AG.NAME) || '' - '' || AG.ID AS PRIMARY_BRANCH_NAME 
		,''OH'' AS PRIMARY_BRANCH_STATE
        
		,NULL AS GUARANTOR_NAME
		,NULL AS NOTES
        ,NULL AS AGENCY
		,TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
		,TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
        :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
                        
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
		CURRENT_USER as ETL_INSERTED_BY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE,
		CURRENT_USER as ETL_LAST_UPDATED_BY,
		0 as ETL_DELETED_FLAG,
		0 as ETL_INFERRED_MEMBER_FLAG
FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.CLEARCARE.CLIENT_MASTER_LIST CL
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.CLEARCARE.profile_patient_agencylocation AS PR ON CL.PATIENT_ID = PR.PATIENT_ID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.CLEARCARE.patient_patient AS PA ON PR.patient_id = PA.id 
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.CLEARCARE.AGENCY_AGENCYLOCATION AG ON AG.ID = PA.LOCATION_ID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.CLEARCARE.profile_patient_agencylocation PM ON PM.ID = PR.PRIMARY_MANAGER_ID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.CLEARCARE.profile_patient_agencylocation SM ON SM.ID = PR.SECONDARY_MANAGER_ID
LEFT JOIN CARE_DATES ON CARE_DATES.PATIENT_ID = CL.PATIENT_ID
WHERE PA.is_client = true AND AG.AGENCY_ID IN (2459)
;
    SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

    return return_result;
END;
    
 EOT
}

