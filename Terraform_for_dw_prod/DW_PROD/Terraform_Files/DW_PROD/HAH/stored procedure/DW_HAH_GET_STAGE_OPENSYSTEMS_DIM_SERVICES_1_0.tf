resource "snowflake_procedure" "DW_HAH_GET_STAGE_OPENSYSTEMS_DIM_SERVICES_1_0" {
	name ="GET_STAGE_OPENSYSTEMS_DIM_SERVICES_1_0"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

Begin
--*****************************************************************************************************************************
-- NAME:  OPENSYSTEMS_DIM_SERVICES_1_0
--
-- PURPOSE: Creates one row per SERVICE according to OPENSYSTEM
--
-- DEVELOPMENT LOG:
-- DATE        	AUTHOR                	NOTES:
-- --------    	-------------------   	-----------------------------------------------------------------------------------------------
-- 11/09/2022	Sanket Jain     		Initial development
--***************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.OPENSYSTEMS_DIM_SERVICES_1_0
SELECT MD5(CONCAT(''OPENSYSTEMS'' || ''-'' || SC.SERVICECODEID || ''-'' || ''HHAEXCHANGE'')) AS SERVICE_KEY
   	 , CONCAT(''OPENSYSTEMS - '',CASE WHEN IFNULL(TRIM(c.State),TRIM(PR.State)) IN (''PA'',''DE'') THEN IFNULL(TRIM(c.State),TRIM(PR.State))
   				   WHEN SC.CONTRACTNAME LIKE ''%DE'' THEN ''DE''  ELSE ''PA'' END) AS SYSTEM_CODE   	 
   	 , 17 AS SOURCE_SYSTEM_ID
   	 , SC.SERVICECODEID AS SERVICE_CODE_ID
   	 , UPPER(SC.SERVICECODE) AS NAME
   	 , NULL AS BILL_CODE_ID
   	 , NULL AS IS_EXPENCE
   	 , NULL AS IS_MULTIPLE
   	 , NULL AS OTHER_CODE
   	 , NULL AS DEFAULT_COST
   	 , NULL AS DEFAULT_PAY_UNIT_FLAG
   	 , NULL AS DEFAULT_BILL_UNIT_FLAG
   	 , NULL AS CATEGORY_ID
   	 , NULL AS PAYROLL_CODE
   	 , NULL AS DEFAULT_REIMBURSMENT
   	 , NULL AS WC
   	 , NULL AS SHIFT_PAY
   	 , NULL AS OT_PAY
   	 , NULL AS BILL_EXCLUDE_HOLIDAY
   	 , NULL AS PAY_EXCLUDED_HOLIDAY
   	 , NULL AS IS_CAT
   	 , NULL AS COMMISSION_RATE
   	 , NULL AS BONUS_POINTS
   	 , CASE WHEN UPPER(SC.STATUS) = ''ACTIVE'' THEN UPPER(''TRUE'' :: BOOLEAN)
   	   ELSE UPPER(''FALSE'' :: BOOLEAN) END AS ACTIVE
   	 , NULL AS REVENUE_CODE
   	 , NULL AS PAY
   	 , NULL AS POC_FIRST_BIL_LABLE_FLAG
   	 , NULL AS EXPENCE_TYPE_ID
   	 , NULL AS CREATED_DATE
   	 , NULL AS CREATED_USER
   	 , NULL AS MODIFIED_DATE
   	 , NULL AS MODIFIED_USER
   	 , NULL AS TS
   	 , NULL AS LIST_ITEM_TYPE
   	 , NULL AS RPT_GROUP_ID
   	 , NULL AS BRANCH_ID
   	 , NULL AS OVERRIDE_ID
   	 , NULL AS DESCRIPTION
   	 , NULL AS TAX_GROUP_ID
   	 , NULL AS LEGACY_ID
   	 , NULL AS LEGACY_BRANCH_ID
   	 , NULL AS ACCT_ID
   	 , NULL AS UPLOAD_TELEPHONY
   	 , NULL AS TELEPHONY_TASK_ID
   	 , NULL AS INCLUDE_EFT
   	 , NULL AS PROJECTED_AVG_BILL_VISIT
   	 , NULL AS PROJECTED_AVG_PAY_VISIT
   	 , NULL AS PROJECTED_AVG_PAY_HOURLY
   	 , NULL AS PROJECTED_AVG_BILL_HOURLY
   	 , NULL AS IS_COPY
   	 , NULL AS IS_WORKING
   	 , NULL AS DEDUCT_ARN
   	 , NULL AS LIVE_IN_RPT_HRS
   	 , NULL AS ACCT_CODE
   	 , NULL AS DISPLAY_ON_CLIENT_PORTAL
   	 , NULL AS DISPLAY_ON_CAREGIVER_PORTAL
   	 , NULL AS THERAPY_COUNTING_TYPE
   	 , NULL AS MEDICARE_DISCIPLINE
   	 , NULL AS DOC_TYPE
   	 , NULL AS IS_MULTIPLE_SERVICE
   	 , NULL AS INSERT_DATE
   	 , NULL AS UPDATE_DATE
   	 , FALSE AS DELETED_FLAG
   	 , SC.SYS_CHANGE_VERSION  AS SYS_CHANGE_VERSION
   	 , SC.SYS_CHANGE_OPERATION AS SYS_CHANGE_OPERATION
   	 , VOR.REVENUE_CATEGORY  AS REVENUE_CATEGORY
   	 , VOR.REVENUE_SUBCATEGORY_CODE  AS REVENUE_SUBCATEGORY_CODE
   	 , UPPER(VOR.REVENUE_SUBCATEGORY_NAME)  AS  REVENUE_SUBCATEGORY_NAME
   	 , :STR_ETL_TASK_KEY AS ETL_TASK_KEY
   	 , :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
     , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
   	 , CURRENT_USER as ETL_INSERTED_BY
   	 , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
   	 , CURRENT_USER as ETL_LAST_UPDATED_BY
   	 , 0 AS ETL_DELETED_FLAG
   	 , 0 AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.SERVICECODES SC
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.Contracts c  on SC.ContractID = c.ContractID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.Payer_REPL PR ON  PR.PayerID = SC.ContractID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.VW_OPENSYSTEMS_REVENUE vor ON vor.SERVICECODEID = sc.SERVICECODEID;
RETURN ''SUCCESS'';
end;

 EOT
}

