resource "snowflake_procedure" "DW_HAH_GET_STAGE_MATRIXCARE_FACT_INVOICE_TRANSACTIONS" {
	name ="GET_STAGE_MATRIXCARE_FACT_INVOICE_TRANSACTIONS"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  MATRIXCARE_FACT_INVOICE_TRANSACTIONS
--
-- DEVELOPMENT LOG:
-- DATE         AUTHOR              NOTES:
-- --------     ------------------- -----------------------------------------------------------------------------------------------
-- 12/28/23 	PINKAL PANCHAL 		Initial development
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.MATRIXCARE_FACT_INVOICE_TRANSACTIONS 

SELECT
MD5(''MATRIXCARE'' || ''-'' || P.POST_ID::STRING || ''-'' || ''MATRIXCARE'') AS TRANSACTION_KEY,
P.POST_ID  AS TRANSACTION_NUMBER,
MD5(''MATRIXCARE'' || ''-'' || P.POST_INVOICEDETAILID::STRING || ''-'' || ''MATRIXCARE'') AS REVENUE_KEY,
MD5(''MATRIXCARE'' || ''-'' || COALESCE(SCH.SCH_ID,''-1'') || ''-'' || ''MATRIXCARE'') AS VISIT_KEY,
MD5(''MATRIXCARE'' || ''-'' || NVL(P.POST_PAYMENTPOSTINGTYPEID::STRING,''Unknown'') || ''-'' || ''MATRIXCARE'') AS TRANSACTION_TYPE_KEY,
NVL(POST_AMOUNT,0) * -1 AS AMOUNT,
Date(P.POST_CREATEDDATE) AS TRANSACTION_CREATED,
Date(P.POST_POSTEDDATE) AS TRANSACTION_POSTED,
NULL AS TRANSACTION_DATE,
NULL AS FINAL_TRANSACTION_DATE,
PAYREG.PMTREG_NUMBER  AS CHECK_NUMBER,
NULL AS CHECK_DATE,								-- This is not tracked in Matrixcare
PAYREG.PMTREG_DEPOSITDATE AS DEPOSIT_DATE,
P.POST_POSTEDDATE AS POSTED_DATE,
''MATRIXCARE'' AS SYSTEM_CODE,
7 AS SOURCE_SYSTEM_ID,
:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,                     
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE
,CURRENT_USER as ETL_INSERTED_BY
,convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE
,CURRENT_USER as ETL_LAST_UPDATED_BY
,0 as ETL_DELETED_FLAG
FROM
DISC_${var.SF_ENVIRONMENT}.MATRIXCARE.STVHC_T_PAYMENTPOSTING P
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.MATRIXCARE.STVHC_T_INVOICEDETAILS INVD ON INVD.INVD_ID = P.POST_INVOICEDETAILID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.MATRIXCARE.STVHC_T_SCHEDULES SCH ON INVD.INVD_SCHEDULEID = SCH.SCH_ID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.MATRIXCARE.STVHC_T_PAYMENTREGISTER PAYREG ON PAYREG.PMTREG_ID = P.POST_PAYMENTREGISTERID 
WHERE P.POST_INVOICEDETAILID IS NOT NULL
;
    
RETURN ''SUCCESS'';
END;

 EOT
}

