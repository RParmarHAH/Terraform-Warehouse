resource "snowflake_procedure" "DW_HAH_GET_STAGE_DATAFLEXSYNCDATA_FACT_CLIENT_SERVICE" {
	name ="GET_STAGE_DATAFLEXSYNCDATA_FACT_CLIENT_SERVICE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN 
--*****************************************************************************************************************************
-- NAME:   DATAFLEXSYNCDATA_FACT_CLIENT_SERVICE 
--
-- PURPOSE: Populates Stage FACT_CLIENT_SERVICE, FOR PATIENTS BASED ON CONTARCT  
--
--
-- Development LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------
-- 03/07/23    SANKET JAIN           Initial version
--*****************************************************************************************************************************
--Auth info will contain opp Auth freq value, if auth is weekly then it will have monthlymax value and if monthly then weekly max value
--This prc is taking auth type from DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCONTRACTSAUTH which was created
--after receiving multiple weekly auth type contract in jira ticket  ---IDDOX-554
--*********************************************************************************************************************
CALL DW_${var.SF_ENVIRONMENT}.HAH.GET_STAGE_DATAFLEXSYNCDATA_DIM_DERIVED_AUTH_FROM_HISTORY_WITH_MASTER_DEDUP(-1,-1,-1);	
	
INSERT OVERWRITE INTO STAGE.DATAFLEXSYNCDATA_FACT_CLIENT_SERVICE

WITH CLIENT_DATA AS
(
	SELECT * FROM
	(
		SELECT TRIM(DBNAME) AS MASTER_DBNAME,
               TRIM(REGEXP_REPLACE(MASTER_ID, DBNAME))::NUMBER AS MASTER_CLIENT_NUMBER,
               TRIM(DBNAME) AS DBNAME,
 	           "NUMBER" AS CLIENT_NUMBER
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.CLIENT_MASTER_LIST
	)
	UNION
	SELECT * FROM
	(
		SELECT TRIM(MASTER.DBNAME) AS MASTER_DBNAME,
               TRIM(REGEXP_REPLACE(MASTER.MASTER_ID, MASTER.DBNAME))::NUMBER AS MASTER_CLIENT_NUMBER,
               TRIM(MATCH.DBNAME) AS DBNAME,
               MATCH."NUMBER" AS CLIENT_NUMBER
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.CLIENT_MATCH_LIST AS MATCH
        JOIN DISC_DEDUPE_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.CLIENT_MASTER_LIST AS MASTER 
            ON MASTER.MASTER_ID = MATCH.MASTER_ID
        WHERE MATCH.ID <> MATCH.MASTER_ID
	)
)
, DATA AS (
	SELECT 	DISTINCT CC.DBNAME,CC.CLIENTNUMBER,CC.CONTRACTCODE
	, CC.BEGINSERVICEDATE,CC.ENDSERVICEDATE,CC.MASTER_RN 
	, md5(NVL(CC.DBNAME, '''') || ''-'' ||  COALESCE(CLI_D.MASTER_CLIENT_NUMBER, CC.CLIENTNUMBER) || ''-'' || CC.MASTER_RN || ''-'' || CC.CONTRACTCODE || ''-'' || COALESCE(TRIM(CON.REVENUESUBCATEGORY),''-1'') || ''-'' || ''DATAFLEXSYNCDATA'') AS CLIENT_SERVICE_KEY
	, 3 AS SOURCE_SYSTEM_ID
	, TRIM(CC.DBNAME) AS SYSTEM_CODE
	, CON.DBNAME AS AA,CON.CONTRACTCODE AS BB
	, CLI_D.MASTER_DBNAME,CC.DBNAME,CLI_D.MASTER_CLIENT_NUMBER,CC.CLIENTNUMBER
	, MD5(COALESCE(UPPER(TRIM(CON.DBNAME)),''-1'') || ''-'' || COALESCE(UPPER(TRIM(CON.CONTRACTCODE)),''-1'') || ''-'' || COALESCE(TRIM(CON.REVENUESUBCATEGORY),''-1'') || ''-'' || ''DATAFLEXSYNCDATA'')  AS PARTNER_CONTRACT_SERVICE_KEY
	, MD5(COALESCE(CLI_D.DBNAME, CC.DBNAME) || ''-'' || COALESCE(CLI_D.MASTER_CLIENT_NUMBER, CC.CLIENTNUMBER) || ''-'' || CC.CONTRACTCODE || ''-'' || ''DATAFLEXSYNCDATA'')  AS CLIENT_ADMISSION_KEY
	, MD5(NVL(CLI_D.MASTER_DBNAME,CC.DBNAME) || ''-'' || NVL(CLI_D.MASTER_CLIENT_NUMBER,CC.CLIENTNUMBER) || ''-'' || ''DATAFLEXSYNCDATA'') AS CLIENT_KEY
	, MD5(COALESCE(TRIM(CON.DBNAME),''-1'') || ''-'' || COALESCE(TRIM(CON.REVENUESUBCATEGORY),''-1'') || ''-'' || COALESCE(TRIM(CON.REVENUECATEGORY),''-1'') || ''-'' || ''DATAFLEXSYNCDATA'') AS SERVICE_KEY
	, CON.DEFAULTBILLCODE AS BILL_CODE 
	, IFF(BILL_CODE IS NULL,NULL,''Hourly'') AS BILL_TYPE
    , CASE  WHEN CON.BILLEDBYQUARTERHOURS=TRUE THEN ''Quarter Hours''
    	   WHEN CON.BILLBYHALFHOURS=TRUE THEN ''Half Hours''
      ELSE IFF(BILL_CODE IS NULL,NULL,''Hourly'') END AS  BILL_UOM
    , ''Hourly'' AS SCHEDULE_TYPE
    , ''Hourly'' AS SCHEDULE_UOM
    , CUT.END_DATE AS CUTEND
    , CON.REVENUESUBCATEGORY AS AUTHORIZATION_DISCIPLINE
    , CC.DATECHANGED AS AUTHORIZATION_DATE
    , MODIFIED_START_DATE AS AUTHORIZATION_PERIOD_START_DATE 
	, iff(MODIFIED_END_DATE>CUT.END_DATE,CUT.END_DATE,MODIFIED_END_DATE) AS AUTHORIZATION_PERIOD_END_DATE
	, DATEDIFF(DAY,AUTHORIZATION_PERIOD_START_DATE,AUTHORIZATION_PERIOD_END_DATE)+1 AS EFFECTIVE_DAYS
    , ''Hourly'' AS AUTHORIZATION_TYPE
    , EC.AUTHTYPE AS AUTHORIZATION_UOM
    , IFF(EC.AUTHTYPE = ''Weekly'',MONTHLYMAXHOURS,WEEKLYMAXHOURS) AS AUTH_INFO
    , iff(COALESCE(MONTHS_BETWEEN(AUTHORIZATION_PERIOD_END_DATE,AUTHORIZATION_PERIOD_START_DATE),0)<0,0,COALESCE(MONTHS_BETWEEN(AUTHORIZATION_PERIOD_END_DATE,AUTHORIZATION_PERIOD_START_DATE),0)) AS mon
    , CASE WHEN AUTHORIZATION_PERIOD_END_DATE=LAST_DAY(AUTHORIZATION_PERIOD_END_DATE)
        	AND AUTHORIZATION_PERIOD_START_DATE=DATE_TRUNC(month, AUTHORIZATION_PERIOD_START_DATE)
         	THEN ROUND(mon) 
        	ELSE mon  
      END AS UNIT
    , MONTHLYMAXHOURS AS AUTHORIZATION_MAX_UNITS_BY_UOM
	, IFNULL(iff(AUTHORIZATION_PERIOD_START_DATE=AUTHORIZATION_PERIOD_END_DATE,MONTHLYMAXHOURS,MONTHLYMAXHOURS*CEIL(UNIT)),0) AS AUTHORIZATION_MAX_UNITS
    , IFF(EC.AUTHTYPE = ''Weekly'', WEEKLYMAXHOURS, MONTHLYMAXHOURS) AS AUTHORIZATION_MAX_UNITS_ADJUSTED_BY_UOM  
    , IFF(EC.AUTHTYPE = ''Weekly'', (WEEKLYMAXHOURS/7)*EFFECTIVE_DAYS,
    		IFF(AUTHORIZATION_PERIOD_START_DATE=AUTHORIZATION_PERIOD_END_DATE,MONTHLYMAXHOURS/day(LAST_DAY(AUTHORIZATION_PERIOD_START_DATE)),
    		IFNULL(MONTHLYMAXHOURS*UNIT,0)))
 AS AUTHORIZATION_MAX_UNITS_ADJUSTED
   	, IFF(CURRENT_DATE() BETWEEN AUTHORIZATION_PERIOD_START_DATE AND AUTHORIZATION_PERIOD_END_DATE,TRUE,FALSE) AS ACTIVE_FLAG
	, FALSE AS CANCELLED_FLAG
FROM DW_${var.SF_ENVIRONMENT}.STAGE.DATAFLEXSYNCDATA_DIM_DERIVED_AUTH_FROM_HISTORY_WITH_MASTER_DEDUP CC
LEFT JOIN CLIENT_DATA CLI_D 
	ON CLI_D.CLIENT_NUMBER = CC.CLIENTNUMBER 
	AND CLI_D.DBNAME = CC.DBNAME
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCONTRACTSAUTH EC
    ON TRIM(CC.DBNAME) = TRIM(EC.DBNAME)
	AND TRIM(CC.CONTRACTCODE) = TRIM(EC.CONTRACTCODE)
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCONTRACTS CON
	ON TRIM(CC.DBNAME) = TRIM(CON.DBNAME)
	AND TRIM(CC.CONTRACTCODE) = TRIM(CON.CONTRACTCODE)
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.FACT_SYSTEM_CUTOVER_DATE_2_0 CUT
	ON MD5(UPPER(TRIM(CON.DBNAME)) || ''-'' || UPPER(TRIM(CON.CONTRACTCODE)) || ''-'' || ''DATAFLEXSYNCDATA'')
	= CUT.PARTNER_CONTRACT_SERVICE_KEY
)
SELECT DISTINCT CLIENT_SERVICE_KEY
	,SOURCE_SYSTEM_ID
	,SYSTEM_CODE
	,PARTNER_CONTRACT_SERVICE_KEY
	,CLIENT_ADMISSION_KEY
	,CLIENT_KEY
	,SERVICE_KEY
	,BILL_CODE
	,BILL_TYPE
	,BILL_UOM
	,SCHEDULE_TYPE
	,SCHEDULE_UOM
	,AUTHORIZATION_DISCIPLINE
	,AUTHORIZATION_DATE
	,AUTHORIZATION_PERIOD_START_DATE
	,AUTHORIZATION_PERIOD_END_DATE
	,EFFECTIVE_DAYS
	,AUTHORIZATION_TYPE
	,AUTHORIZATION_UOM
	,AUTH_INFO::VARIANT
	,AUTHORIZATION_MAX_UNITS_BY_UOM
	,AUTHORIZATION_MAX_UNITS::NUMBER(38,3) AS AUTHORIZATION_MAX_UNITS
	,AUTHORIZATION_MAX_UNITS_ADJUSTED_BY_UOM
	,AUTHORIZATION_MAX_UNITS_ADJUSTED::NUMBER(38,3) AS AUTHORIZATION_MAX_UNITS_ADJUSTED
	,ACTIVE_FLAG
	,CANCELLED_FLAG
	,:STR_ETL_TASK_KEY  AS ETL_TASK_KEY
    ,:STR_ETL_TASK_KEY  AS ETL_INSERTED_TASK_KEY
   	,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
    ,CURRENT_USER as ETL_INSERTED_BY
    ,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
    ,CURRENT_USER as ETL_LAST_UPDATED_BY
    ,0 AS ETL_DELETED_FLAG 
FROM DATA;																

RETURN ''SUCCESS'';
end;

 EOT
}

