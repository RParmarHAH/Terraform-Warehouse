resource "snowflake_procedure" "DW_HAH_GET_STAGE_ALLIANCE_DIM_PARTNER_CONTRACT" {
	name ="GET_STAGE_ALLIANCE_DIM_PARTNER_CONTRACT"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
    --*****************************************************************************************************************************
-- NAME:  ALLIANCE_DIM_PARTNER
--
-- PURPOSE: Creates one row per PARTNER AND CONTRACT according to ALLIANCE 
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 11/07/23     Shraddha Sejpal        Initial development
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.ALLIANCE_DIM_PARTNER_CONTRACT
WITH DATA AS
(
	SELECT DISTINCT CASE WHEN (CONTAINS(UPPER(P.BADDRESS1), C.FIRSTNAME) AND CONTAINS(UPPER(P.BADDRESS1), C.LASTNAME)) 
								OR (
										CONTAINS(UPPER(C.LASTNAME), REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\\\\\\\\\S+$''))
										OR CONTAINS(REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\\\\\\\\\S+$''), UPPER(C.LASTNAME)
										)
								) OR CT.NAME = ''Private Pay''
								  OR P.PAYORID IS NULL THEN TRUE ELSE FALSE END IS_PRIVATE_PAY
					, MD5(''ALLIANCE'' 
								||  ''-'' || NVL(P.PAYORID, ''-1'')
								|| ''-'' || SR.SERVICECODE 
								|| ''-'' || IFF(IS_PRIVATE_PAY, ''PRIVATEPAY'', '''')
								|| ''-'' || ''GENERATIONS''
							) AS PARTNER_CONTRACT_KEY
					, 19 AS SOURCE_SYSTEM_ID
					, ''ALLIANCE'' AS SYSTEM_CODE
                    , ''MI'' AS STATE
					, MD5(''ALLIANCE'' || ''-'' || NVL(P.PAYORID,-1) ||  ''-'' || ''GENERATIONS'') AS PARTNER_KEY
 					, NVL(P.PAYORID, ''-1'') AS PARTNER_CODE
					, IFF(IS_PRIVATE_PAY AND P.BADDRESS1 IS NULL, ''Private Pay'', P.BADDRESS1) AS PARTNER_NAME 
					, CONCAT(NVL(P.PAYORID, ''-1''),''-'',SR.SERVICECODE) AS CONTRACT_CODE
					,TRIM(CONCAT(NVL(P.BADDRESS1,''''), IFF(IS_PRIVATE_PAY, '' (Private Pay)'',''''), '' - '', TRIM(SR.DESCRIPTION))) AS CONTRACT_NAME
					,TRUE AS ACTIVE_FLAG
					, ''1990-01-01'' AS START_DATE
		, ''9999-12-31''END_DATE 
		, :STR_ETL_TASK_KEY AS ETL_TASK_KEY
	 	, :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
	    , Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
		, CURRENT_USER AS ETL_INSERTED_BY
		, Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
		, CURRENT_USER AS ETL_LAST_UPDATED_BY
	 	, 0 AS ETL_DELETED_FLAG
	FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SCHEDULES SCH
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICES SR
	    ON SR.SERVICECODE  = SCH.SERVICECODE
   	LEFT JOIN  DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT C 
	    ON C.CLIENTID = SCH.CLIENTID 
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENTPAYORS CPY
	    ON SCH.CLIENTID = CPY.CLIENTID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.PAYOR P
	    ON P.PAYORID = CPY.PAYORID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENTTYPE CT 
	    ON CT.CLIENTTYPEID = C.CLIENTTYPEID
	WHERE C.CLIENTID NOT IN (SELECT CLIENT_NUMBER FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_CLIENT_NUMBER WHERE SOURCE_SYSTEM_ID = 19 AND SYSTEM_CODE = ''GENERATIONS'')
			AND SCH."DATE"::DATE <= ''2022-09-30''::DATE
UNION 
	SELECT DISTINCT CASE WHEN (CONTAINS(UPPER(P.BADDRESS1), C.FIRSTNAME) AND CONTAINS(UPPER(P.BADDRESS1), C.LASTNAME)) 
							OR (
									CONTAINS(UPPER(C.LASTNAME), REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\S+$''))
									OR CONTAINS(REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\S+$''), UPPER(C.LASTNAME)
									)
							) OR CT.NAME = ''Private Pay''
							  OR P.PAYORID IS NULL THEN TRUE ELSE FALSE END IS_PRIVATE_PAY
				, MD5(''ALLIANCE'' 
							||  ''-'' || NVL(P.PAYORID, ''-1'')
							|| ''-'' || SR.SERVICECODE 
							|| ''-'' || IFF(IS_PRIVATE_PAY, ''PRIVATEPAY'', '''')
							|| ''-'' || ''GENERATIONS''
						) AS PARTNER_CONTRACT_KEY
				, 19 AS SOURCE_SYSTEM_ID
				, ''ALLIANCE'' AS SYSTEM_CODE
                ,''MI'' AS STATE
				, MD5(''ALLIANCE'' || ''-'' || NVL(P.PAYORID,-1) ||  ''-'' || ''GENERATIONS'') AS PARTNER_KEY
				, NVL(P.PAYORID, -1) AS PARTNER_CODE
				, IFF(IS_PRIVATE_PAY AND P.BADDRESS1 IS NULL, ''Private Pay'', P.BADDRESS1) AS PARTNER_NAME 
				, CONCAT(NVL(P.PAYORID, -1), ''-'', SR.SERVICECODE) AS CONTRACT_CODE 
				, TRIM(CONCAT(NVL(P.BADDRESS1, '''')
							, IFF(IS_PRIVATE_PAY, '' (Private Pay)'',''''), '' - '', TRIM(SR.DESCRIPTION))) AS CONTRACT_NAME
				, TRUE AS ACTIVE_FLAG
		, ''1990-01-01'' AS START_DATE
		, ''9999-12-31''END_DATE 
		, :STR_ETL_TASK_KEY AS ETL_TASK_KEY
	 	, :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
	    , Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
		, CURRENT_USER AS ETL_INSERTED_BY
		, Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
		, CURRENT_USER AS ETL_LAST_UPDATED_BY
	 	, 0 AS ETL_DELETED_FLAG
	FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEREQUEST SRE
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICES SR
	    ON SR.SERVICECODE  = SRE.SERVICECODE
	INNER JOIN  DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT C 
	    ON C.CLIENTID = SRE.CLIENTID 
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENTPAYORS CPY
		ON CPY.CLIENTID = SRE.CLIENTID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.PAYOR P
	    ON P.PAYORID = CPY.PAYORID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENTTYPE CT 
	    ON CT.CLIENTTYPEID = C.CLIENTTYPEID
	WHERE C.CLIENTID NOT IN (SELECT CLIENT_NUMBER FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_CLIENT_NUMBER WHERE SOURCE_SYSTEM_ID = 19 AND SYSTEM_CODE = ''GENERATIONS'')
	QUALIFY DENSE_RANK() OVER(PARTITION BY SRE.SERVICEREQUESTID, CPY.CLIENTID 
					  	 ORDER BY IFF(NVL(SRE.PAYORID, 0) = CPY.PAYORID, 2, NVL(CPY.ISPRIMARY, 0)::INT) DESC
						  		, IFF(NVL(SRE.PAYORID, 0) = CPY.PAYORID, 2, NVL(CPY.CURRENTPAYOR, 0)::INT) DESC) = 1
)
SELECT PARTNER_CONTRACT_KEY,SOURCE_SYSTEM_ID,SYSTEM_CODE,STATE,PARTNER_KEY,PARTNER_CODE,PARTNER_NAME,
CONTRACT_CODE,CONTRACT_NAME,ACTIVE_FLAG,START_DATE,END_DATE,ETL_TASK_KEY,ETL_INSERTED_TASK_KEY,
ETL_INSERTED_DATE,ETL_INSERTED_BY,ETL_LAST_UPDATED_DATE,ETL_LAST_UPDATED_BY,ETL_DELETED_FLAG
FROM DATA;
return ''SUCCESS'';
END;

 EOT
}

