resource "snowflake_procedure" "DW_HAH_GET_STAGE_ALLIANCE_FACT_INTAKE" {
	name ="GET_STAGE_ALLIANCE_FACT_INTAKE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT
BEGIN
--*****************************************************************************************************************************
-- NAME:  ALLIANCE_FACT_INTAKE
--
-- PURPOSE: Creates one row per intake according to ALLIANCE 
--
-- DEVELOPMENT LOG:
-- DATE        	  AUTHOR                	NOTES:
-- ----------     -------------------   	-----------------------------------------------------------------------------------------------
-- 08/24/2022     Mohit Vaghadiya         	Initial development
-- 09/13/2022	  Mohit Vaghadiya			Including data dated before 09/30/2022 since Alliance will be moved to Matrixcare in October 2022
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.ALLIANCE_FACT_INTAKE 
WITH CLIENT AS
(
	SELECT * FROM
	(
		SELECT CLIENTID, MASTER_ID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT_MASTER_LIST 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT CLIENTID, MASTER_ID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT_MATCH_LIST
		WHERE CLIENTID NOT IN (SELECT CLIENTID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT_MASTER_LIST) 
	)
),
WEEKLY_ORDERS AS
(
SELECT SR.SERVICEREQUESTID 
		, DD.CALENDAR_DATE AS AUTH_DAY
		, DECODE(UPPER(DAYNAME(DD.CALENDAR_DATE))
					, ''SAT'', NVL(SR.SATURDAY, FALSE)
					, ''MON'', NVL(SR.MONDAY, FALSE)
					, ''TUE'', NVL(SR.TUESDAY, FALSE)
					, ''WED'', NVL(SR.WEDNESDAY, FALSE)
					, ''THU'', NVL(SR.THURSDAY, FALSE)
					, ''FRI'', NVL(SR.FRIDAY, FALSE)
					, ''SUN'', NVL(SR.SUNDAY, FALSE)
					) AS HAS_AUTH
		, IFF(HAS_AUTH, SR.TOTALHOURS, 0) AS AUTH_HOURS
FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEREQUEST SR
INNER JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_DATE DD
	ON DD.CALENDAR_DATE BETWEEN SR.STARTDATE::DATE AND SR.ENDDATE::DATE
WHERE SR.FREQUENCY = 1 -- Weekly
		--AND HAS_AUTH = TRUE
QUALIFY (DENSE_RANK() 
			OVER (PARTITION BY SR.SERVICEREQUESTID 
				  ORDER BY DD.HAH_CURRENT_WEEK_FIRST_DAY) + (SR.OCCURANCE-1)
		) % SR.OCCURANCE = 0
), 
MONTHLY_ORDERS AS
(
SELECT DISTINCT SR.SERVICEREQUESTID
				, DATE_TRUNC(MONTH, DD.CALENDAR_DATE) AS AUTH_MONTH 
				, SR.TOTALHOURS AS AUTH_HOURS
FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEREQUEST SR
INNER JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_DATE DD
	ON DD.CALENDAR_DATE BETWEEN SR.STARTDATE::DATE AND SR.ENDDATE::DATE
WHERE SR.FREQUENCY = 2 -- Monthly
		AND SR.DAYOFMONTH = DAY(DD.CALENDAR_DATE) -- X Day of Month
QUALIFY (DENSE_RANK() 
			OVER(PARTITION BY SR.SERVICEREQUESTID
				 ORDER BY DATE_TRUNC(MONTH, DD.CALENDAR_DATE)) + (SR.OCCURANCE-1)
		) % SR.OCCURANCE  = 0
),
MONTHLY_AUTH AS
(
	-- Monthly Orders
	SELECT SR.CLIENTID 
			, SR.SERVICECODE
			, DATE_TRUNC(MONTH, MA.AUTH_MONTH) AS AUTH_MONTH
			, SUM(MA.AUTH_HOURS) AS AUTH_HOURS 
	FROM MONTHLY_ORDERS MA
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEREQUEST SR
		ON SR.SERVICEREQUESTID = MA.SERVICEREQUESTID
	WHERE NVL(MA.AUTH_HOURS, 0) > 0
	GROUP BY SR.CLIENTID, SR.SERVICECODE, MA.AUTH_MONTH
	UNION ALL
	-- Weekly Orders
	SELECT SR.CLIENTID
			, SR.SERVICECODE 
			, DATE_TRUNC(MONTH, WO.AUTH_DAY) AS AUTH_MONTH
			, SUM(WO.AUTH_HOURS) AS AUTH_HOURS
	FROM WEEKLY_ORDERS WO
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEREQUEST SR
		ON SR.SERVICEREQUESTID = WO.SERVICEREQUESTID
	WHERE NVL(WO.AUTH_HOURS, 0) > 0
	GROUP BY SR.CLIENTID, SR.SERVICECODE, WO.AUTH_DAY
), AUTH_DATES AS
(
	SELECT DISTINCT SR.CLIENTID 
				, SR.SERVICECODE
				, FIRST_VALUE(SR.AUTHNUMBER) 
					OVER(PARTITION BY SR.CLIENTID, SR.SERVICECODE
						 ORDER BY SR.STARTDATE DESC) AS AUTHNUMBER
			   , MAX(SR.STARTDATE)
			   		OVER(PARTITION BY SR.CLIENTID, SR.SERVICECODE) AS LATEST_AUTH_BEGIN_DATE
			   , MAX(SR.ENDDATE) 
			   		OVER(PARTITION BY SR.CLIENTID, SR.SERVICECODE) AS LATEST_AUTH_END_DATE
	FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEREQUEST SR
), CONTRACT_MAPPING AS
(
	SELECT DISTINCT CASE WHEN (CONTAINS(UPPER(P.BADDRESS1), C.FIRSTNAME) AND CONTAINS(UPPER(P.BADDRESS1), C.LASTNAME)) 
							OR (
									CONTAINS(UPPER(C.LASTNAME), REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\S+$''))
									OR CONTAINS(REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\S+$''), UPPER(C.LASTNAME)
									)
							) OR CT.NAME = ''Private Pay''
							  OR P.PAYORID IS NULL
							THEN TRUE
					 ELSE FALSE 
				END IS_PRIAVATE_PAY
				, MD5(''ALLIANCE'' 
							||  ''-'' || NVL(P.PAYORID, ''-1'') 
							|| ''-'' || SR.SERVICECODE 
							|| ''-'' || IFF(IS_PRIAVATE_PAY, ''PRIVATEPAY'', '''')
							-- || ''-'' || IFF( C.CLIENTTYPEID=1 , ''PRIVATEPAY'',TRIM(SR.DESCRIPTION))
							|| ''-'' || ''GENERATIONS''
						) AS CONTRACT_KEY
				, NVL(P.PAYORID, -1) AS PAYORID
				, SRE.SERVICEREQUESTID 
				, SRE.CLIENTID 
	FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEREQUEST SRE
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICES SR
	    ON SR.SERVICECODE  = SRE.SERVICECODE
	INNER JOIN  DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT C 
	    ON C.CLIENTID = SRE.CLIENTID 
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENTPAYORS CPY
		ON CPY.CLIENTID = SRE.CLIENTID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.PAYOR P
	    ON P.PAYORID = CPY.PAYORID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENTTYPE CT 
	    ON CT.CLIENTTYPEID = C.CLIENTTYPEID
	WHERE C.CLIENTID NOT IN (SELECT CLIENT_NUMBER FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_CLIENT_NUMBER WHERE SOURCE_SYSTEM_ID = 19 AND SYSTEM_CODE = ''GENERATIONS'')
	QUALIFY DENSE_RANK() OVER(PARTITION BY SRE.SERVICEREQUESTID, CPY.CLIENTID 
					  	 ORDER BY IFF(NVL(SRE.PAYORID, 0) = CPY.PAYORID, 2, NVL(CPY.ISPRIMARY, 0)::INT) DESC
						  		, IFF(NVL(SRE.PAYORID, 0) = CPY.PAYORID, 2, NVL(CPY.CURRENTPAYOR, 0)::INT) DESC) = 1
)
, INTAKE_DATA AS
(
	SELECT DISTINCT MD5( ''ALLIANCE'' || ''-'' || C.CLIENTID || ''-'' || MA.AUTH_MONTH || ''-'' || CMAP.PAYORID || SR.SERVICECODE || ''-'' || ''GENERATIONS'') AS INTAKE_KEY
					, MA.AUTH_MONTH AS REPORT_DATE
					, MD5(''ALLIANCE'' || ''-'' || TRIM(C.LOCATIONID) || ''-'' || ''GENERATIONS'') AS BRANCH_KEY
					, DC.CLIENT_KEY AS CLIENT_KEY
					, CMAP.CONTRACT_KEY AS CONTRACT_KEY
					, 19 AS SOURCE_SYSTEM_ID
					, MA.AUTH_MONTH AS REAUTHORIZED_DATE 
					, NULL AS PRE_AUTH_NUMBER 
					, C.SERVICESTARTDATE::DATE AS BEGIN_SERVICE_DATE
					, C.SERVICEENDDATE::DATE AS END_SERVICE_DATE 
					, AD.LATEST_AUTH_BEGIN_DATE::DATE AS LATEST_AUTH_BEGIN_DATE
					, AD.LATEST_AUTH_END_DATE::DATE AS LATEST_AUTH_END_DATE
					, BM.NAME AS BRANCH_NAME
					, S.COST AS BILL_RATE
					, CL.CLIENTID AS CLIENT_NUMBER
					,  CONCAT(CMAP.PAYORID, ''-'', S.SERVICECODE) AS CONTRACT_CODE
					, ''ALLIANCE'' AS SYSTEM_CODE
					, CONCAT(CM.LASTNAME, '', '', CM.FIRSTNAME) AS CASE_MANAGER
					, SUM(MA.AUTH_HOURS) OVER (PARTITION BY C.CLIENTID, MA.AUTH_MONTH, CMAP.PAYORID, SR.SERVICECODE) AS HOURS_AUTHORIZED
					, SUM(MA.AUTH_HOURS) OVER (PARTITION BY C.CLIENTID, MA.AUTH_MONTH, CMAP.PAYORID, SR.SERVICECODE) AS HOURS_AUTHORIZED_NON_ADJUSTED,
					-- ETL Fields
			       	:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
			        :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
					---1 AS ETL_TASK_KEY,
			        ---1 AS ETL_INSERTED_TASK_KEY
					, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
					, CURRENT_USER AS ETL_INSERTED_BY
					, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
					, CURRENT_USER AS ETL_LAST_UPDATED_BY
					, 0 AS ETL_DELETED_FLAG
	FROM MONTHLY_AUTH MA
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEREQUEST SR
		ON SR.CLIENTID = MA.CLIENTID
			AND SR.SERVICECODE = MA.SERVICECODE
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT C
		ON C.CLIENTID = SR.CLIENTID 
	INNER JOIN CLIENT CL
		ON CL.CLIENTID = C.CLIENTID
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.VW_BRANCH_MAPPING BM
		ON BM.LOCATION_ID = C.LOCATIONID
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICES S
		ON S.SERVICECODE = SR.SERVICECODE 
	INNER JOIN HAH.DIM_CLIENT DC
		ON DC.CLIENT_NUMBER = CL.MASTER_ID
			AND DC.SOURCE_SYSTEM_ID = 19
	LEFT JOIN CONTRACT_MAPPING CMAP
		ON CMAP.SERVICEREQUESTID = SR.SERVICEREQUESTID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CASEMANAGER CM 
		ON CM.CASEMANAGERID = C.CASEMANAGERID 
	LEFT JOIN AUTH_DATES AD
		ON AD.CLIENTID = SR.CLIENTID
			AND AD.SERVICECODE = SR.SERVICECODE
	WHERE MA.AUTH_MONTH::DATE <= ''2022-09-01''
			AND C.CLIENTID NOT IN (SELECT CLIENT_NUMBER FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_CLIENT_NUMBER WHERE SOURCE_SYSTEM_ID = 19 AND SYSTEM_CODE = ''GENERATIONS'')
)
SELECT INTAKE_KEY
		, REPORT_DATE
		, BRANCH_KEY
		, CLIENT_KEY
		, CONTRACT_KEY
		, SOURCE_SYSTEM_ID
		, REAUTHORIZED_DATE
		, PRE_AUTH_NUMBER
		, BEGIN_SERVICE_DATE
		, END_SERVICE_DATE
		, LATEST_AUTH_BEGIN_DATE
		, LATEST_AUTH_END_DATE
		, BRANCH_NAME
		, CLIENT_NUMBER
		, CONTRACT_CODE
		, BILL_RATE
		, SYSTEM_CODE
		, CASE_MANAGER
		, HOURS_AUTHORIZED
		, HOURS_AUTHORIZED_NON_ADJUSTED
		, ETL_TASK_KEY
		, ETL_INSERTED_TASK_KEY
		, ETL_INSERTED_DATE
		, ETL_INSERTED_BY
		, ETL_LAST_UPDATED_DATE
		, ETL_LAST_UPDATED_BY
		, ETL_DELETED_FLAG
FROM INTAKE_DATA;
RETURN ''SUCCESS'';
END
 EOT
}

