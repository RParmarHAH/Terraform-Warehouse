resource "snowflake_procedure" "DW_HAH_GET_STAGE_PAYOR_CONTRACT_UI_DIM_PARTNER_CONTRACT" {
	name ="GET_STAGE_PAYOR_CONTRACT_UI_DIM_PARTNER_CONTRACT"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    RETURN_RESULT VARCHAR;
BEGIN 
INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}."STAGE".PAYOR_CONTRACT_UI_DIM_PARTNER_CONTRACT 
SELECT  DISTINCT 
MD5( SYSTEM_CODE||''-''||PAYOR_ID||''-''||ORIGINAL_SYSTEM_CODE||''-''||CONTRACT_CODE||''-''||CONTRACT_NAME||''-''||''Payor_Contract UI'') AS PARENT_CONTRACT_KEY,
28 AS SOURCE_SYSTEM_ID,
''Payor_Contract UI'' AS SYSTEM_CODE,
ORIGINAL_SOURCE_SYSTEM_ID, 
ORIGINAL_SYSTEM_CODE,
MD5(SYSTEM_CODE||''-''||PAYOR_ID||''-''||SOURCE_SYSTEM_ID) AS PARTNER_KEY,
PAYOR_ID AS PARTNER_CODE,
PAYOR_NAME  AS PARTNER_NAME,
CONTRACT_CODE,
CONTRACT_NAME,
TRUE AS ACTIVE_FLAG,
''1990-01-01'' AS START_DATE,
''9999-12-31'' AS END_DATE,
:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
CURRENT_USER AS ETL_INSERTED_BY,
Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
CURRENT_USER AS ETL_LAST_UPDATED_BY,
0 AS ETL_DELETED_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.PAYOR_CONTRACT_UI.PAYOR_CONTRACT_MAPPING;
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Inserted '') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;

 EOT
}

