resource "snowflake_procedure" "DW_HAH_GET_STAGE_QUICKBOOKS_DIM_BRANCH" {
	name ="GET_STAGE_QUICKBOOKS_DIM_BRANCH"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT


BEGIN

--*********************************************************************************************************************************
-- NAME: QUICKBOOKS_DIM_BRANCH
--
-- PURPOSE: Creates one row per branch according to QuickBooks
--
-- DEVELOPMENT LOG:
-- DATE			AUTHOR				NOTES:
-- ---------	----------------	-----------------------------------------------------------------------------------------------        
-- 03/17/23		Aditya Shukla		Initial Development
--									(For employees who didn''t have branch details, ''QB - Corporate'' is hardcoded as branch name)
-- 05/25/23		Shikhar Saxena		Changed the logic to add SOURCE_SYSTEM_TYPE field
--*********************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.QUICKBOOKS_DIM_BRANCH

WITH BRANCHES AS (
	SELECT DISTINCT COMPANY, UPPER(TRIM(CLASS)) AS CLASS FROM DISC_${var.SF_ENVIRONMENT}.ADP.QB_EMPLOYEES WHERE CLASS IS NOT NULL
)
, ALL_BRANCHES AS (
SELECT DISTINCT 
	MD5(''QuickBooks'' || CLASS || COMPANY || 31) AS BRANCH_KEY,
	UPPER(TRIM(CLASS)) AS BRANCH_NAME,
	''QB - '' || COMPANY AS SYSTEM_CODE,
	31 AS SOURCE_SYSTEM_ID,
	ROW_NUMBER() OVER (ORDER BY CLASS) AS OFFICE_NUMBER,
	ROW_NUMBER() OVER (ORDER BY CLASS) AS OFFICE_CODE,
	NULL AS OFFICE_NAME,
	NULL AS OFFICE_NAME_ALT,
	NULL AS DEPARTMENT_NAME,
	NULL AS BRANCH_SERVICE_LINE,
	TRY_CAST( ''TRUE'' AS BOOLEAN ) AS PARENT_FLAG,
	MD5(''QuickBooks'' || CLASS || COMPANY || 31) AS PARENT_BRANCH_KEY,
	ROW_NUMBER() OVER (ORDER BY CLASS) AS PARENT_OFFICE_NUMBER,
	ROW_NUMBER() OVER (ORDER BY CLASS) AS PARENT_OFFICE_CODE,
	''OH'' || '' - '' || UPPER(TRIM(CLASS)) || '' ('' || PARENT_OFFICE_NUMBER || '')'' AS PARENT_BRANCH_NAME,
	NULL AS OFFICE_ADDRESS1,
	NULL AS OFFICE_ADDRESS2,
	NULL AS OFFICE_CITY,
	''OH'' AS OFFICE_STATE_CODE,
	NULL AS OFFICE_ZIP,
	NULL AS OFFICE_PHONE,
	NULL AS OFFICE_TOLL_FREE_PHONE,
	NULL AS OFFICE_FAX,
	''OH'' || '' - '' || UPPER(TRIM(CLASS)) || '' ('' || PARENT_OFFICE_NUMBER || '')'' AS DETAILED_OFFICE_NAME,
	NULL AS REGION_NUMBER,
	NULL AS REGION_NAME,
	NULL AS REGION_MANAGER,
	NULL AS REGION_MANAGER_EMPLOYEE_KEY,
	NULL AS SUBREGION_NAME,
	NULL AS PRIMARY_BRANCH_MANAGER_NAME,
	NULL AS PRIMARY_BRANCH_EMAIL,
	NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	NULL AS SECONDARY_BRANCH_MANAGER_NAME,
	NULL AS SECONDARY_BRANCH_EMAIL,
	NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	NULL AS RISKCONNECT_NODE_KEY,
	NULL AS RISKCONNECT_NAME,
	NULL AS HR_OFFICE_NUMBER,
	NULL AS HR_OFFICE_NAME,
	FALSE AS ACTIVE_FLAG
FROM BRANCHES
UNION ALL
SELECT DISTINCT 
	MD5(''QuickBooks'' || ''QB - CORPORATE'' || 31) AS BRANCH_KEY,
	''QB - CORPORATE'' AS BRANCH_NAME,
	''QB - PRIMEHOMECARE'' AS SYSTEM_CODE,
	31 AS SOURCE_SYSTEM_ID,
	10 AS OFFICE_NUMBER,
	10 AS OFFICE_CODE,
	NULL AS OFFICE_NAME,
	NULL AS OFFICE_NAME_ALT,
	NULL AS DEPARTMENT_NAME,
	NULL AS BRANCH_SERVICE_LINE,
	TRY_CAST( ''TRUE'' AS BOOLEAN ) AS PARENT_FLAG,
	MD5(''QuickBooks'' || ''QB - CORPORATE'' || 31) AS PARENT_BRANCH_KEY,
	10 AS PARENT_OFFICE_NUMBER,
	10 AS PARENT_OFFICE_CODE,
	''OH'' || '' - '' || ''QB - CORPORATE'' || '' ('' || PARENT_OFFICE_NUMBER || '')'' AS PARENT_BRANCH_NAME,
	NULL AS OFFICE_ADDRESS1,
	NULL AS OFFICE_ADDRESS2,
	NULL AS OFFICE_CITY,
	''OH'' AS OFFICE_STATE_CODE,
	NULL AS OFFICE_ZIP,
	NULL AS OFFICE_PHONE,
	NULL AS OFFICE_TOLL_FREE_PHONE,
	NULL AS OFFICE_FAX,
	''OH'' || '' - '' || ''QB - CORPORATE'' || '' ('' || PARENT_OFFICE_NUMBER || '')'' AS DETAILED_OFFICE_NAME,
	NULL AS REGION_NUMBER,
	NULL AS REGION_NAME,
	NULL AS REGION_MANAGER,
	NULL AS REGION_MANAGER_EMPLOYEE_KEY,
	NULL AS SUBREGION_NAME,
	NULL AS PRIMARY_BRANCH_MANAGER_NAME,
	NULL AS PRIMARY_BRANCH_EMAIL,
	NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	NULL AS SECONDARY_BRANCH_MANAGER_NAME,
	NULL AS SECONDARY_BRANCH_EMAIL,
	NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	NULL AS RISKCONNECT_NODE_KEY,
	NULL AS RISKCONNECT_NAME,
	NULL AS HR_OFFICE_NUMBER,
	NULL AS HR_OFFICE_NAME,
	FALSE AS ACTIVE_FLAG
)
SELECT BRANCH_KEY,
BRANCH_NAME,
ALL_BRANCHES.SYSTEM_CODE,
ALL_BRANCHES.SOURCE_SYSTEM_ID,
SOURCE_SYSTEM.SOURCE_SYSTEM_TYPE,
OFFICE_NUMBER,
OFFICE_CODE,
OFFICE_NAME,
OFFICE_NAME_ALT,
DEPARTMENT_NAME,
BRANCH_SERVICE_LINE,
PARENT_FLAG,
PARENT_BRANCH_KEY,
PARENT_OFFICE_NUMBER,
PARENT_OFFICE_CODE,
PARENT_BRANCH_NAME,
OFFICE_ADDRESS1,
OFFICE_ADDRESS2,
OFFICE_CITY,
OFFICE_STATE_CODE,
OFFICE_ZIP,
OFFICE_PHONE,
OFFICE_TOLL_FREE_PHONE,
OFFICE_FAX,
DETAILED_OFFICE_NAME,
REGION_NUMBER,
REGION_NAME,
REGION_MANAGER,
REGION_MANAGER_EMPLOYEE_KEY,
SUBREGION_NAME,
PRIMARY_BRANCH_MANAGER_NAME,
PRIMARY_BRANCH_EMAIL,
PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
SECONDARY_BRANCH_MANAGER_NAME,
SECONDARY_BRANCH_EMAIL,
SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
RISKCONNECT_NODE_KEY,
RISKCONNECT_NAME,
HR_OFFICE_NUMBER,
HR_OFFICE_NAME,
ACTIVE_FLAG,
TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
-1 AS ETL_TASK_KEY,
-1 AS ETL_INSERTED_TASK_KEY,
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
CURRENT_USER as ETL_INSERTED_BY ,
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
CURRENT_USER as ETL_LAST_UPDATED_BY,
TRY_CAST( ''FALSE'' AS BOOLEAN )  as ETL_DELETED_FLAG,
TRY_CAST( ''FALSE'' AS BOOLEAN ) as ETL_INFERRED_MEMBER_FLAG
FROM ALL_BRANCHES
LEFT JOIN HAH.DIM_SOURCE_SYSTEM AS SOURCE_SYSTEM ON ALL_BRANCHES.SOURCE_SYSTEM_ID = SOURCE_SYSTEM.SOURCE_SYSTEM_ID;

RETURN ''SUCESS'';
END;

 EOT
}

