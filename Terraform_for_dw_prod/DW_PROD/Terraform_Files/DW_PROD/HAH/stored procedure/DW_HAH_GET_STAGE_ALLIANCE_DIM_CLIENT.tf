resource "snowflake_procedure" "DW_HAH_GET_STAGE_ALLIANCE_DIM_CLIENT" {
	name ="GET_STAGE_ALLIANCE_DIM_CLIENT"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  ALLIANCE_DIM_CLIENT
--
-- PURPOSE: Creates one row per client according to GENERATIONS ALLIANCE
--
-- DEVELOPMENT LOG:
-- DATE       	 	AUTHOR                	NOTES:
-- --------    		-------------------   	-----------------------------------------------------------------------------------------------
-- 2022-07-26   	Mirisha Jarecha       	Initial Development
-- 2022-09-12	   	Leo Joy				 	Excluded Several clients
-- 2022-09-23	   	Leo Joy				 	Added Logic for Client contact those having * on their name(first contact person-Relative)
--									 		also Rest of the clients
-- 2023-19-01		Mohit Vaghadiya			Leveraged Supervisor dedupe
-- 11/08/2023       Trushali Ramoliya    Added the column for HISPANIC_OR_LATINO and also updated the logic for ethnicity as per IDDOX - 388
-- 11/20/2023       Sandesh Gosavi          ADDED A COULUMN AND CTE FOR CLIENT STATUS
-- 11/21/2023       Sandesh Gosavi        ADDED A LOGIC  FOR DISCHARGE_REASON
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.ALLIANCE_DIM_CLIENT
WITH CLIENT AS
(
	SELECT * FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT_MASTER_LIST  
	WHERE MASTER_ID IN 
	(
		SELECT MASTER_ID FROM
		(
			SELECT CLIENTID, MASTER_ID
			FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT_MASTER_LIST 
		)
		UNION
		SELECT MASTER_ID FROM
		(
			SELECT DISTINCT CLIENTID, MASTER_ID
			FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT_MATCH_LIST
			WHERE CLIENTID NOT IN (SELECT CLIENTID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT_MASTER_LIST) 
		)
	)
)
,SERVICE_DATE AS
(
	SELECT TRIM(C.CLIENTID) AS CLIENT_ID
			, MIN(TRIM(V.DATE)::DATE) AS FIRST_SERVICE_DATE
			, MAX(TRIM(V.DATE)::DATE) AS LAST_SERVICE_DATE
			,CASE TRIM(C.STATUS) WHEN  ''I'' THEN ''Inactive''
			                       WHEN  ''A'' THEN ''Active''
			                       WHEN  ''P'' THEN ''Pending''
			                       ELSE NULL END AS CLIENT_STATUS										 
			,CASE  WHEN len(c.STR_REASON) > 4995
				   THEN LEFT(c.STR_REASON, 4995) 
			 ELSE c.STR_REASON END AS DISCHARGE_REASON									 
	FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT C
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SCHEDULES V ON TRIM(C.CLIENTID) = TRIM(V.CLIENTID)
	GROUP BY ALL
), SUPERVISORS AS 
(
	SELECT * FROM
	(
		SELECT CASEMANAGERID, MASTER_ID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SUPERVISOR_MASTER_LIST 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT ID AS CASEMANAGERID, MASTER_ID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SUPERVISOR_MATCH_LIST
		WHERE ID NOT IN (SELECT CASEMANAGERID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SUPERVISOR_MASTER_LIST) 
	) 
), CLIENT_CONTACT AS
(
	SELECT SAM.CLIENTID
			, CASE 	WHEN FROM_CONTACTS IS NULL OR FROM_CONTACTS='''' THEN REGEXP_REPLACE(FROM_CLIENT,''[^0-9]'','''')
				 	WHEN FROM_CONTACTS ILIKE ANY ''%000%'' 			THEN REGEXP_REPLACE(FROM_CLIENT,''[^0-9]'','''')
					WHEN FROM_CLIENT LIKE  ''1-%''					THEN RIGHT(FROM_CLIENT,LENGTH(FROM_CLIENT)-2) 
					WHEN FROM_CONTACTS LIKE  ''1-%''					THEN RIGHT(FROM_CONTACTS,LENGTH(FROM_CONTACTS)-2)
					WHEN REGEXP_LIKE(FROM_CLIENT,''[^0-9]'')  		THEN REGEXP_REPLACE(FROM_CLIENT,''[^0-9]'','''')
					WHEN REGEXP_LIKE(FROM_CONTACTS,''[^0-9]'') THEN REGEXP_REPLACE(FROM_CLIENT,''[^0-9]'','''')
				 	ELSE REGEXP_REPLACE(FROM_CONTACTS,''[^0-9]'','''')
			  END AS REAL_CONTACTS
		    , FROM_CONTACTS
	FROM
	(
		SELECT UPPER(TRIM(CL.PHONE)) AS FROM_CLIENT
				, UPPER(TRIM(CS.PHONE)) AS FROM_CONTACTS
				, CS.OTHERCONTACTINFO
				, CS.LASTUPDATED
				, CS.CREATED
				, CL.CLIENTID
				, ROW_NUMBER() OVER (PARTITION BY CL.CLIENTID ORDER BY nvl(CS.LASTUPDATED,CS.CREATED ) DESC) AS RUN
		FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT CL
		JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CONTACTS CS
			ON CL.CLIENTID = CS.CLIENTID
		WHERE UPPER(FIRSTNAME) LIKE ANY (''%*%'') OR UPPER(LASTNAME) LIKE ANY (''%*%'')
		ORDER BY CL.CLIENTID ASC
	) SAM 
	WHERE SAM.RUN = 1
), REMAIN_CONTACT AS
(
	SELECT DISTINCT CCS.CLIENTID
					, CASE 	WHEN REGEXP_LIKE(UPPER(TRIM(CCS.PHONE)),''[^0-9]'')  
								THEN REGEXP_REPLACE(TRIM(UPPER(CCS.PHONE)),''[^0-9]'','''')
							WHEN CCS.PHONE ILIKE ANY (''1-%'',''1%'')				
								THEN REGEXP_REPLACE(TRIM(UPPER(RIGHT(CCS.PHONE,LENGTH(CCS.PHONE)-2))),''[^0-9]'','''')
						 	ELSE REGEXP_REPLACE(TRIM(UPPER(CCS.PHONE)),''[^0-9]'','''')
					END AS REAL_CONTATCS,CCS.PHONE
	FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENT CCS 
 	LEFT JOIN CLIENT_CONTACT CC
		ON CCS.CLIENTID=CC.CLIENTID
	WHERE CCS.CLIENTID NOT IN (SELECT DISTINCT CC.CLIENTID FROM CLIENT_CONTACT CC)
), TOTAL_CONTACT AS
( 
	SELECT * FROM CLIENT_CONTACT CCT
	UNION
	SELECT * FROM REMAIN_CONTACT RC
), HOLD_DATE AS 
(
	SELECT DISTINCT TRIM(C.CLIENTID) AS CLIENT_ID
					, MAX(TRIM(C.STARTDATE)::DATE) AS START_DATE
					, MAX(TRIM(C.ENDDATE)::DATE) AS END_DATE		
	FROM DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEINTERRUPTIONS	C
	GROUP BY CLIENT_ID
)
SELECT DISTINCT MD5(''ALLIANCE'' || ''-'' || CL.CLIENTID || ''-'' || ''GENERATIONS'') AS CLIENT_KEY
				, CL.MASTER_ID AS CLIENT_NUMBER
				, ''ALLIANCE'' AS SYSTEM_CODE
				, 19 AS SOURCE_SYSTEM_ID
				, CASE WHEN DW_${var.SF_ENVIRONMENT}.STAGE.SSN_CLEANUP(CL.SSN) NOT IN (SELECT SSN FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_SSN)
						THEN HEX_ENCODE(DW_${var.SF_ENVIRONMENT}.STAGE.SSN_CLEANUP(CL.SSN))
				  END AS CLIENT_PID
				,NULL AS CLIENT_MEDICARE_ID
	 			,NULL AS MEDICAID_ID
				, TRY_TO_DATE(TRIM(CL.DATEOFBIRTH)) AS CLIENT_DOB
				, NULL AS CLIENT_DATE_OF_DEATH
				, CASE UPPER(TRIM(CL.GENDER))
						WHEN ''M'' THEN ''MALE''
						WHEN ''F'' THEN ''FEMALE''
						ELSE NULL
				  END AS CLIENT_GENDER
				, NULL AS CLIENT_ETHNICITY
				,FALSE AS HISPANIC_OR_LATINO				 
				,NULL AS CLIENT_GENDER_IDENTITY
				,NULL AS CLIENT_SEXUAL_ORIENTATION
				,NULL AS CLIENT_RACE
				, CASE TRIM(CMS.PATIENTMARRIEDSTATUS_8)
						WHEN ''1'' THEN ''Single''
						WHEN ''2'' THEN ''Married''
						WHEN ''3'' THEN ''Other''
						ELSE NULL
				  END AS CLIENT_MARITAL_STATUS --GETTING this FROM Medical Claim Form CMS 1500
				, NULL AS CLIENT_SALUTATION
				, UPPER(TRIM(CL.FIRSTNAME)) AS CLIENT_FIRST_NAME
				, UPPER(TRIM(CL.MIDDLEINIT)) AS CLIENT_MIDDLE_NAME
				, UPPER(TRIM(CL.LASTNAME)) AS CLIENT_LAST_NAME
				, UPPER(TRIM(CL.LASTNAME)) || '', '' || UPPER(TRIM(CL.FIRSTNAME)) || '' '' || IFNULL(UPPER(TRIM(CL.MIDDLEINIT)),'''') AS CLIENT_NAME
				, TRIM(CL.ADDRESS1) AS CLIENT_ADDRESS1
				, TRIM(CL.ADDRESS2) AS CLIENT_ADDRESS2
				, COALESCE(UPPER(TRIM(CL.CITY)), GEO.CITY_PRIMARY_NAME) AS CLIENT_CITY
				, COALESCE(GEO.STATE_ISO_CODE, UPPER(NULLIF(TRIM(CL.STATE),''''))) AS CLIENT_STATE_CODE
				, IFF(LENGTH(UPPER(TRIM(CL.ZIP))) = 9, LEFT(UPPER(TRIM(CL.ZIP)),5) || ''-'' || SUBSTR(UPPER(TRIM(CL.ZIP)),6,4), UPPER(TRIM(CL.ZIP))) AS CLIENT_ZIP
				, NULL AS CLIENT_CLN_ADDRESS1
				, NULL AS CLIENT_CLN_ADDRESS2
				, NULL AS CLIENT_CLN_CITY
				, NULL AS CLIENT_CLN_STATE_CODE
				, NULL AS CLIENT_CLN_ZIP
				, NULL AS CLIENT_STD_ADDRESS1
				, NULL AS CLIENT_STD_ADDRESS2
				, NULL AS CLIENT_STD_CITY
				, NULL AS CLIENT_STD_STATE_CODE
				, NULL AS CLIENT_STD_ZIP
				--	NULLIF(LEFT(REGEXP_REPLACE(CL.PHONE,''[^[:digit:]]'', ''''),10),'''') AS CLIENT_HOME_PHONE,
				, CC.REAL_CONTACTS AS CLIENT_HOME_PHONE -- USE CONTACTS
				, NULL AS CLIENT_CELL_PHONE -- USE CONTACTS IF required
				, NULL AS CLIENT_WORK_PHONE -- USE CONTACTS IF required
				, NULL AS CLIENT_FAX_NUMBER -- USE CONTACTS
				, TRIM(CL.EMAIL) AS CLIENT_PERSONAL_EMAIL -- USE CONTACTS IF required
				, TRY_TO_DATE(TRIM(CL.CREATED)) AS REFERRAL_DATE
				, CASE WHEN DATEDIFF(DAY,SD.FIRST_SERVICE_DATE,SD.LAST_SERVICE_DATE) < 0 THEN 0
					   ELSE DATEDIFF(DAY,SD.FIRST_SERVICE_DATE,SD.LAST_SERVICE_DATE) 
				  END AS DAYS_TO_SERVICE
				, NULL AS CONTRACT_BEGIN_DATE
				, NULL AS CONTRACT_END_DATE
				, SD.FIRST_SERVICE_DATE AS FIRST_SERVICE_DATE
				, SD.LAST_SERVICE_DATE AS LAST_SERVICE_DATE
				, NULL AS BEGIN_DATE
				, NULL AS END_DATE
				, IFF(CL.STATUS IN(''A'',''P''), TRUE, FALSE) AS ACTIVE_CLIENT_FLAG
				, trim(UPPER(SD.CLIENT_STATUS)) AS CLIENT_STATUS								   
				,trim(SD.DISCHARGE_REASON) AS DISCHARGE_REASON								  
				, CASE WHEN CURRENT_DATE() BETWEEN HD.START_DATE AND HD.END_DATE THEN ''1''
					   ELSE ''0'' 
				  END AS ON_HOLD_FLAG  --SERVICE INTERRUPTIONS
				, TRY_TO_DATE(TRIM(HD.START_DATE)) AS ON_HOLD_START_DATE
				, TRY_TO_DATE(TRIM(HD.END_DATE))  AS ON_HOLD_END_DATE
				, NULL AS LINKED_ID
				, NULL AS ACQUIRED_FROM_COMPANY_KEY
				, NULL AS ACQUIRED_FROM_COMPANY_ID
				, NULL AS ACQUIRED_FROM_COMPANY_FULL_NAME
				, NULL AS ACQUISITION_DATE
				, NULL AS ACQUISITION_FLAG
				, NULL AS ADMISSION_DATE
				, NULL AS ADMISSION_FLAG
				, NULL AS CLIENT_CONVERTED_FLAG
				, MD5(''ALLIANCE'' || ''-'' || TRIM(NVL(CM.MASTER_ID, ''-1'')) || ''-'' || ''GENERATIONS'') AS PRIMARY_SUPERVISOR_KEY
				, TRIM(NVL(CM.MASTER_ID, ''-1'')) AS PRIMARY_SUPERVISOR_CODE
				, NVL(CONCAT(CMM.FIRSTNAME ,'' '', CMM.LASTNAME), ''UNKNOWN'') AS PRIMARY_SUPERVISOR_NAME
				, NULL AS SECONDARY_SUPERVISOR_KEY
				, NULL AS SECONDARY_SUPERVISOR_CODE
				, NULL AS SECONDARY_SUPERVISOR_NAME
				, MD5(''ALLIANCE'' || ''-'' || TRIM(BM.LOCATION_ID) || ''-'' || ''GENERATIONS'') AS PRIMARY_BRANCH_KEY
				, BM.STATE_CODE || '' - '' ||  UPPER(TRIM(BM.NAME)) || '' ('' || TRIM(BM.LOCATION_ID) || '')'' AS PRIMARY_BRANCH_NAME
				, BM.STATE_CODE AS PRIMARY_BRANCH_STATE
				, NULL AS GUARANTOR_NAME
				, NOTES AS NOTES
			    , NULL AS AGENCY
				, TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
				, TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
				:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
				:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY        
				, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
				, CURRENT_USER AS ETL_INSERTED_BY
				, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_UPDATED_DATE
				, CURRENT_USER AS ETL_LAST_UPDATED_BY
				, 0 AS ETL_DELETED_FLAG
				, 0 AS ETL_INFERRED_MEMBER_FLAG
FROM CLIENT CL
JOIN TOTAL_CONTACT CC 
	ON CC.CLIENTID=CL.CLIENTID 
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CLIENTCMS1500 CMS 
	ON CMS.CLIENTID = CL.CLIENTID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.CASEMANAGER CMM
	ON CMM.CASEMANAGERID = CL.CASEMANAGERID
LEFT JOIN SUPERVISORS CM 
	ON CM.CASEMANAGERID = CMM.CASEMANAGERID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.VW_BRANCH_MAPPING BM 
	ON BM.LOCATION_ID = CL.LOCATIONID
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_GEOGRAPHY GEO 
	ON GEO.ZIP_CODE = LEFT(CL.ZIP,5)
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.GENERATIONSALLIANCE.SERVICEINTERRUPTIONS SI 
	ON CL.CLIENTID =SI.CLIENTID 
LEFT JOIN SERVICE_DATE SD 
	ON SD.CLIENT_ID=CL.CLIENTID
LEFT JOIN HOLD_DATE HD 
	ON HD.CLIENT_ID= CL.CLIENTID 
WHERE CLIENT_NUMBER NOT IN (SELECT CLIENT_NUMBER FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_CLIENT_NUMBER WHERE SOURCE_SYSTEM_ID = 19 AND SYSTEM_CODE = ''GENERATIONS'')
ORDER BY CLIENT_NUMBER::NUMBER;
RETURN ''SUCCESS'';
END;

 EOT
}

