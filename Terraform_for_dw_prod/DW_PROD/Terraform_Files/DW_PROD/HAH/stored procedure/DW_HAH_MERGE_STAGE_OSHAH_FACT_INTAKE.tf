resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_OSHAH_FACT_INTAKE" {
	name ="MERGE_STAGE_OSHAH_FACT_INTAKE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;	
BEGIN

MERGE INTO DW_${var.SF_ENVIRONMENT}.HAH.FACT_INTAKE AS tgt
USING DW_${var.SF_ENVIRONMENT}.STAGE.OSHAH_FACT_INTAKE AS src
ON (tgt.INTAKE_KEY=src.INTAKE_KEY)
WHEN MATCHED THEN UPDATE SET
	 tgt.REPORT_DATE=src.REPORT_DATE, 
	 tgt.BRANCH_KEY=src.BRANCH_KEY, 
	 tgt.CLIENT_KEY=src.CLIENT_KEY, 
	 tgt.CONTRACT_KEY=src.CONTRACT_KEY, 
	 tgt.SOURCE_SYSTEM_ID=src.SOURCE_SYSTEM_ID, 
	 tgt.REAUTHORIZED_DATE=src.REAUTHORIZED_DATE, 
	 tgt.PRE_AUTH_NUMBER=src.PRE_AUTH_NUMBER, 
	 tgt.BEGIN_SERVICE_DATE=src.BEGIN_SERVICE_DATE, 
	 tgt.END_SERVICE_DATE=src.END_SERVICE_DATE, 
	 tgt.LATEST_AUTH_BEGIN_DATE=src.LATEST_AUTH_BEGIN_DATE, 
	 tgt.LATEST_AUTH_END_DATE=src.LATEST_AUTH_END_DATE, 
	 tgt.BRANCH_NAME=src.BRANCH_NAME, 
	 tgt.CLIENT_NUMBER=src.CLIENT_NUMBER, 
	 tgt.CONTRACT_CODE=src.CONTRACT_CODE, 
	 tgt.BILL_RATE=src.BILL_RATE, 
	 tgt.SYSTEM_CODE=src.SYSTEM_CODE, 
	 tgt.CASE_MANAGER=src.CASE_MANAGER, 
	 tgt.HOURS_AUTHORIZED=src.HOURS_AUTHORIZED, 
	 tgt.HOURS_AUTHORIZED_NON_ADJUSTED=src.HOURS_AUTHORIZED_NON_ADJUSTED, 
	 tgt.ETL_TASK_KEY=src.ETL_TASK_KEY, 
	 tgt.ETL_INSERTED_TASK_KEY=src.ETL_INSERTED_TASK_KEY, 
	 tgt.ETL_INSERTED_DATE=src.ETL_INSERTED_DATE, 
	 tgt.ETL_INSERTED_BY=src.ETL_INSERTED_BY, 
	 tgt.ETL_LAST_UPDATED_DATE=src.ETL_LAST_UPDATED_DATE, 
	 tgt.ETL_LAST_UPDATED_BY=src.ETL_LAST_UPDATED_BY, 
	 tgt.ETL_DELETED_FLAG=src.ETL_DELETED_FLAG
WHEN NOT MATCHED THEN INSERT (
	INTAKE_KEY, 
	REPORT_DATE, 
	BRANCH_KEY, 
	CLIENT_KEY, 
	CONTRACT_KEY, 
	SOURCE_SYSTEM_ID, 
	REAUTHORIZED_DATE, 
	PRE_AUTH_NUMBER, 
	BEGIN_SERVICE_DATE, 
	END_SERVICE_DATE, 
	LATEST_AUTH_BEGIN_DATE, 
	LATEST_AUTH_END_DATE, 
	BRANCH_NAME, 
	CLIENT_NUMBER, 
	CONTRACT_CODE, 
	BILL_RATE, 
	SYSTEM_CODE, 
	CASE_MANAGER, 
	HOURS_AUTHORIZED, 
	HOURS_AUTHORIZED_NON_ADJUSTED, 
	ETL_TASK_KEY, 
	ETL_INSERTED_TASK_KEY, 
	ETL_INSERTED_DATE, 
	ETL_INSERTED_BY, 
	ETL_LAST_UPDATED_DATE, 
	ETL_LAST_UPDATED_BY, 
	ETL_DELETED_FLAG)
VALUES (
	src.INTAKE_KEY, 
	src.REPORT_DATE, 
	src.BRANCH_KEY, 
	src.CLIENT_KEY, 
	src.CONTRACT_KEY, 
	src.SOURCE_SYSTEM_ID, 	
	src.REAUTHORIZED_DATE, 
	src.PRE_AUTH_NUMBER, 
	src.BEGIN_SERVICE_DATE, 
	src.END_SERVICE_DATE, 
	src.LATEST_AUTH_BEGIN_DATE, 
	src.LATEST_AUTH_END_DATE, 
	src.BRANCH_NAME, 
	src.CLIENT_NUMBER, 
	src.CONTRACT_CODE, 
	src.BILL_RATE, 
	src.SYSTEM_CODE, 
	src.CASE_MANAGER, 
	src.HOURS_AUTHORIZED, 
	src.HOURS_AUTHORIZED_NON_ADJUSTED, 
	src.ETL_TASK_KEY, 
	src.ETL_INSERTED_TASK_KEY, 
	src.ETL_INSERTED_DATE,
	src.ETL_INSERTED_BY, 
	src.ETL_LAST_UPDATED_DATE, 
	src.ETL_LAST_UPDATED_BY, 
	src.ETL_DELETED_FLAG);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;

 EOT
}

