resource "snowflake_procedure" "DW_HAH_GET_STAGE_PAYOR_CONTRACT_UI_DIM_PARTNER" {
	name ="GET_STAGE_PAYOR_CONTRACT_UI_DIM_PARTNER"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
RETURN_RESULT VARCHAR;
BEGIN
INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}."STAGE".PAYOR_CONTRACT_UI_DIM_PARTNER
SELECT DISTINCT
MD5(PCM.SYSTEM_CODE||''-''||PCM.PAYOR_ID||''-''||PCM.SOURCE_SYSTEM_ID) AS PARTNER_KEY
,MD5(PCM.SYSTEM_CODE||''-''||DPP.PARENT_PAYOR_ID||''-''||PCM.SOURCE_SYSTEM_ID) AS PARENT_PARTNER_KEY
,DPP.PARENT_PAYOR_NAME AS PARENT_PARTNER_NAME
,PCM.SOURCE_SYSTEM_ID
,PCM.SYSTEM_CODE
,DPP.PAYOR_ID AS PARTNER_CODE
,DPP.PAYOR_NAME AS PARTNER_NAME
,PT.PAYOR_TYPE_CODE AS PARTNER_TYPE_CODE
,PT.PAYOR_TYPE_NAME AS PARTNER_TYPE_NAME
,TRUE AS ACTIVE_FLAG
, ''1990-01-01'' AS START_DATE
,''9999-12-31'' AS END_DATE
,:STR_ETL_TASK_KEY AS ETL_TASK_KEY
,:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
,Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
,CURRENT_USER AS ETL_INSERTED_BY
,Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
,CURRENT_USER AS ETL_LAST_UPDATED_BY
,0 AS ETL_DELETED_FLAG
,0 AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.PAYOR_CONTRACT_UI.PAYOR_CONTRACT_MAPPING PCM
JOIN DISC_${var.SF_ENVIRONMENT}.PAYOR_CONTRACT_UI.PAYOR DPP
ON PCM.PAYOR_ID = DPP.PAYOR_ID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.PAYOR_CONTRACT_UI.PAYOR_TYPE PT 
ON PT.PAYOR_TYPE_CODE = DPP.PAYOR_TYPE_CODE ;
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Inserted '') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;

 EOT
}

