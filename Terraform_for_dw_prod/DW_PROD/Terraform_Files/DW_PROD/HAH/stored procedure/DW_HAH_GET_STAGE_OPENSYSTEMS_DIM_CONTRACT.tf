resource "snowflake_procedure" "DW_HAH_GET_STAGE_OPENSYSTEMS_DIM_CONTRACT" {
	name ="GET_STAGE_OPENSYSTEMS_DIM_CONTRACT"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  OPENSYSTEMS_DIM_CONTRACT
--
-- PURPOSE: Creates one row per CONTRACT according to OPENSYSTEMS
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 18/11/2022  Sanket Jain           Initial Development
--***************************************************************************************************************************
INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}.STAGE.OPENSYSTEMS_DIM_CONTRACT
SELECT DISTINCT MD5(''OPENSYSTEMS''|| ''-'' || SC.CONTRACTID || ''-'' || NVL(CR.CONTRACTRATEID,-1) || ''-'' || NVL(SC.SERVICECODEID,-1)|| ''-'' || ''HHAEXCHANGE'') AS CONTRACT_KEY
   	 , SC.CONTRACTID AS CONTRACT_CODE
   	 , CONCAT(''OPENSYSTEMS - '',CASE WHEN SC.CONTRACTNAME ILIKE ANY (''%DC Medicaid%'',''%Highmark Health Options%'',''%AmeriHealth Caritas DE%'') THEN ''DE''  ELSE ''PA'' END) AS SYSTEM_CODE
   	 , 17 AS SOURCE_SYSTEM_ID
   	 , SC.CONTRACTNAME AS CONTRACT_NAME
   	 , SC.SERVICECODEID::STRING AS SERVICE_CODE_ID
   	 , MD5(CONCAT(''OPENSYSTEMS''|| ''-'' || SC.SERVICECODEID || ''-'' || ''HHAEXCHANGE'')) AS SERVICE_KEY
   	 , NULL AS DEFAULT_BILL_CODE
   	 , NULL AS PAYROLL_CODE
   	 , VOR.REVENUE_CATEGORY  AS REVENUE_CATEGORY
   	 , VOR.REVENUE_SUBCATEGORY_CODE  AS REVENUE_SUBCATEGORY_CODE
   	 , VOR.REVENUE_SUBCATEGORY_NAME  AS  REVENUE_SUBCATEGORY_NAME
   	 , PR.PAYERID AS PAYOR_CODE
   	 , PR.PAYERNAME  AS PAYOR_DESCRIPTION
   	 , REVENUE_CATEGORY AS SERVICE_LINE_CODE
   	 , UPPER(CONCAT(REVENUE_CATEGORY,'' - '' ,SC.SERVICECODE)) AS SERVICE_LINE_DESCRIPTION
   	 , CASE WHEN SC.CONTRACTNAME ILIKE ANY (''%DC Medicaid%'',''%Highmark Health Options%'',''%AmeriHealth Caritas DE%'') THEN ''DE'' ELSE ''PA''END AS CONTRACT_STATE_CODE
    	, CASE
        	WHEN CR.UNITS = 1 THEN ''1HR''
        	WHEN CR.UNITS = 2 THEN ''.5HR''
        	WHEN CR.UNITS = 4 THEN ''.25HR''
        	ELSE NULL
     	END AS TIME_TRANSLATION_CODE
   	 , CR.UNITS::NUMERIC AS TIME_TRANSLATION_DIVIDER
   	 , NULL AS PAY_TRAVELS_CODE
   	 , IFF(UPPER(VI.INCLUDEMILEAGEEXPENSE :: BOOLEAN) IS NULL,
   	   	UPPER(FALSE :: BOOLEAN),
   	    	UPPER(VI.INCLUDEMILEAGEEXPENSE :: BOOLEAN)
   	  	) AS MILEAGE_FLAG
   	 , NULL AS PAYABLE_FLAG
   	 , CASE WHEN UPPER(SC.SERVICECODE) LIKE ''%BILLABLE%'' THEN ''FALSE''
   	    	WHEN UPPER(VI.NONBILLABLE) = ''FALSE'' THEN ''TRUE''
   	    	WHEN UPPER(VI.NONBILLABLE) = ''TRUE'' THEN ''FALSE''
   	    	ELSE NULL
   	   END AS BILLABLE_FLAG
   	 , IFF(TIME_TRANSLATION_CODE = ''.25HR'', 1, 0) AS BILLED_BY_QUARTER_HOURS
   	 , IFF(TIME_TRANSLATION_CODE = ''.5HR'', 1, 0) AS BILLED_BY_HALF_HOURS
   	 , SC.RATETYPETEXT AS BILL_UNIT_TYPE
   	 , TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
   	 , TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE
     , :STR_ETL_TASK_KEY AS ETL_TASK_KEY
   	 , :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
   	 , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP) :: TIMESTAMP_NTZ as ETL_INSERTED_DATE
   	 , CURRENT_USER as ETL_INSERTED_BY
   	 , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP) :: TIMESTAMP_NTZ as ETL_UPDATED_DATE
   	 , CURRENT_USER as ETL_LAST_UPDATED_BY
   	 , 0 AS ETL_DELETED_FLAG
   	 , 0 AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.SERVICECODES SC
    LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.PAYER_REPL PR
   	 ON IFNULL(PR.CONTRACTID,PR.PAYERID) = sc.CONTRACTID
    LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.CONTRACTS C  
		 ON SC.CONTRACTID = C.CONTRACTID
	 LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.VisitInfo_REPL VI
		 ON SC.SERVICECODEID = VI.PRIMARYSERVICECODEID
    LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.CONTRACTRATES CR ON SC.SERVICECODEID  = CR.SERVICECODEID
   	 AND CR.AGENCYID = SC.AGENCYID
   	 AND CR.SERVICECODEID = SC.SERVICECODEID
   	 AND CR.TODATE :: DATE > GETDATE()
   	 AND CR.FROMDATE :: DATE <= GETDATE()
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.VW_OPENSYSTEMS_REVENUE vor
    	ON vor.SERVICECODEID = sc.SERVICECODEID;
RETURN ''SUCCESS'';
end;

 EOT
}

