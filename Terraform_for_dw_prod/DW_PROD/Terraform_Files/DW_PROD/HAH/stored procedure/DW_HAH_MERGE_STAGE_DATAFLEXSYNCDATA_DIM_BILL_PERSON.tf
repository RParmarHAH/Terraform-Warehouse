resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_DATAFLEXSYNCDATA_DIM_BILL_PERSON" {
	name ="MERGE_STAGE_DATAFLEXSYNCDATA_DIM_BILL_PERSON"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN


					
    MERGE INTO HAH.DIM_BILL_PERSON TGT 
USING STAGE.DATAFLEXSYNCDATA_DIM_BILL_PERSON STAGE 
ON TGT.BILL_PERSON_KEY = STAGE.BILL_PERSON_KEY
WHEN MATCHED THEN 
UPDATE SET 
    TGT.DATAFLEX_SOURCE_SYSTEM_ID= STAGE.DATAFLEX_SOURCE_SYSTEM_ID
   ,TGT.DATAFLEX_SYSTEM_CODE= STAGE.DATAFLEX_SYSTEM_CODE
   ,TGT.GP_SYSTEM_CODE= STAGE.GP_SYSTEM_CODE
   ,TGT.GP_EMPLOYEE_KEY= STAGE.GP_EMPLOYEE_KEY
   ,TGT.GP_EMPLOYEE_ID= STAGE.GP_EMPLOYEE_ID
   ,TGT.GP_ACTIVE_EMPLOYEE_FLAG= STAGE.GP_ACTIVE_EMPLOYEE_FLAG
   ,TGT.BILL_PERSON_CODE= STAGE.BILL_PERSON_CODE
   ,TGT.PERSON_NAME= STAGE.PERSON_NAME
   ,TGT.FIRST_NAME= STAGE.FIRST_NAME
   ,TGT.LAST_NAME= STAGE.LAST_NAME
   ,TGT.ETL_TASK_KEY= STAGE.ETL_TASK_KEY
   ,TGT.ETL_LAST_UPDATED_DATE= STAGE.ETL_LAST_UPDATED_DATE
   ,TGT.ETL_LAST_UPDATED_BY= STAGE.ETL_LAST_UPDATED_BY
   ,TGT.ETL_DELETED_FLAG= STAGE.ETL_DELETED_FLAG
   ,TGT.ETL_INFERRED_MEMBER_FLAG= STAGE.ETL_INFERRED_MEMBER_FLAG
WHEN NOT MATCHED THEN 
INSERT ( 
    BILL_PERSON_KEY
   ,DATAFLEX_SOURCE_SYSTEM_ID
   ,DATAFLEX_SYSTEM_CODE
   ,GP_SYSTEM_CODE
   ,GP_EMPLOYEE_KEY
   ,GP_EMPLOYEE_ID
   ,GP_ACTIVE_EMPLOYEE_FLAG
   ,BILL_PERSON_CODE
   ,PERSON_NAME
   ,FIRST_NAME
   ,LAST_NAME
   ,ETL_TASK_KEY
   ,ETL_INSERTED_TASK_KEY
   ,ETL_INSERTED_DATE
   ,ETL_INSERTED_BY
   ,ETL_LAST_UPDATED_DATE
   ,ETL_LAST_UPDATED_BY
   ,ETL_DELETED_FLAG
   ,ETL_INFERRED_MEMBER_FLAG
) 
VALUES (
    STAGE.BILL_PERSON_KEY
   ,STAGE.DATAFLEX_SOURCE_SYSTEM_ID
   ,STAGE.DATAFLEX_SYSTEM_CODE
   ,STAGE.GP_SYSTEM_CODE
   ,STAGE.GP_EMPLOYEE_KEY
   ,STAGE.GP_EMPLOYEE_ID
   ,STAGE.GP_ACTIVE_EMPLOYEE_FLAG
   ,STAGE.BILL_PERSON_CODE
   ,STAGE.PERSON_NAME
   ,STAGE.FIRST_NAME
   ,STAGE.LAST_NAME
   ,STAGE.ETL_TASK_KEY
   ,STAGE.ETL_INSERTED_TASK_KEY
   ,STAGE.ETL_INSERTED_DATE
   ,STAGE.ETL_INSERTED_BY
   ,STAGE.ETL_LAST_UPDATED_DATE
   ,STAGE.ETL_LAST_UPDATED_BY
   ,STAGE.ETL_DELETED_FLAG
   ,STAGE.ETL_INFERRED_MEMBER_FLAG
);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
	  
															   
							 
			   
																	   
														
															   
							 
					
																																															   

return return_result;
END;
    
 EOT
}

