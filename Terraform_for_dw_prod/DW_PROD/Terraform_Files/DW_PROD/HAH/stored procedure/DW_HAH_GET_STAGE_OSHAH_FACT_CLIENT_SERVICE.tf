resource "snowflake_procedure" "DW_HAH_GET_STAGE_OSHAH_FACT_CLIENT_SERVICE" {
	name ="GET_STAGE_OSHAH_FACT_CLIENT_SERVICE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  OSHAH FACT CLIENT SERVICE
--
-- PURPOSE: Populates Stage OSHAH FACT CLIENT SERVICE
--
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 2/28/23     SANKET JAIN           Initial version
-- 7/04/23     Sandesh Gosavi        update code to use config flag	 
-- 10/26/23	   RAJAT SAPKAL			 Modified authorization max units logic
--*****************************************************************************************************************************

INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}."STAGE".OSHAH_FACT_CLIENT_SERVICE

WITH CLIENT AS
(SELECT * FROM
	(SELECT PATIENTID, MASTER_ID, AGENCYID, LASTNAME, FIRSTNAME, OFFICEID 
	 FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST)
UNION
SELECT * FROM
    (SELECT DISTINCT CML.PATIENTID, MASTER_ID, CML.AGENCYID, CML.LASTNAME, CML.FIRSTNAME, CML.OFFICEID
	 FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CLIENT_MATCH_LIST CML
	 WHERE CML.PATIENTID NOT IN (SELECT PATIENTID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST))
),
Capping_Hours_at24_Per_Day AS (
SELECT AUTHORIZATIONID
   	 , PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , DD.CALENDAR_DATE
   	 , DECODE(DAYNAME(DD.CALENDAR_DATE)
   				 , ''Sat'', PA.SATHOURS
   		   		 , ''Sun'', PA.SUNHOURS
   		   		 , ''Mon'', PA.MONHOURS
   		   		 , ''Tue'', PA.TUEHOURS
   		   		 , ''Wed'', PA.WEDHOURS
   		   		 , ''Thu'', PA.THUHOURS
   		   		 , ''Fri'', PA.FRIHOURS
   		   	 , 0) AS AUTH_HOURS_PER_DAY
     , DECODE(DAYNAME(DD.CALENDAR_DATE)
   				 , ''Sat'', IFF(PA.SATHOURS>0,1,0)
   		   		 , ''Sun'', IFF(PA.SUNHOURS>0,1,0)
   		   		 , ''Mon'', IFF(PA.MONHOURS>0,1,0)
   		   		 , ''Tue'', IFF(PA.TUEHOURS>0,1,0)
   		   		 , ''Wed'', IFF(PA.WEDHOURS>0,1,0)
   		   		 , ''Thu'', IFF(PA.THUHOURS>0,1,0)
   		   		 , ''Fri'', IFF(PA.FRIHOURS>0,1,0)
   		   	 , 0) AS DAYS
--	 , IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED 
     , AUTH_HOURS_PER_DAY as HOURS_AUTHORIZED
	 , AUTH_HOURS_PER_DAY AS HOURS_AUTHORIZED_NON_ADJUSTED
	 , IFF(AUTH_HOURS_PER_DAY >24,TRUE,FALSE) AS FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION  PA
INNER JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_DATE DD
    ON DD.CALENDAR_DATE BETWEEN PA.FROMDATE AND PA.TODATE
WHERE PERIOD = ''Day''
UNION ALL
SELECT PA.AUTHORIZATIONID
   	 , PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , DD.CALENDAR_DATE
   	 , PA.MAXUNITSFORPERIOD/7.00 AS AUTH_HOURS_PER_DAY
   	 , 1 AS DAYS
--   	 , IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED
     , AUTH_HOURS_PER_DAY as HOURS_AUTHORIZED
   	 , AUTH_HOURS_PER_DAY AS HOURS_AUTHORIZED_NON_ADJUSTED
   	 , IFF(AUTH_HOURS_PER_DAY >24,TRUE,FALSE) AS FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
INNER JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_DATE DD
    ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE
WHERE PA.PERIOD = ''Week''
UNION ALL
SELECT PA.AUTHORIZATIONID
   	 , PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , DD.CALENDAR_DATE
   	 , PA.MAXUNITSFORPERIOD/(DAY(LAST_DAY(DD.CALENDAR_DATE))*1.00) AS AUTH_HOURS_PER_DAY
   	 , 1 AS DAYS
--   	 , IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED
     , AUTH_HOURS_PER_DAY as HOURS_AUTHORIZED
   	 , NULL AS HOURS_AUTHORIZED_NON_ADJUSTED
   	 , IFF(AUTH_HOURS_PER_DAY >24,TRUE,FALSE) AS FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
INNER JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_DATE DD
    ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE
WHERE PA.PERIOD = ''Monthly''
UNION ALL
SELECT PA.AUTHORIZATIONID
   	 , PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , DD.CALENDAR_DATE
  	 , CASE WHEN FROMDATE = TODATE 
   	   			 THEN PA.MAXUNITSFORPERIOD
   	   		ELSE PA.MAXUNITSFORPERIOD/IFF(FROMDATE != TODATE, DATEDIFF(DAY, FROMDATE, TODATE)+1, 1) * 1.00
   	   END AUTH_HOURS_PER_DAY
   	 , 1 AS DAYS
--   	 , IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED
     , AUTH_HOURS_PER_DAY as HOURS_AUTHORIZED
   	 , AUTH_HOURS_PER_DAY AS HOURS_AUTHORIZED_NON_ADJUSTED
   	 , IFF(AUTH_HOURS_PER_DAY >24,TRUE,FALSE) AS FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
INNER JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_DATE DD
    ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE
WHERE PERIOD = ''Entire Period'')
,Cleaned_Auth AS
(
    SELECT AO.PATIENTID
   		 , AO.SERVICECODEID
   		 , AO.AUTHORIZATIONID
   		 --, AO.FLAG
   		 , SUM(DAYS) AS DAYS
   		 , SUM(HOURS_AUTHORIZED) AS HOURS_AUTHORIZED
   		 , SUM(HOURS_AUTHORIZED_NON_ADJUSTED) AS HOURS_AUTHORIZED_NON_ADJUSTED
    FROM Capping_Hours_at24_Per_Day AO
    INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
   	 ON PA.AUTHORIZATIONID = AO.AUTHORIZATIONID
    GROUP BY AO.PATIENTID, AO.SERVICECODEID,AO.AUTHORIZATIONID--,AO.FLAG
)
SELECT 
	DISTINCT MD5(CONCAT(''OSHAH'') 
			 || ''-'' || PA.AUTHORIZATIONID 
			 || ''-'' || ''HHAEXCHANGE'') AS CLIENT_SERVICE_KEY
	,17 AS SOURCE_SYSTEM_ID
	,CONCAT(''OSHAH - '',O.STATE) AS SYSTEM_CODE
	,MD5(''OSHAH''
	 || ''-'' || IFNULL(SC.AGENCYID, -1) 
     || ''-'' || IFNULL(PR.PAYERID, -1) 
     || ''-'' || IFNULL(SC.CONTRACTID, -1) 
     || ''-'' || IFNULL(SC.SERVICECODEID, -1) 
     || ''-'' || IFNULL(SC.VISITTYPE, ''-1'') 
     || ''-'' || IFNULL(SC.RATETYPETEXT, ''-1'')
	 || ''-'' || ''HHAEXCHANGE'') AS PARTNER_CONTRACT_SERVICE_KEY
	,MD5(''OSHAH''
	 || ''-'' || CLIENT.PATIENTID
     || ''-'' || P.ADMISSIONID 
     || ''-'' || IFNULL(SC.SERVICECODEID, -1)  
     || ''-'' || ''HHAEXCHANGE'') AS CLIENT_ADMISSION_KEY
	,MD5(''OSHAH''
	 || ''-'' || CLIENT.MASTER_ID
	 || ''-'' || ''HHAEXCHANGE'') AS CLIENT_KEY
	,MD5(''OSHAH''
	 || ''-'' || IFNULL(SC.SERVICECODEID, -1)  
	 || ''-'' || ''HHAEXCHANGE'') AS SERVICE_KEY
	,SC.SERVICECODE AS BILL_CODE 
	,SC.RATETYPETEXT AS BILL_TYPE
    ,CASE WHEN CR.UNITS = 1 THEN ''Hourly''
          WHEN CR.UNITS = 2 THEN ''Half Hours''
          WHEN CR.UNITS = 4 THEN ''Quarter Hours''
     ELSE NULL END AS  BILL_UOM
    ,SC.RATETYPETEXT AS SCHEDULE_TYPE
    ,SC.RATETYPETEXT AS SCHEDULE_UOM
    ,PA.DISCIPLINE AS AUTHORIZAITON_DISCIPLINE
    ,PA.FROMDATE AS AUTHORIZATION_DATE
    ,PA.FROMDATE AS AUTHORIZATION_PERIOD_START_DATE
    ,IFF(PA.TODATE > (SELECT MAX(CALENDAR_DATE) FROM DW_${var.SF_ENVIRONMENT}.HAH.DIM_DATE ),(SELECT MAX(CALENDAR_DATE) FROM DW_${var.SF_ENVIRONMENT}.HAH.DIM_DATE),PA.TODATE)AS AUTHORIZATION_PERIOD_END_DATE
    ,CA.DAYS AS EFFECTIVE_DAYS
	,CONCAT(TRIM(PA.TYPE),'' '',''Authorization'') AS AUTHORIZATION_TYPE
   -- ,PA.PERIOD AS AUTHORIZATION_UOM 
     ,CASE 
     WHEN PA.PERIOD=''Monthly'' THEN ''Monthly''
     WHEN PA.PERIOD=''Week'' THEN ''Weekly''
      ELSE PA.PERIOD
     END AS  authorization_uom
    --,CASE WHEN PA.PERIOD !=''Day'' AND MAXUNITSFORPERIOD  IN (0) OR MAXUNITSFORAUTH=''0'' THEN TRUE 
    --	  WHEN PA.PERIOD =''Day'' AND  PA.MONHOURS+PA.TUEHOURS+PA.WEDHOURS+PA.THUHOURS+PA.FRIHOURS+PA.SATHOURS+PA.SUNHOURS=0 THEN TRUE 
    -- ELSE FALSE END AS UNLIMITED_UNITS_FLAG  
    ,CASE 
        WHEN PA.PERIOD = ''Day'' 
        THEN TO_VARIANT(
            OBJECT_CONSTRUCT(
                ''Sat'', PA.SATHOURS,
                ''Sun'', PA.SUNHOURS,
                ''Mon'', PA.MONHOURS,
                ''Tue'', PA.TUEHOURS,
                ''Wed'', PA.WEDHOURS,
                ''Thu'', PA.THUHOURS,
                ''Fri'', PA.FRIHOURS
            )
        )
        ELSE NULL 
    END AS AUTH_INFO
    ,CASE WHEN PA.PERIOD =''Day'' THEN COALESCE (PA.MONHOURS,PA.TUEHOURS,PA.WEDHOURS,PA.THUHOURS,PA.FRIHOURS,PA.SATHOURS,PA.SUNHOURS)
     ELSE PA.MAXUNITSFORPERIOD END AS AUTHORIZATION_MAX_UNITS_BY_UOM
,CASE 
    	 WHEN PA.PERIOD=''Monthly'' THEN (authorization_max_units_by_uom*(DATEDIFF(''MONTH'',authorization_period_start_date,AUTHORIZATION_PERIOD_END_DATE)+1))
    	 ELSE CA.HOURS_AUTHORIZED_NON_ADJUSTED
    END AS AUTHORIZATION_MAX_UNITS
    ,CASE WHEN PA.PERIOD =''Day'' THEN COALESCE(NULLIFZERO(PA.MONHOURS),NULLIFZERO(PA.TUEHOURS),NULLIFZERO(PA.WEDHOURS),NULLIFZERO(PA.THUHOURS),NULLIFZERO(PA.FRIHOURS),NULLIFZERO(PA.SATHOURS),NULLIFZERO(PA.SUNHOURS),0)
--    	  WHEN PA.PERIOD =''Entire Period'' AND CA.FLAG = 1 THEN CA.HOURS_AUTHORIZED
--    	  WHEN PA.PERIOD =''Monthly'' AND CA.FLAG = 1 THEN CA.HOURS_AUTHORIZED/(DATEDIFF(MONTH, PA.FROMDATE, PA.TODATE)+1)
--    	  WHEN PA.PERIOD =''Week'' AND CA.FLAG =1 THEN CA.HOURS_AUTHORIZED/(DATEDIFF(WEEK, PA.FROMDATE, PA.TODATE)+1)
     ELSE PA.MAXUNITSFORPERIOD END AS AUTHORIZATION_MAX_UNITS_ADJUSTED_BY_UOM  
    ,CA.HOURS_AUTHORIZED AS AUTHORIZATION_MAX_UNITS_ADJUSTED
   	,IFF(CURRENT_DATE() BETWEEN PA.FROMDATE AND PA.TODATE,TRUE,FALSE) AS ACTIVE_FLAG
	,CASE WHEN PA.ISDELETED =''Y'' THEN TRUE ELSE FALSE END AS CANCELLED_FLAG
   	,:STR_ETL_TASK_KEY AS ETL_TASK_KEY
   	,:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
   	,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
    ,CURRENT_USER as ETL_INSERTED_BY
    ,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
    ,CURRENT_USER as ETL_LAST_UPDATED_BY
    ,0 AS ETL_DELETED_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA 
JOIN CLIENT ON CLIENT.PATIENTID = PA.PATIENTID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PATIENTS P ON P.PATIENTID = CLIENT.PATIENTID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL O ON CLIENT.OFFICEID = O.OFFICEID
LEFT JOIN Cleaned_Auth CA ON  CA.AUTHORIZATIONID = PA.AUTHORIZATIONID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.SERVICECODES SC ON SC.CONTRACTID = PA.CONTRACTID
   	 	 AND SC.SERVICECODEID = PA.SERVICECODEID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CONTRACTS C ON SC.CONTRACTID = C.CONTRACTID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CONTRACTRATES CR 
	ON  SC.SERVICECODEID  = CR.SERVICECODEID 
	AND CR.TODATE :: DATE > GETDATE()
	AND CR.FROMDATE :: DATE <= GETDATE()
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.PAYER_REPL  PR
    ON IFNULL(PR.CONTRACTID,PR.PAYERID) = SC.CONTRACTID
WHERE O.STATE IN (SELECT STATE FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE)AND NOT (AUTHORIZATIONNUMBER ILIKE ''%TEMP%'' AND  MAXUNITSFORPERIOD <900 );
   
return ''SUCCESS'';
end;

 EOT
}

