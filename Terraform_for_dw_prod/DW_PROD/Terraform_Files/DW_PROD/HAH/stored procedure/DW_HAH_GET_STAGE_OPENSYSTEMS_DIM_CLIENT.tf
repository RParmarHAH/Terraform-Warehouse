resource "snowflake_procedure" "DW_HAH_GET_STAGE_OPENSYSTEMS_DIM_CLIENT" {
	name ="GET_STAGE_OPENSYSTEMS_DIM_CLIENT"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN

--*****************************************************************************************************************************
-- NAME:  OPENSYSTEMS_DIM_CLIENT
--
-- PURPOSE: Creates One Row Per Client According to OPENSYSTEM
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 07/11/2022  Jay Prajapati         Initial Development
-- 07/27/2023  DEEPEN GAJJAR         ADDED REFERRER_KEY FIELD
-- 11/08/2023  Shikhar Saxena		 Updated CLIENT_ETHNICITY logic and added HISPANIC_OR_LATINO column
-- 11/20/2023  Sandesh Gosavi        ADDED A COULUMN AND CTE FOR CLIENT STATUS
-- 11/21/2023  Sandesh Gosavi        ADDED A LOGIC AND COLUMN FOR DISCHARGE_REASON
--***************************************************************************************************************************

INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}.STAGE.OPENSYSTEMS_DIM_CLIENT
WITH CLIENT AS
(
	SELECT * FROM
	(
		SELECT PATIENTID, MASTER_ID, OFFICEID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.CLIENT_MASTER_LIST
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT PATIENTID, MASTER_ID, OFFICEID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.CLIENT_MATCH_LIST
		WHERE PATIENTID NOT IN (SELECT PATIENTID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.CLIENT_MASTER_LIST )
	)
)
, VISIT_DATES AS (
	SELECT
		  CLI.MASTER_ID
		, MIN(VIS.VISITDATE::DATE) AS FIRST_SERVICE_DATE
		, MAX(VIS.VISITDATE::DATE) AS LAST_SERVICE_DATE
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.TBLVISITS_REPL VIS
	LEFT JOIN CLIENT CLI ON VIS.PATIENTID = CLI.PATIENTID
	WHERE VIS.ISMISSEDVISIT = 0
	AND VIS.DELETED = 0
	GROUP BY CLI.MASTER_ID
)
, STATUS_NAME AS 
(
	SELECT DISTINCT  STATUSID, PATIENTSTATUSNAME AS CLIENT_STATUS
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.PATIENTSTATUSCHANGEACTIVITY 
	)				 
, CLIENT_STATUS AS (
	SELECT
		  ST.PATIENTID
		, MAX(ST.STATUSCHANGEDATE) AS STATUS_CHANGE_DATE
		, MIN(ST.PATIENTCREATEDDATE) AS BEGIN_DATE
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.PATIENTSTATUSCHANGEACTIVITY ST
	GROUP BY ST.PATIENTID
),
 DISCHARGE_REASON AS (SELECT 
                     DISTINCT PATIENTID,
FIRST_VALUE(TRIM(DISCHARGEREASONTEXT)) OVER (PARTITION BY PATIENTID ORDER BY STARTDATE DESC,DISCHARGEDATE desc) AS DISCHARGEREASONTEXT
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.PATIENTCONTRACTCHANGES) 
, SUPERVISOR AS (
	SELECT
		  P.PATIENTID
		, NVL(NULLIF(PC1.COORDINATORID::VARCHAR,''''), -1) AS COORDINATORID1
		, NVL(NULLIF(PC1.COORDINATORNAME, ''''), ''UNKNOWN'') AS CNAME1
		, NVL(NULLIF(PC2.COORDINATORID::VARCHAR,''''), -1) AS COORDINATORID2
		, NVL(NULLIF(PC2.COORDINATORNAME, ''''), ''UNKNOWN'') AS CNAME2
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.PATIENTS P
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.PROVIDERPATIENTCOORDINATORS PC1 ON PC1.PATIENTID = P.PATIENTID
	 AND PC1.COORDINATORSRNO = 1
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.TBLCOORDINATOR_REPL C1 ON C1.COORDINATORID = PC1.COORDINATORID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.PROVIDERPATIENTCOORDINATORS PC2 ON PC2.PATIENTID = P.PATIENTID
	 AND PC2.COORDINATORSRNO = 2
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.TBLCOORDINATOR_REPL C2 ON C2.COORDINATORID = PC2.COORDINATORID
)
, CONTRACT_DATES AS (
	SELECT
		 DISTINCT PC.PATIENTID
		, MIN(PC.STARTDATE) AS CONT_START_DATE
		, MAX(PC.DISCHARGEDATE) AS CONT_END_DATE
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.PATIENTCONTRACTCHANGES PC
	GROUP BY PC.PATIENTID
)
, ADMISSION_DATA AS (
	SELECT
		 A.PATIENTID
		, A.STARTDATE::DATE AS STARTDATE
		, A.DISCHARGEDATE::DATE AS DISCHARGEDATE
		, A.CONTRACTID
		, IFF(A.STARTDATE IS NOT NULL AND A.CONTRACTID IS NOT NULL AND A.DISCHARGEDATE IS NULL,TRUE,FALSE) AS IS_ADMITTED
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.ADMISSIONS A
	QUALIFY DENSE_RANK() OVER (PARTITION BY PATIENTID ORDER BY ADMISSIONID DESC) = 1
)
SELECT DISTINCT MD5(''OPENSYSTEMS'' || ''-'' || CLI.MASTER_ID || ''-'' || ''HHAEXCHANGE'') AS CLIENT_KEY
		, NVL(CLI.PATIENTID, CLI.MASTER_ID) AS CLIENT_NUMBER
		, CONCAT(''OPENSYSTEMS - '', TRIM(OFFICE.STATE)) AS SYSTEM_CODE
		, 17 AS SOURCE_SYSTEM_ID
		, CASE
		 	 WHEN REPLACE(TRIM(CLI.SSN), ''-'') NOT IN (SELECT SSN FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_SSN)
		 	 AND LENGTH(REPLACE(TRIM(CLI.SSN), ''-'')) = 9
		 	 THEN HEX_ENCODE(REPLACE(TRIM(CLI.SSN), ''-'')) ELSE NULL
		  END AS CLIENT_PID	  
        , NULLIF(TRIM(MEDICARENUMBER), '''') AS CLIENT_MEDICARE_ID
		, NULLIF(TRIM(CLI.MEDICAIDNUMBER), '''') AS MEDICAID_ID  
		, CLI.DATEOFBIRTH::DATE AS CLIENT_DOB
		, NULL AS CLIENT_DATE_OF_DEATH
		, UPPER(TRIM(CLI.GENDER)) AS CLIENT_GENDER
		,UPPER (CASE 
		WHEN CLI.RACE IS NOT NULL THEN COALESCE(NULLIF(TRIM(CLI.RACE),''''), NULLIF(TRIM(CLI.ETHNICITY),''''), ''UNKNOWN'' )
		WHEN CLI.RACE ILIKE ''%HISPANIC%'' OR  CLI.ETHNICITY ILIKE ''%HISPANIC%'' THEN NULL																	
			ELSE NULL  
			END)  AS Client_Ethnicity,
		CASE WHEN CLI.ETHNICITY ILIKE ANY  (''%not%HISPANIC%OR%LATINO%'')THEN FALSE 
		WHEN (UPPER(TRIM(CLI.RACE)) = ''HISPANIC OR LATINO'' OR CLI.RACE IS NULL) AND CLI.ETHNICITY ILIKE ANY  (''%HISPANIC%OR%LATINO%'') THEN TRUE 
		ELSE FALSE END AS HISPANIC_OR_LATINO
        , NULL AS CLIENT_GENDER_IDENTITY -- NA
		, NULL AS CLIENT_SEXUAL_ORIENTATION -- NA
		, NULL AS CLIENT_RACE -- NA  
		, NULL AS CLIENT_MARITAL_STATUS
		, CASE TRIM(CLI.GENDER)
			 WHEN ''Male'' THEN ''MR.''
			 WHEN ''Female'' THEN ''MS.''
		  ELSE NULL
		  END AS CLIENT_SALUTATION
		, UPPER(TRIM(CLI.FIRSTNAME)) AS CLIENT_FIRST_NAME
		, NULLIF(UPPER(TRIM(CLI.MIDDLENAME)),'''') AS CLIENT_MIDDLE_NAME
		, UPPER(TRIM(CLI.LASTNAME)) AS CLIENT_LAST_NAME
		, CONCAT(UPPER(TRIM(CLI.LASTNAME)), '', '' , UPPER(TRIM(CLI.FIRSTNAME)), NVL('' ''||NULLIF(UPPER(TRIM(CLI.MIDDLENAME)),''''),'''')) AS CLIENT_NAME
		, UPPER(TRIM(CLI.ADDRESS1)) AS CLIENT_ADDRESS1
		, NULLIF(UPPER(TRIM(CLI.ADDRESS2)), '''') AS CLIENT_ADDRESS2
		, UPPER(TRIM(CLI.CITY)) AS CLIENT_CITY
		, UPPER(TRIM(CLI.STATE)) AS CLIENT_STATE_CODE
		, TRIM(REPLACE(CLI.ZIP5, ''-'')) AS CLIENT_ZIP
		, NULL AS CLIENT_CLN_ADDRESS1
		, NULL AS CLIENT_CLN_ADDRESS2
		, NULL AS CLIENT_CLN_CITY
		, NULL AS CLIENT_CLN_STATE_CODE
		, NULL AS CLIENT_CLN_ZIP
		, NULL AS CLIENT_STD_ADDRESS1
		, NULL AS CLIENT_STD_ADDRESS2
		, NULL AS CLIENT_STD_CITY
		, NULL AS CLIENT_STD_STATE_CODE
		, NULL AS CLIENT_STD_ZIP
		, NULLIF(REGEXP_REPLACE(TRIM(CLI.HOMEPHONE), ''-''), '''') AS CLIENT_HOME_PHONE
		, NULLIF(REGEXP_REPLACE(TRIM(CLI.PHONE2), ''-''), '''') AS CLIENT_CELL_PHONE
		, NULLIF(REGEXP_REPLACE(TRIM(CLI.PHONE3), ''-''), '''') AS CLIENT_WORK_PHONE
		, NULL AS CLIENT_FAX_NUMBER
		, NULL AS CLIENT_PERSONAL_EMAIL
		, CLI.REFERRALRECEIVEDDATE::DATE AS REFERRAL_DATE
		, NVL(DATEDIFF(DAY, VD.FIRST_SERVICE_DATE, VD.LAST_SERVICE_DATE), 0) AS DAYS_TO_SERVICE 
		, CONT.CONT_START_DATE:: DATE AS CONTRACT_BEGIN_DATE
		, CONT.CONT_END_DATE:: DATE AS CONTRACT_END_DATE
		, VD.FIRST_SERVICE_DATE AS FIRST_SERVICE_DATE
		, VD.LAST_SERVICE_DATE AS LAST_SERVICE_DATE
		, ST.BEGIN_DATE::DATE AS BEGIN_DATE
		, IFF(CLI.STATUSID = 5, VD.LAST_SERVICE_DATE, NULL) AS END_DATES
	 	, IFF(CLI.STATUSID = 3, TRUE, FALSE) AS ACTIVE_CLIENT_FLAG
		, UPPER(SN.CLIENT_STATUS) AS CLIENT_STATUS								   
		,CASE  WHEN len(DR.DISCHARGEREASONTEXT) > 4995 
		       THEN LEFT(TRIM(DR.DISCHARGEREASONTEXT), 4995) 
		       ELSE TRIM(DR.DISCHARGEREASONTEXT) END AS DISCHARGE_REASON										 
		, IFF(CLI.STATUSID = 8, TRUE, FALSE) AS ON_HOLD_FLAG
		, IFF(CLI.STATUSID = 8, ST.STATUS_CHANGE_DATE::DATE, NULL) AS ON_HOLD_START_DATE
		, NULL AS ON_HOLD_END_DATE
		, NULLIF(TRIM(CLI.ADMISSIONID),'''') AS LINKED_ID
		, NULL AS ACQUIRED_FROM_COMPANY_KEY
		, NULL AS ACQUIRED_FROM_COMPANY_ID
		, NULL AS ACQUIRED_FROM_COMPANY_FULL_NAME
		, NULL AS ACQUISITION_DATE
		, NULL AS ACQUISITION_FLAG
		, IFF(A.IS_ADMITTED = TRUE, A.STARTDATE, NULL) AS ADMISSION_DATE
		, IFF(A.IS_ADMITTED = TRUE, TRUE, FALSE) AS ADMISSION_FLAG
		, NULL AS CLIENT_CONVERTED_FLAG
		, MD5(''OPENSYSTEMS'' || ''-'' || SUP.COORDINATORID1 || ''-'' || ''HHAEXCHANGE'') AS PRIMARY_SUPERVISOR_KEY
		, SUP.COORDINATORID1 AS PRIMARY_SUPERVISOR_CODE
		, UPPER(TRIM(SUP.CNAME1)) AS PRIMARY_SUPERVISOR_NAME
		, MD5(''OPENSYSTEMS'' || ''-'' || SUP.COORDINATORID2 || ''-'' || ''HHAEXCHANGE'')AS SECONDARY_SUPERVISOR_KEY
		, SUP.COORDINATORID2 AS SECONDARY_SUPERVISOR_CODE
		, UPPER(TRIM(SUP.CNAME2)) AS SECONDARY_SUPERVISOR_NAME
		, MD5(''OPENSYSTEMS'' || ''-'' || OFFICE.OFFICEID || ''-'' || ''HHAEXCHANGE'') AS PRIMARY_BRANCH_KEY
		, UPPER(TRIM(OFFICE.OFFICENAME)) AS PRIMARY_BRANCH_NAME
		, UPPER(TRIM(OFFICE.STATE)) AS PRIMARY_BRANCH_STATE
		, NULL AS GUARANTOR_NAME
		, NULL AS NOTES
		, NULL AS AGENCY
		, MD5(RS.AGENCYID||''-''||RS."REFERRALSOURCEID"||''-''||''OPENSYSTEMS'') REFERRER_KEY
		--, NULLIF(TRIM(CLI.MEDICAIDNUMBER),'''') AS MEDICAID_ID
		, TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
		, TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE
		, :STR_ETL_TASK_KEY AS ETL_TASK_KEY 
		, :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY 
		, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
		, CURRENT_USER AS ETL_INSERTED_BY
		, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_UPDATED_DATE
		, CURRENT_USER AS ETL_LAST_UPDATED_BY
		, 0 AS ETL_DELETED_FLAG
		, 0 AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.CLIENT_MASTER_LIST CLI
INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.OFFICE_OFFICES_REPL OFFICE ON CLI.OFFICEID = OFFICE.OFFICEID
LEFT JOIN VISIT_DATES VD ON CLI.MASTER_ID = VD.MASTER_ID
LEFT JOIN CLIENT_STATUS ST ON CLI.PATIENTID = ST.PATIENTID
LEFT JOIN CONTRACT_DATES CONT ON CLI.PATIENTID = CONT.PATIENTID
LEFT JOIN ADMISSION_DATA A ON CLI.PATIENTID = A.PATIENTID
LEFT JOIN DISCHARGE_REASON DR ON TRIM(CLI.PATIENTID) = TRIM(DR.PATIENTID)																		 
LEFT JOIN SUPERVISOR SUP ON CLI.MASTER_ID = SUP.PATIENTID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEOPENSYSTEMS.REFERRALSOURCE RS ON RS.REFERRALSOURCEID = CLI.REFERRALSOURCEID 
LEFT JOIN STATUS_NAME SN ON SN.STATUSID = CLI.STATUSID; 
;  
RETURN ''SUCCESS'';
END;

 EOT
}

