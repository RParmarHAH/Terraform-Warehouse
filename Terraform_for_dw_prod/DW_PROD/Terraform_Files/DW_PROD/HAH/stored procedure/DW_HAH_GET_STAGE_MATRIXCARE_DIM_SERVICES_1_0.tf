resource "snowflake_procedure" "DW_HAH_GET_STAGE_MATRIXCARE_DIM_SERVICES_1_0" {
	name ="GET_STAGE_MATRIXCARE_DIM_SERVICES_1_0"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
INSERT OVERWRITE INTO STAGE.MATRIXCARE_DIM_SERVICES_1_0
SELECT
MD5(''MATRIXCARE'' || ''-'' || SVCC_ID || ''-'' || ''MATRIXCARE'') AS SERVICE_KEY,
''MATRIXCARE'' AS SYSTEM_CODE,
7 AS SOURCE_SYSTEM_ID,
SVCC_ID AS SERVICE_CODE_ID,
SVCC_NAME AS NAME,
SVCC_BILLCODEID AS BILL_CODE_ID,
SVCC_ISEXPENSE AS IS_EXPENCE,
SVCC_ISMULTIPLE AS IS_MULTIPLE,
SVCC_OTHERCODE AS OTHER_CODE,
SVCC_DEFAULTCOST AS DEFAULT_COST,
SVCC_DEFAULTPAYUNITFLAG AS DEFAULT_PAY_UNIT_FLAG,
SVCC_DEFAULTBILLUNITFLAG AS DEFAULT_BILL_UNIT_FLAG,
SVCC_CATEGORYID AS CATEGORY_ID,
SVCC_PAYROLLCODE AS PAYROLL_CODE,
SVCC_DEFAULTREIMBURSMENT AS DEFAULT_REIMBURSMENT,
SVCC_WC AS WC,
SVCC_SHIFTPAY AS SHIFT_PAY,
SVCC_OTPAY AS OT_PAY,
SVCC_BILLEXCLUDEHOLIDAY AS BILL_EXCLUDE_HOLIDAY,
SVCC_PAYEXCLUDEHOLIDAY AS PAY_EXCLUDED_HOLIDAY,
SVCC_ISCAT AS IS_CAT,
SVCC_COMMISSIONRATE AS COMMISSION_RATE,
SVCC_BONUSPOINTS AS BONUS_POINTS,
SVCC_ACTIVE AS ACTIVE,
SVCC_REVENUECODE AS REVENUE_CODE,
SVCC_PAY AS PAY,
SVCC_POCFIRSTBILLABLEFLAG AS POC_FIRST_BIL_LABLE_FLAG,
SVCC_EXPENSETYPEID AS EXPENCE_TYPE_ID,
--SVCC_CREATEDDATE AS CREATED_DATE,
TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', SVCC_CREATEDDATE))) AS CREATED_DATE,
SVCC_CREATEDUSER AS CREATED_USER,
--SVCC_MODIFIEDDATE AS MODIFIED_DATE,
TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', SVCC_MODIFIEDDATE))) AS MODIFIED_DATE,
SVCC_MODIFIEDUSER AS MODIFIED_USER,
SVCC_TS AS TS,
SVCC_LISTITEMTYPE AS LIST_ITEM_TYPE,
SVCC_RPTGROUPID AS RPT_GROUP_ID,
SVCC_BRANCHID AS BRANCH_ID,
SVCC_OVERRIDEID AS OVERRIDE_ID,
SVCC_DESCRIPTION AS DESCRIPTION,
SVCC_TAXGROUPID AS TAX_GROUP_ID,
SVCC_LEGACYID AS LEGACY_ID,
SVCC_LEGACYBRANCHID AS LEGACY_BRANCH_ID,
SVCC_ACCTID AS ACCT_ID,
SVCC_UPLOADTELEPHONY AS UPLOAD_TELEPHONY,
SVCC_TELEPHONYTASKID AS TELEPHONY_TASK_ID,
SVCC_INCLUDEEFT AS INCLUDE_EFT,
SVCC_PROJECTEDAVGBILLVISIT AS PROJECTED_AVG_BILL_VISIT,
SVCC_PROJECTEDAVGPAYVISIT AS PROJECTED_AVG_PAY_VISIT,
SVCC_PROJECTEDAVGPAYHOURLY AS PROJECTED_AVG_PAY_HOURLY,
SVCC_PROJECTEDAVGBILLHOURLY AS PROJECTED_AVG_BILL_HOURLY,
SVCC_ISCOPY AS IS_COPY,
SVCC_ISWORKING AS IS_WORKING,
SVCC_DEDUCTEARN AS DEDUCT_ARN,
SVCC_LIVEINRPTHRS AS LIVE_IN_RPT_HRS,
SVCC_ACCTCODE AS ACCT_CODE,
SVCC_DISPLAYONCLIENTPORTAL AS DISPLAY_ON_CLIENT_PORTAL,
SVCC_DISPLAYONCAREGIVERPORTAL AS DISPLAY_ON_CAREGIVER_PORTAL,
SVCC_THERAPYCOUNTINGTYPE AS THERAPY_COUNTING_TYPE,
SVCC_MEDICAREDISCIPLINE AS MEDICARE_DISCIPLINE,
SVCC_DOCTYPE AS DOC_TYPE,
SVCC_ISMULTIPLESERVICE AS IS_MULTIPLE_SERVICE,
--INSERTDATE AS INSERT_DATE,
TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', INSERTDATE))) AS INSERT_DATE,
--UPDATEDATE AS UPDATE_DATE,
TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', UPDATEDATE)))  AS UPDATE_DATE,
DELETEDFLAG AS DELETED_FLAG,
SYS_CHANGE_VERSION AS CHANGE_VERSION,
SYS_CHANGE_OPERATION AS CHANGE_OPERATION,
 :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
        :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
                        
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
CURRENT_USER as ETL_INSERTED_BY,
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
CURRENT_USER as ETL_LAST_UPDATED_BY,
0 AS ETL_DELETED_FLAG,
0 AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.MATRIXCARE.STVHC_T_SERVICECODE;;
    RETURN ''SUCCESS'';
    END;
 
 EOT
}

