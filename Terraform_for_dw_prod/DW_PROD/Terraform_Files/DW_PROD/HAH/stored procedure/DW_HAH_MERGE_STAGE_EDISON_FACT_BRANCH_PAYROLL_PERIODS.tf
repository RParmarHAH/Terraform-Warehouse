resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_EDISON_FACT_BRANCH_PAYROLL_PERIODS" {
	name ="MERGE_STAGE_EDISON_FACT_BRANCH_PAYROLL_PERIODS"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN
    MERGE INTO HAH.FACT_BRANCH_PAYROLL_PERIODS TGT 	USING STAGE.EDISON_FACT_BRANCH_PAYROLL_PERIODS STG 
	ON TGT.BRANCH_PAYROLL_PERIODS_KEY = STG.BRANCH_PAYROLL_PERIODS_KEY
	WHEN MATCHED THEN 
	UPDATE SET 
	    TGT.BRANCH_PAYROLL_PERIODS_KEY=STG.BRANCH_PAYROLL_PERIODS_KEY
,TGT.BRANCH_KEY=STG.BRANCH_KEY
,TGT.OFFICE_STATE_CODE=STG.OFFICE_STATE_CODE
,TGT.DETAILED_OFFICE_NAME=STG.DETAILED_OFFICE_NAME
,TGT.PERIOD_START_DATE=STG.PERIOD_START_DATE
,TGT.PERIOD_END_DATE=STG.PERIOD_END_DATE
,TGT.CHECK_DATE=STG.CHECK_DATE
,TGT.ETL_TASK_KEY=STG.ETL_TASK_KEY
,TGT.ETL_INSERTED_TASK_KEY=STG.ETL_INSERTED_TASK_KEY
,TGT.ETL_INSERTED_DATE=STG.ETL_INSERTED_DATE
,TGT.ETL_INSERTED_BY=STG.ETL_INSERTED_BY
,TGT.ETL_LAST_UPDATED_DATE=STG.ETL_LAST_UPDATED_DATE
,TGT.ETL_LAST_UPDATED_BY=STG.ETL_LAST_UPDATED_BY
,TGT.ETL_DELETED_FLAG=STG.ETL_DELETED_FLAG
,TGT.ETL_INFERRED_MEMBER_FLAG=STG.ETL_INFERRED_MEMBER_FLAG      
	WHEN NOT MATCHED THEN 
	INSERT ( 
	   BRANCH_PAYROLL_PERIODS_KEY
,BRANCH_KEY
,OFFICE_STATE_CODE
,DETAILED_OFFICE_NAME
,PERIOD_START_DATE
,PERIOD_END_DATE
,CHECK_DATE
,ETL_TASK_KEY
,ETL_INSERTED_TASK_KEY
,ETL_INSERTED_DATE
,ETL_INSERTED_BY
,ETL_LAST_UPDATED_DATE
,ETL_LAST_UPDATED_BY
,ETL_DELETED_FLAG
,ETL_INFERRED_MEMBER_FLAG
	) 
	VALUES (
	   STG.BRANCH_PAYROLL_PERIODS_KEY
,STG.BRANCH_KEY
,STG.OFFICE_STATE_CODE
,STG.DETAILED_OFFICE_NAME
,STG.PERIOD_START_DATE
,STG.PERIOD_END_DATE
,STG.CHECK_DATE
,STG.ETL_TASK_KEY
,STG.ETL_INSERTED_TASK_KEY
,STG.ETL_INSERTED_DATE
,STG.ETL_INSERTED_BY
,STG.ETL_LAST_UPDATED_DATE
,STG.ETL_LAST_UPDATED_BY
,STG.ETL_DELETED_FLAG
,STG.ETL_INFERRED_MEMBER_FLAG
);
SELECT CONCAT(''Message >> Inserted : '',"number of rows inserted", '', Updated : '' ,"number of rows updated",'' Rows.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
    
 EOT
}

