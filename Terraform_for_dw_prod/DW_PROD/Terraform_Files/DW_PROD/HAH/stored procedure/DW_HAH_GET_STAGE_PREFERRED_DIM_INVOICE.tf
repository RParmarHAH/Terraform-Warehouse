resource "snowflake_procedure" "DW_HAH_GET_STAGE_PREFERRED_DIM_INVOICE" {
	name ="GET_STAGE_PREFERRED_DIM_INVOICE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

                BEGIN
--*****************************************************************************************************************************
-- NAME:  PREFERRED_DIM_INVOICE
--
-- PURPOSE: Creates one row per Invoice according to PREFERRED
--
-- DEVELOPMENT LOG:
-- DATE        	AUTHOR                	NOTES:
-- --------    	-------------------   	-----------------------------------------------------------------------------------------------
-- 04/25/2022	Mohit Vaghadiya     	Initial development
-- 07/05/2022   Mirisha Jarecha         Added AgencyId 371
-- 07/29/2022	Mohit Vaghadiya		 	Using DIM_EMPLOYEE and DIM_CLIENT to use the CLIENT and EMPLOYEE KEY 
--									 	as client may have moved to other agency, due to which it was generating
--									 	different client key which was not there in DIM_CLIENT
-- 21/04/2023 	PINKAL PANCHAL 			INVOICE_STATUS_MAPPING CHANGES FOR RCM
-- 12/09/23    	Preeti Sharma         	INVOICE_STATUS LOGIC CHANGES FOR RCM
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.PREFERRED_DIM_INVOICE
WITH CLIENT AS 
(
	SELECT * FROM
	(
		SELECT MD5((AGENCYID||''-''||MASTER_ID||''-''||''PREFERRED'' )) as CLIENT_KEY,
		PATIENTID, MASTER_ID, AGENCYID, LASTNAME, FIRSTNAME, OFFICEID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.CLIENT_MASTER_LIST 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT MD5((M.AGENCYID||''-''||M.MASTER_ID||''-''||''PREFERRED'' )) as CLIENT_KEY,
        MA.PATIENTID AS CLIENT_NUMBER, MA.MASTER_ID, MA.AGENCYID, MA.LASTNAME, MA.FIRSTNAME, MA.OFFICEID
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.CLIENT_MATCH_LIST MA
		LEFT JOIN DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.CLIENT_MASTER_LIST M ON M.MASTER_ID =MA.MASTER_ID 
		WHERE MA.PATIENTID NOT IN (SELECT PATIENTID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.CLIENT_MASTER_LIST)
	)
), BILLING_SUMMARY AS
(
	SELECT INV_HEAD.INVOICEHEADERID
		, SUM(BPV.PAIDAMOUNT) AS AMOUNT_COLLECTED
		, SUM(NVL(BPV.ADJUSTMENT, 0) + NVL(BPV.TTADJUSTMENT, 0) + NVL(BPV.WRITEOFF, 0) + NVL(BPV.OTHERADJUSTMENT, 0)) AS AMOUNT_ADJUSTED
		, SUM(BPV.WRITEOFF) AS AMOUNT_WRITEOFF
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.BILLING_PAIDVISITS_REPL BPV
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEDETAILS_REPL INV_DET
		ON INV_DET.VISITID = BPV.VISITID 
			AND INV_DET.PAYERID = BPV.PAYERID
			AND INV_DET.AGENCYID = BPV.AGENCYID 
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEHEADER_REPL INV_HEAD
		ON INV_HEAD.INVOICEHEADERID = INV_DET.INVOICEHEADERID
			AND INV_HEAD.AGENCYID = INV_DET.AGENCYID 
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.AGENCY_MAPPING AGENCY_CONFIG
		ON AGENCY_CONFIG.AGENCYID = INV_HEAD.AGENCYID
			AND AGENCY_CONFIG.ISACTIVE = TRUE
	GROUP BY INV_HEAD.INVOICEHEADERID 
), PAYMENTS_SUMMARY AS
(
	SELECT INV_HEAD.INVOICEHEADERID
		, SUM(PYM.PAIDAMOUNT) AS AMOUNT_COLLECTED
		, SUM(NVL(PYM.ADJUSTMENT, 0) + NVL(PYM.TTADJUSTMENT, 0) + NVL(PYM.WRITEOFF, 0) + NVL(PYM.OTHERADJUSTMENT, 0)) AS AMOUNT_ADJUSTED
		, SUM(PYM.WRITEOFF) AS AMOUNT_WRITEOFF
		, MAX(PYM.PAIDDATE) AS PAIDDATE
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.PAYMENTS PYM
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEDETAILS_REPL INV_DET
		ON INV_DET.VISITID = PYM.VISITID 
			AND INV_DET.INVOICEDETAILID = PYM.INVOICEDETAILID 
			AND INV_DET.AGENCYID = PYM.AGENCYID 
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEHEADER_REPL INV_HEAD
		ON INV_HEAD.INVOICEHEADERID = INV_DET.INVOICEHEADERID
			AND INV_HEAD.AGENCYID = INV_DET.AGENCYID 
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.AGENCY_MAPPING AGENCY_CONFIG
		ON AGENCY_CONFIG.AGENCYID = INV_HEAD.AGENCYID 
			AND AGENCY_CONFIG.ISACTIVE = TRUE
	GROUP BY INV_HEAD.INVOICEHEADERID 
), INVOICE_SUMMARY AS
(
	SELECT DISTINCT INV_HEAD.INVOICEHEADERID AS INVOICEHEADERID
			, INV_HEAD.INVOICEAMOUNT AS INV_AMOUNT_BILLED
			, NVL(BS.AMOUNT_ADJUSTED, PS.AMOUNT_ADJUSTED) AS INV_AMOUNT_ADJUSTED
			, COALESCE(BS.AMOUNT_COLLECTED, PS.AMOUNT_COLLECTED, 0) + NVL(INV_AMOUNT_ADJUSTED, 0) AS INV_AMOUNT_COLLECTED -- HHA Considering any adjusment OR Write off in paid amount
			, INV_AMOUNT_BILLED - INV_AMOUNT_COLLECTED AS INV_AMOUNT_OUTSTANDING
			, NVL(BS.AMOUNT_WRITEOFF, PS.AMOUNT_WRITEOFF) AS INV_AMOUNT_WRITEOFF
			, NULL AS WRITEOFF_NOTES
			, PS.PAIDDATE AS FINAL_PAYMENT_DATE
			, COUNT(DISTINCT INV_DET.PATIENTID) OVER (PARTITION BY INV_HEAD.INVOICEHEADERID) AS NUMBER_OF_CLIENTS
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEHEADER_REPL INV_HEAD
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEDETAILS_REPL INV_DET
		ON INV_DET.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID 
			AND INV_DET.AGENCYID = INV_HEAD.AGENCYID 
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.AGENCY_MAPPING AGENCY_CONFIG
		ON AGENCY_CONFIG.AGENCYID = INV_HEAD.AGENCYID
			AND AGENCY_CONFIG.ISACTIVE = TRUE
	LEFT JOIN BILLING_SUMMARY BS
		ON BS.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID 
	LEFT JOIN PAYMENTS_SUMMARY PS
		ON PS.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID 
), SUPERVISOR AS
(
	SELECT CORD.PATIENTID, CORD.COORDINATORNAME
			, ROW_NUMBER() OVER(PARTITION BY CORD.AGENCYID, CORD.PATIENTID, CORD.COORDINATORSRNO ORDER BY CREATEDDATE DESC) RN
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.PROVIDERPATIENTCOORDINATORS CORD
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.AGENCY_MAPPING AGENCY_CONFIG
		ON AGENCY_CONFIG.AGENCYID = CORD.AGENCYID
			AND AGENCY_CONFIG.ISACTIVE = TRUE
	WHERE CORD.COORDINATORSRNO  = 1
), AGENCY_OFFICES_INCLUDE AS
(
	SELECT CONFIG.AGENCYID, INCLUDE_ALL_OFFICES, GET(CONTRACT.VALUE, ''OFFICEID'')::STRING AS OFFICEID
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.AGENCY_MAPPING CONFIG
		, TABLE(FLATTEN(PARSE_JSON(CONFIG.OFFICES_TO_INCLUDE), OUTER => TRUE)) CONTRACT
	WHERE CONFIG.ISACTIVE = TRUE
), AGENCY_OFFICES_EXCLUDE AS
(
	SELECT CONFIG.AGENCYID, INCLUDE_ALL_OFFICES, GET(CONTRACT.VALUE, ''OFFICEID'')::STRING AS OFFICEID
	FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.AGENCY_MAPPING CONFIG
		, TABLE(FLATTEN(PARSE_JSON(CONFIG.OFFICES_TO_EXCLUDE), OUTER => TRUE)) CONTRACT
	WHERE CONFIG.ISACTIVE = TRUE
			AND CONFIG.OFFICES_TO_EXCLUDE IS NOT NULL
),
INVOICE_STATUS_MAPPING AS(		
SELECT DISTINCT
	INV.INVOICEHEADERID,
	17 AS SOURCE_SYSTEM_ID,
	''PREFERRED'' AS SYSTEM_CODE,
--	CASE WHEN INV.PAYMENTSTATUS = 0 THEN ''BILLED''
--		WHEN INV.PAYMENTSTATUS = 1 THEN ''PAID''
--		WHEN INV.PAYMENTSTATUS = 2 THEN ''PARTIAL PAY''
--	ELSE ''UNKNOWN'' END AS DERIVED_INVOICE_STATUS,
--Changes made on 12/09/2023 for RCM
	CASE WHEN INVOICE_SUMMARY.INV_AMOUNT_OUTSTANDING <= 0 THEN ''PAID''
    WHEN INVOICE_SUMMARY.INV_AMOUNT_OUTSTANDING> 0 AND INVOICE_SUMMARY.INV_AMOUNT_COLLECTED> 0 THEN ''PARTIAL PAY''
    ELSE ''BILLED'' END AS DERIVED_INVOICE_STATUS,
	MD5(SOURCE_SYSTEM_ID || ''-'' || DERIVED_INVOICE_STATUS || ''-'' || SYSTEM_CODE) AS INVOICE_STATUS_KEY
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEHEADER_REPL INV
LEFT JOIN INVOICE_SUMMARY ON INVOICE_SUMMARY.INVOICEHEADERID = INV.INVOICEHEADERID --Added on 12/09/2023 for RCM
)
SELECT DISTINCT MD5(''PREFERRED'' || ''-'' || INV_HEAD.AGENCYID || ''-'' || INV_HEAD.INVOICEHEADERID || ''-'' || ''PREFERRED'') AS INVOICE_KEY
				, DC.CLIENT_KEY AS CLIENT_KEY
				, INV_HEAD.VENDORINVOICENUMBER AS INVOICE_NUMBER
				, NULL AS ALTERNATE_INVOICE_NUMBER
				, TO_VARCHAR(INV_HEAD.INVOICEDATE, ''YYYYMM'') AS PERIOD
				, ''Regular'' AS INVOICE_TYPE
				, INVOICE_SUMMARY.NUMBER_OF_CLIENTS AS NUMBER_OF_CLIENTS
				, ''PREFERRED'' AS SYSTEM_CODE
				, 17 AS SOURCE_SYSTEM_ID
				, MD5(''PREFERRED'' || ''-'' || ''PREFERRED CORPORATE OFFICE'' || ''-'' || ''PREFERRED'') AS BRANCH_KEY
				, PYR.PAYERID || ''-'' || ''PREFERRED'' AS PAYOR_CODE
				, NVL(NULLIF(TRIM(PYR.PAYERNAME), ''''), ''Unknown'') AS PAYOR_NAME
				, IFF(INV_HEAD.PAYMENTSTATUS = 1, FALSE, TRUE) AS INVOICE_OPEN_FLAG -- KEEP IT OPEN IF NOT FULLY PAID
				, INV_HEAD.INVOICEDATE AS FIRST_INVOICE_DATE
				, INVOICE_SUMMARY.FINAL_PAYMENT_DATE AS FINAL_PAYMENT_DATE 
				, INV_HEAD.VENDORINVOICENUMBER AS FIRST_INVOICE_NUMBER
				, 1 AS BILL_ITERATION
				, NULL AS BILL_REPRESENTATIVE
				, SUP.COORDINATORNAME AS BILL_SUPERVISOR
				, NULL AS BILL_MANAGER
--				, CASE WHEN INV_HEAD.PAYMENTSTATUS = 0 THEN ''Billed''
--					   WHEN INV_HEAD.PAYMENTSTATUS = 1 THEN ''Fully Paid''
--					   WHEN INV_HEAD.PAYMENTSTATUS = 2 THEN ''Partially Paid''
--				  END INVOICE_STATUS 
--		CHANGES MADE ON 21/04/23 FOR INVOICE_STATUS_MAPPING BY PINKAL
				,DISM.DERIVED_INVOICE_STATUS AS INVOICE_STATUS
				, (NVL(INVOICE_SUMMARY.INV_AMOUNT_WRITEOFF, 0) > 0) AS WRITEOFF_FLAG
				, NULL AS WRITEOFF_REASON
				, INVOICE_SUMMARY.INV_AMOUNT_BILLED AS AMOUNT_BILLED
				, INVOICE_SUMMARY.INV_AMOUNT_COLLECTED AS AMOUNT_COLLECTED
				, INVOICE_SUMMARY.INV_AMOUNT_OUTSTANDING AS AMOUNT_OUTSTANDING
				, TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
				, TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
				-- ETL Fields
				
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
					   
								 
				
									   
					   
        :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
                        
		        		        , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
			    , CURRENT_USER as ETL_INSERTED_BY
			    , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_UPDATED_DATE
			    , CURRENT_USER AS ETL_LAST_UPDATED_BY
			    , 0 AS ETL_DELETED_FLAG
			    , 0 AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEHEADER_REPL INV_HEAD
INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.TBLINVOICEDETAILS_REPL INV_DET
	ON INV_DET.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID
		AND INV_HEAD.AGENCYID = INV_DET.AGENCYID 
INNER JOIN INVOICE_SUMMARY 
	ON INVOICE_SUMMARY.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID 
INNER JOIN CLIENT C 
	ON C.PATIENTID = INV_DET.PATIENTID
INNER JOIN HAH.DIM_CLIENT DC
	ON DC.CLIENT_KEY = C.CLIENT_KEY
	AND DC.SYSTEM_CODE = ''PREFERRED''
INNER JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.AGENCY_MAPPING AGENCY_CONFIG
	ON AGENCY_CONFIG.AGENCYID = INV_HEAD.AGENCYID
		AND AGENCY_CONFIG.ISACTIVE = TRUE
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.VISITS V
	ON V.VISITID = INV_DET.VISITID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.INVOICEDETAILS ID
	ON ID.INVOICEDETAILID = INV_DET.INVOICEDETAILID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.HHAEXCHANGEPREFERRED.STAGE_PAYER_REPL PYR
	ON PYR.PAYERID = INV_DET.PAYERID 
		AND INV_HEAD.AGENCYID = INV_DET.AGENCYID 
LEFT JOIN SUPERVISOR SUP
	ON SUP.PATIENTID = INV_DET.PATIENTID 
		AND SUP.RN  = 1
LEFT JOIN AGENCY_OFFICES_INCLUDE OFFICES_I
	ON OFFICES_I.AGENCYID = V.AGENCYID
LEFT JOIN AGENCY_OFFICES_EXCLUDE OFFICES_E
	ON OFFICES_E.AGENCYID = V.AGENCYID 
		AND V.OFFICEID = OFFICES_E.OFFICEID
LEFT JOIN INVOICE_STATUS_MAPPING ISM ON ISM.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID
LEFT JOIN HAH.DIM_INVOICE_STATUS_MAPPING DISM ON DISM.INVOICE_STATUS_KEY = ISM.INVOICE_STATUS_KEY
WHERE (OFFICES_I.INCLUDE_ALL_OFFICES = TRUE OR V.OFFICEID = OFFICES_I.OFFICEID)
 		AND OFFICES_E.OFFICEID IS NULL  ;
;
    RETURN ''SUCCESS'';
    END;
						  																	 
			 
    
 EOT
}

