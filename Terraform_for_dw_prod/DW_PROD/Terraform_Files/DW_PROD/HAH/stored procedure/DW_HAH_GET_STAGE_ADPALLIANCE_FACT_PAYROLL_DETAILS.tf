resource "snowflake_procedure" "DW_HAH_GET_STAGE_ADPALLIANCE_FACT_PAYROLL_DETAILS" {
	name ="GET_STAGE_ADPALLIANCE_FACT_PAYROLL_DETAILS"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN

--*****************************************************************************************************************************
-- NAME: ADPALLIANCE_FACT_PAYROLL_DETAILS
--
-- PURPOSE: Creates one row for each PAYCODE according to ADP-ALLIANCE
--
-- DEVELOPMENT LOG:
-- DATE				AUTHOR                					NOTES:
-- ----------		--------------------------------		-------------------------------------------------------------------
-- 18/10/2022		Aditya Shukla / Jigar Prajapati			Initial Development
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.ADPALLIANCE_FACT_PAYROLL_DETAILS

WITH EMPLOYEE AS (
	SELECT DISTINCT 
		MASTER_ID, FILE_NUMBER, MD5(18 || ''ADP'' || MASTER_ID || ''ALLIANCE'') AS EMPLOYEE_KEY
	FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.ADP.ALLIANCE_EMPLOYEE_MASTER_LIST
	UNION 
	SELECT DISTINCT 
		MASTER_ID, FILE_NUMBER, MD5(18 || ''ADP'' || MASTER_ID || ''ALLIANCE'') AS EMPLOYEE_KEY
	FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.ADP.ALLIANCE_EMPLOYEE_MATCH_LIST
	WHERE ID NOT IN (SELECT DISTINCT EMPLOYEE_ID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.ADP.ALLIANCE_EMPLOYEE_MASTER_LIST)
), 
AMOUNT_RATE AS (
	SELECT DISTINCT
		FILE_NUMBER AS ID,
		PAY_DATE::DATE AS PAY_DATE,
		PERIOD_BEGINNING_DATE::DATE AS BEGIN_DATE,
		CASE WHEN P.PAYCODES = ''REGULAR_EARNINGS'' THEN ''REG''
			ELSE COALESCE(HE.CODE, PS.CODE) 
		END AS PAY_CODE,
--		COALESCE(HE.DESCRIPTION, PS.DESCRIPTION) AS PAY_CODE_DESCRIPTION,
		SUM(AMOUNT) AS AMOUNT,
		SUM(NVL(TOTAL_HOURS, 0)) AS NUMBER_OF_UNITS,
		SUM(RATE) AS RATE
	FROM DISC_${var.SF_ENVIRONMENT}.ADP.ALLIANCE_PAYROLL_DETAILS P
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ADP.ALLIANCE_HOUSE_EARNINGS HE
		ON HE.CODE
		=
		CASE WHEN P.PAYCODES LIKE ''%ADDITIONAL_EARNINGS__%''
			THEN LEFT(SUBSTRING(P.PAYCODES, LENGTH(''ADDITIONAL_EARNINGS__'') + 1), 3)
		END
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ADP.ALLIANCE_PAYCODE_SOURCE PS 
		ON PS.CODE
		=
		CASE WHEN P.PAYCODES LIKE ''%VOLUNTARY_DEDUCTION_%''
			THEN SUBSTRING(SUBSTRING(P.PAYCODES, LENGTH(''VOLUNTARY_DEDUCTION_'') + 1), 0, CHARINDEX(''_'', SUBSTRING(P.PAYCODES, LENGTH(''VOLUNTARY_DEDUCTION_'') + 1)) - 1)
		END 
	GROUP BY 1, 2, 3, 4
)
SELECT DISTINCT
	MD5(18 || ''ADP'' || MASTER_ID || P.PAY_DATE::DATE || P.CHECK_VOUCHER_NUMBER || P.PERIOD_BEGINNING_DATE::DATE || PCM.PAY_CODE || NVL(PCM.PAY_CODE_DESCRIPTION, ''UNKNOWN'') || ''ALLIANCE'') AS PAYROLL_DETAIL_KEY,
	MD5(18 || ''ADP'' || P.PAY_DATE::DATE || EMP.FILE_NUMBER || P.CHECK_VOUCHER_NUMBER || PERIOD_BEGINNING_DATE::DATE || ''-'' || ''ALLIANCE'') AS PAYROLL_KEY,
	P.PAY_DATE AS REPORT_DATE,
	MD5(18 || ''ADP'' || EMP.FILE_NUMBER || ''ALLIANCE'') AS EMPLOYEE_KEY,
	COALESCE(BRANCH.BRANCH_KEY, MD5(''ADP'' || ''-'' || ''UNKNOWN'' || ''-'' || ''ALLIANCE'')) AS BRANCH_KEY,
	18 AS SOURCE_SYSTEM_ID,
	P.PAY_DATE AS PAYROLL_DATE,
	EMP.FILE_NUMBER AS EMPLOYEE_ID,
	COALESCE(BRANCH.BRANCH_NAME, ''UNKNOWN'') AS BRANCH_NAME,
	''ADP-ALLIANCE'' AS SYSTEM_CODE,
	P.PERIOD_BEGINNING_DATE::DATE AS PAY_PERIOD_START_DATE,
	P.PERIOD_ENDING_DATE::DATE AS PAY_PERIOD_END_DATE,
	P.CHECK_VOUCHER_NUMBER AS CHECK_NUMBER,
	PCM.PAY_CODE,
	PCM.PAY_CODE_DESCRIPTION AS PAY_CODE_DESCRIPTION,
	PCM.PAY_CODE_TYPE AS PAY_CODE_TYPE,
	NULL AS PAY_CODE_TYPE_DESCRIPTION,
	PCM.PAY_CODE_CATEGORY,
	AR.NUMBER_OF_UNITS AS NUMBER_OF_UNITS,
	CASE WHEN RATE_TYPE = ''Hourly'' THEN ''H''
		WHEN RATE_TYPE = ''Salary'' THEN ''S''
	ELSE NULL 
	END AS UNIT_TYPE_CODE,
	RATE_TYPE AS UNIT_TYPE_DESCRIPTION,
	AR.RATE AS RATE,
	AR.AMOUNT AS AMOUNT,
	:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
	:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz AS ETL_INSERTED_DATE,
	CURRENT_USER AS ETL_INSERTED_BY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz AS ETL_LAST_UPDATED_DATE,
	CURRENT_USER AS ETL_LAST_UPDATED_BY,
	FALSE AS ETL_DELETED_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.ADP.ALLIANCE_PAYROLL_DETAILS P
LEFT JOIN EMPLOYEE EMP
	ON EMP.FILE_NUMBER = P.FILE_NUMBER
LEFT JOIN DW_${var.SF_ENVIRONMENT}.STAGE.ADPALLIANCE_DIM_PAYCODE_MAPPING PCM
	ON PCM.PAYCODE_MAPPING_KEY = MD5(18 || P.PAYCODES || ''-'' || ''ALLIANCE'')
LEFT JOIN AMOUNT_RATE AR
	ON AR.ID = P.FILE_NUMBER AND AR.PAY_DATE = P.PAY_DATE::DATE AND AR.PAY_CODE = PCM.PAY_CODE AND AR.BEGIN_DATE = P.PERIOD_BEGINNING_DATE::DATE
LEFT JOIN DW_${var.SF_ENVIRONMENT}.STAGE.ADPALLIANCE_DIM_BRANCH BRANCH
	ON UPPER(BRANCH.BRANCH_NAME) LIKE ''%'' || CASE WHEN "LOCATION" = ''STJOS - St. Joseph'' THEN ''ST.JOSEPH''
									ELSE UPPER(TRIM(SUBSTRING(LOCATION, CHARINDEX(''-'', "LOCATION") + 1))) END || ''%'';

END;

 EOT
}

