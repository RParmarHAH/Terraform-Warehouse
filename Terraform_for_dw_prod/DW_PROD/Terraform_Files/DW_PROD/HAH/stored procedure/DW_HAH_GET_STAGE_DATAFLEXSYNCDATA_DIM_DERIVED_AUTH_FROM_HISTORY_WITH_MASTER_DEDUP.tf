resource "snowflake_procedure" "DW_HAH_GET_STAGE_DATAFLEXSYNCDATA_DIM_DERIVED_AUTH_FROM_HISTORY_WITH_MASTER_DEDUP" {
	name ="GET_STAGE_DATAFLEXSYNCDATA_DIM_DERIVED_AUTH_FROM_HISTORY_WITH_MASTER_DEDUP"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  DATAFLEXSYNCDATA_DIM_DERIVED_AUTH_FROM_HISTORY
--
-- PURPOSE: current table only holds latest seq of hours changed, so using history to 
--
-- Development LOG:
-- DATE        	AUTHOR                	NOTES:
-- --------    	-------------------   	-----------------------------------------------------------------------------------------------
-- 15/09/2022	SANKET JAIN				INITIAL VERSION
--*****************************************************************************************************************************
--

INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}.STAGE.DATAFLEXSYNCDATA_DIM_DERIVED_AUTH_FROM_HISTORY_WITH_MASTER_DEDUP

WITH auth_all_records AS (
	SELECT * FROM (
	SELECT MAX(RN) OVER(PARTITION BY D.DBNAME,D.CLIENTNUMBER,D.CONTRACTCODE) AS MAXRN,D.* FROM  
	(SELECT ROW_NUMBER() OVER(PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE ORDER BY ETL_LAST_UPDATED_DATE ) AS RN,
	DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, DATECHANGED
	FROM DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.HIST_DFCLIENTCONTRACTS )D
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCLIENTCONTRACTS DC
	ON D.DBNAME=dc.DBNAME AND D.CLIENTNUMBER=dc.CLIENTNUMBER AND D.CONTRACTCODE=dc.CONTRACTCODE
))
------------------------------------- taking min of datechange for auth having same hours for client and contract before hours are changed
, MIN_DATECHANGE AS (
SELECT RN, MAXRN,DBNAME, CLIENTNUMBER, CONTRACTCODE,AUTHTYPE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS,AUTHMAXHOURS,DATECHANGED,
FIRST_VALUE(DATECHANGED) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE,BEGINSERVICEDATE,ENDSERVICEDATE,SS ORDER BY DATECHANGED) AS NEWDATECHANGED FROM (
SELECT IFF(PP IS NOT NULL,PP,lag (pp)IGNORE NULLS  OVER (PARTITION BY D.DBNAME,D.CLIENTNUMBER,D.CONTRACTCODE ORDER BY D.RN )) AS SS,* FROM (
SELECT EC.AUTHTYPE AS AUTHTYPE,
CASE WHEN EC.AUTHTYPE=''Weekly'' THEN WEEKLYMAXHOURS ELSE MONTHLYMAXHOURS END  AS AUTHMAXHOURS,
ifnull(LAG(AUTHMAXHOURS) OVER (PARTITION BY D.DBNAME,D.CLIENTNUMBER,D.CONTRACTCODE ORDER BY D.RN ),AUTHMAXHOURS) AS previousseq,
CASE WHEN rn =1 THEN rn 
	 WHEN AUTHMAXHOURS!=previousseq THEN rn
		ELSE NULL END AS pp,D.* 
FROM auth_all_records d
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCONTRACTSAUTH EC
    ON TRIM(d.DBNAME) = TRIM(EC.DBNAME)
	AND TRIM(d.CONTRACTCODE) = TRIM(EC.CONTRACTCODE)
)d))
------------------------------------
,All_records AS (
SELECT RN, MAXRN,DBNAME, CLIENTNUMBER, CONTRACTCODE,AUTHTYPE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS,AUTHMAXHOURS,
NEWDATECHANGED AS DATECHANGED
FROM MIN_DATECHANGE)
--SELECT DISTINCT * FROM MIN_DATECHANGE
--WHERE NEWDATECHANGED IS NULL 
----DBNAME=''IL'' AND CLIENTNUMBER=700471 AND CONTRACTCODE=''2''
--ORDER BY rn;
----------------------------------------------------------------------------------------------------------------------------------------------------
 -- TO GET LAST DAY OF MONTH of LAST visit FOR END date NULL records
, VISIT_MAX_SERVICE_DATE AS( 
WITH DF_IMPORT_VISITS AS 												-- Using only 1 record from multiple records per scheduleid just for mapping between DF and SD
(
SELECT ROW_NUMBER()OVER(PARTITION BY VISITKEY, TRACKINGID, WEEKENDDATE, STATE, SERVICEDATE ORDER BY IMPORTTASKID DESC, LINEID DESC) RNO,
		VISITKEY,
		split_part(DFI.VISITKEY, ''_'',  3)::NUMBER AS SCHEDULEID,
		split_part(DFI.VISITKEY, ''_'',  2) AS AGENCYID,
		TRACKINGID, WEEKENDDATE, STATE, SERVICEDATE, ETL_LAST_UPDATED_DATE
FROM DISC_${var.SF_ENVIRONMENT}.SANDATAEXCHANGE.DFIMPORT_IMPORTVISITS DFI
WHERE ISIMPORTED = TRUE AND NVL(TRACKINGID,0) <> 0
QUALIFY RNO = 1			   
)
SELECT DB,CN,CC,LAST_DAY(MAX(MSD)) AS msd FROM (
SELECT f.DBNAME AS DB,ts.CLIENTNUMBER AS CN,ts.CONTRACTCODE AS CC,MAX(f.SERVICEDATE) AS MSD FROM 
DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.ALL_DFTIMESHEETS TS1 
LEFT JOIN DF_IMPORT_VISITS DFI 											-- ONLY IL AND MO CAN COME USING THIS JOIN FROM SANDATA
	ON TS1.TRACKINGID = DFI.TRACKINGID 
	AND TS1.WEEKENDDATE = DFI.WEEKENDDATE 
	AND TS1.DBNAME = DFI.STATE 
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_VISITS SV
	ON DFI.SCHEDULEID = SV.SCHEDULEID  
	AND DFI.AGENCYID = SV.AGENCYID
	AND TS1.clientnumber::varchar=SV.CLIENTOTHERID 
	AND DFI.SERVICEDATE = SV.DATE
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_SCHEDULES SCH 
	ON  DFI.SCHEDULEID = SCH.SCHEDULEID  
	AND DFI.AGENCYID  = SCH.AGENCYID
	AND DFI.SERVICEDATE = SCH.SCHEDULEDATE
RIGHT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.ALL_TIMESHEETSHOURS f
	ON f.DbName = ts1.DbName 
	AND f.ReferenceNo = ts1.ReferenceNo 
	AND f.WeekendDate = ts1.WeekendDate 
	AND F.SERVICEDATE = IFF(F.SERVICEDATE = COALESCE(SV.DATE,SCH.SCHEDULEDATE),COALESCE(SV.DATE,SCH.SCHEDULEDATE),F.SERVICEDATE) 	-- ONLY JOIN ON servicedate WHEN mapping IS possible, otherwise will GET TS.DATA ONLY FOR visits mapped WITH sd AND rest will have NULL
	AND F.SERVICEDATE = IFF(F.SERVICEDATE = DFI.SERVICEDATE,DFI.SERVICEDATE,NVL(DFI.SERVICEDATE,F.SERVICEDATE))
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.ALL_DFTIMESHEETS TS 																			-- This join will only be used to get fields, the previous TS1 join''''s purpose is to just act as mapping between TABLES. using same TS table for both causes issues 
	ON TS.DBNAME = F.DBNAME AND TS.REFERENCENO = F.REFERENCENO AND F.WEEKENDDATE = TS.WEEKENDDATE
GROUP BY 1,2,3
UNION ALL 
SELECT SD.DFDBNAME AS DB,SD.CLIENTOTHERID AS CN,SD.CONTRACTCODE AS CC,MAX(SD.SCHEDULEDATE) AS MSD 
FROM DISC_${var.SF_ENVIRONMENT}.PUBLIC.VW_DATAFLEX_SANDATA_PENDING_VISITS SD
GROUP BY 1,2,3)
GROUP BY 1,2,3
)
,CURRENT_AUTH AS (
	SELECT RN, MAXRN,DBNAME, CLIENTNUMBER, CONTRACTCODE,AUTHTYPE, BEGINSERVICEDATE,AUTHEND AS ENDSERVICEDATE,
	MONTHLYMAXHOURS, WEEKLYMAXHOURS, DATECHANGED,AUTHMAXHOURS FROM 
	(SELECT AR.*,COALESCE(AR.ENDSERVICEDATE,MSD,LAST_DAY(C.ENDSERVICEDATE),LAST_DAY(GETDATE())) AS AUTHEND 
	FROM ALL_RECORDS AR 
	LEFT JOIN VISIT_MAX_SERVICE_DATE fv ON
	fv.db =AR.dbname
	AND  fv.cc = AR.CONTRACTCODE AND fv.CN = AR.CLIENTNUMBER::varchar
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCLIENTS C 
	ON C.DBNAME = AR.DBNAME 
	AND C.NUMBER = AR.CLIENTNUMBER
	WHERE MAXRN=RN)
)
, AUTH_FROM_HISTORY AS 
(
SELECT AR.* FROM ALL_RECORDS AR WHERE MAXRN!=RN  
AND ((BEGINSERVICEDATE IS NOT NULL AND ENDSERVICEDATE IS NOT NULL) 
	-- OR (BEGINSERVICEDATE IS NULL AND ENDSERVICEDATE IS NOT NULL)
 	 OR (BEGINSERVICEDATE IS NOT NULL AND ENDSERVICEDATE IS NULL)
 	 )
AND MONTHLYMAXHOURS!=9999
QUALIFY DATECHANGED IS NOT NULL
)
--SELECT * FROM AUTH_FROM_HISTORY WHERE DATECHANGED IS NULL;
, AUTHS_COMBINED AS (
SELECT RN, MAXRN,DBNAME, CLIENTNUMBER, CONTRACTCODE, AUTHTYPE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, AUTHMAXHOURS, DATECHANGED FROM AUTH_FROM_HISTORY
UNION ALL 
SELECT RN,MAXRN,DBNAME, CLIENTNUMBER, CONTRACTCODE, AUTHTYPE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, AUTHMAXHOURS, DATECHANGED FROM CURRENT_AUTH
)
--SELECT * FROM AUTHS_COMBINED WHERE 
--DBNAME=''IL'' AND CLIENTNUMBER=700471 AND CONTRACTCODE=''2''
--ORDER BY  rn;
---------------------------------------------------------------------------------------------------------------------------------
---For same system, client, contract ol records have diffrent begin and end service dates so taking max value of that dates
, ABCD AS 
(
SELECT DISTINCT DBNAME, CLIENTNUMBER, CONTRACTCODE,AUTHTYPE, ABEGIN AS BEGINSERVICEDATE, AEND AS  ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS,AUTHMAXHOURS, DATECHANGED FROM 
(SELECT *, FIRST_VALUE(ENDSERVICEDATE) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE ORDER BY RN desc) AS AEND
 	   , FIRST_VALUE(BEGINSERVICEDATE) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE ORDER BY RN desc) AS ABEGIN
 FROM AUTHS_COMBINED)
)
--SELECT --FIRST_VALUE(DATECHANGED) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE ORDER BY RN desc) AS AEND,
--* FROM ABCD WHERE --BEGINSERVICEDATE IS NULL
--DBNAME=''IL'' AND CLIENTNUMBER=700471 AND CONTRACTCODE=''2'';
---------------------------------------------------------------------------------------------------------------------------------------------------
---For same system, client, contract, beginservice, endservice and on same day, if hours have changed then taking max of those hours on that day
, EFGH AS 
(SELECT DISTINCT DBNAME, CLIENTNUMBER, CONTRACTCODE,AUTHTYPE, BEGINSERVICEDATE , ENDSERVICEDATE,
		MONTHnew AS MONTHLYMAXHOURS,weeknew AS WEEKLYMAXHOURS, DATECHANGED FROM
(SELECT *, FIRST_VALUE(MONTHLYMAXHOURS) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE,BEGINSERVICEDATE,ENDSERVICEDATE,DATECHANGED ORDER BY MONTHLYMAXHOURS DESC) AS MONTHnew
 		, FIRST_VALUE(WEEKLYMAXHOURS) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE,BEGINSERVICEDATE,ENDSERVICEDATE,DATECHANGED ORDER BY WEEKLYMAXHOURS DESC) AS weeknew 
 FROM ABCD)
)
---------------------------------------------------------------------------------------------------------------------------------
---sequencing the data
, MNOP  AS (
SELECT * FROM 
(SELECT MAX(RN) OVER(PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE) AS MAXRN,* FROM
(SELECT DISTINCT ROW_NUMBER() OVER(PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE ORDER BY DATECHANGED ) AS RN,* 
FROM EFGH
))
)
--SELECT 
--* FROM MNOP WHERE 
--DBNAME=''IL'' AND CLIENTNUMBER=700471 AND CONTRACTCODE=''2'';
----------------------------------------------------------------------------------------------------------------------------
--- doing modification of dates based on seq
, MODIFIED_DATES AS (
SELECT DISTINCT CA.*,
	CASE WHEN RN =1 THEN iff(COALESCE(CA.BEGINSERVICEDATE,DC.BEGINSERVICEDATE)<DC.BEGINSERVICEDATE,DC.BEGINSERVICEDATE,COALESCE(CA.BEGINSERVICEDATE,DC.BEGINSERVICEDATE))
		 WHEN RN!=1 THEN iff(IFF(CA.DATECHANGED>CA.ENDSERVICEDATE,CA.ENDSERVICEDATE,CA.DATECHANGED)<DC.BEGINSERVICEDATE,DC.BEGINSERVICEDATE,IFF(CA.DATECHANGED>CA.ENDSERVICEDATE,CA.ENDSERVICEDATE,CA.DATECHANGED))		 	   
    END AS MODIFIED_START_DATE1
    ,iff(MODIFIED_START_DATE1<''1970-01-01'',''1970-01-01'',MODIFIED_START_DATE1) AS MODIFIED_START_DATE
	,CASE WHEN RN =MAXRN THEN iff(CA.ENDSERVICEDATE>DC.ENDSERVICEDATE,DC.ENDSERVICEDATE,CA.ENDSERVICEDATE)
		 WHEN RN!=MAXRN THEN iff(COALESCE(LEAD(DATEADD(DAY,-1,MODIFIED_START_DATE))OVER (PARTITION BY CA.DBNAME,CA.CLIENTNUMBER,CA.CONTRACTCODE,CA.BEGINSERVICEDATE,CA.ENDSERVICEDATE ORDER BY RN),CA.ENDSERVICEDATE)
		 					>DC.ENDSERVICEDATE,DC.ENDSERVICEDATE,
		 					COALESCE(LEAD(DATEADD(DAY,-1,MODIFIED_START_DATE))OVER (PARTITION BY CA.DBNAME,CA.CLIENTNUMBER,CA.CONTRACTCODE,CA.BEGINSERVICEDATE,CA.ENDSERVICEDATE ORDER BY RN),CA.ENDSERVICEDATE))
	END AS MODIFIED_END_DATE
FROM MNOP CA
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCLIENTS DC
ON DC.NUMBER  = CA.CLIENTNUMBER AND DC.DBNAME = CA.DBNAME)
--SELECT 
--* FROM MODIFIED_DATES WHERE 
--DBNAME=''IL'' AND CLIENTNUMBER=700471 AND CONTRACTCODE=''2'';
--------------------CLEANED_AUTHS CONTAINS AUTH DEDUP ON CLIENTNUMBER
, CLEANED_AUTHS AS (
SELECT DISTINCT MAXRN,RN,DBNAME,CLIENTNUMBER,CONTRACTCODE,AUTHTYPE,BEGINSERVICEDATE,ENDSERVICEDATE,
				MONTHLYMAXHOURS,WEEKLYMAXHOURS,DATECHANGED,MODIFIED_START_DATE,MODIFIED_END_DATE
		, IFF(datediff(DAY,MODIFIED_START_DATE,MODIFIED_END_DATE)+1<0,0,datediff(DAY,MODIFIED_START_DATE,MODIFIED_END_DATE)+1) AS AUTHDAYS 
FROM MODIFIED_DATES D
WHERE AUTHDAYS>0 )
--SELECT *FROM CLEANED_AUTHS D
--WHERE 
--DBNAME=''IL'' AND CLIENTNUMBER=700471 AND CONTRACTCODE=''2''
--ORDER BY RN;
---------------------------------------------------------DEDUP ON MASTER_CLIENTNUMBER-------------------------------------------
, CLIENT_DATA AS
(
	SELECT * FROM
	(
		SELECT TRIM(DBNAME) AS MASTER_DBNAME,
               TRIM(REGEXP_REPLACE(MASTER_ID, DBNAME))::NUMBER AS MASTER_CLIENT_NUMBER,
                TRIM(DBNAME) AS DBNAME,
 	           "NUMBER" AS CLIENT_NUMBER
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.CLIENT_MASTER_LIST
	)
	UNION
	SELECT * FROM
	(
		SELECT TRIM(MASTER.DBNAME) AS MASTER_DBNAME,
               TRIM(REGEXP_REPLACE(MASTER.MASTER_ID, MASTER.DBNAME))::NUMBER AS MASTER_CLIENT_NUMBER,
               TRIM(MATCH.DBNAME) AS DBNAME,
               MATCH."NUMBER" AS CLIENT_NUMBER
		FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.CLIENT_MATCH_LIST AS MATCH
        JOIN DISC_DEDUPE_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.CLIENT_MASTER_LIST AS MASTER 
            ON MASTER.MASTER_ID = MATCH.MASTER_ID
        WHERE MATCH.ID <> MATCH.MASTER_ID
	)
)
-----GETTING MASTER CLIENT NUMBER
, MASTER_CLIENT_NUMBER AS (
SELECT COALESCE(MASTER_CLIENT_NUMBER,CLIENTNUMBER) AS MASTER_CLIENT_NUMBER,AH.*
FROM CLEANED_AUTHS AH
LEFT JOIN CLIENT_DATA CD ON AH.CLIENTNUMBER = CD.CLIENT_NUMBER AND AH.DBNAME = CD.DBNAME
)
--SELECT * FROM MASTER_CLIENT_NUMBER
--WHERE 
--DBNAME=''IL'' AND CLIENTNUMBER=700471 AND CONTRACTCODE=''2'';
----------------------------------------------------------------------------------------------------------
-- SEQUENCING BASED ON MASTER CLIENT
, MASTER_SEQUENCE AS (
SELECT MAX(MASTER_RN) OVER(PARTITION BY DBNAME,MASTER_CLIENT_NUMBER,CONTRACTCODE) AS MASTER_MAXRN,* FROM
(SELECT DISTINCT ROW_NUMBER() OVER(PARTITION BY DBNAME,MASTER_CLIENT_NUMBER,CONTRACTCODE 
			ORDER BY BEGINSERVICEDATE,ENDSERVICEDATE,CLIENTNUMBER,RN ) AS MASTER_RN,
* FROM MASTER_CLIENT_NUMBER)
)
--------------------------------------------------------------------------------------------------------
--DATE MODIFICATION BASED ON MASER SEQUENCING
, MASTER_DATES_MODIFICATION AS (
 SELECT *,MODIFIED_START_DATE AS MASTER_MODIFIED_START_DATE
 		, LEAD(DATEADD(DAY,-1,MODIFIED_START_DATE))OVER (PARTITION BY CA.DBNAME,CA.MASTER_CLIENT_NUMBER,CA.CONTRACTCODE ORDER BY MASTER_RN) AS NEXTSEQSTART
 		, CASE WHEN MASTER_RN!=MASTER_MAXRN THEN IFF(NEXTSEQSTART<MODIFIED_END_DATE,NEXTSEQSTART,MODIFIED_END_DATE) ELSE MODIFIED_END_DATE END AS MASTER_MODIFIED_END_DATE
 FROM MASTER_SEQUENCE CA
)
SELECT 	MASTER_MAXRN,
		MASTER_RN,
		MASTER_CLIENT_NUMBER::NUMBER,
		MAXRN,
		RN,
		DBNAME,
		CLIENTNUMBER::NUMBER,
		CONTRACTCODE,
		AUTHTYPE,
		BEGINSERVICEDATE,
		ENDSERVICEDATE,
		MONTHLYMAXHOURS,
		WEEKLYMAXHOURS,
		DATECHANGED,
		MODIFIED_START_DATE, 
		MODIFIED_END_DATE,AUTHDAYS,
		MASTER_MODIFIED_START_DATE,
		MASTER_MODIFIED_END_DATE, 
		IFF(datediff(DAY,MASTER_MODIFIED_START_DATE,MASTER_MODIFIED_END_DATE)+1<0,0,datediff(DAY,MASTER_MODIFIED_START_DATE,MASTER_MODIFIED_END_DATE)+1) MASTER_AUTHDAYS,
		-1 AS ETL_TASK_KEY,
        -1 AS ETL_INSERTED_TASK_KEY,
	    convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	    CURRENT_USER as ETL_INSERTED_BY ,
	    convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	    CURRENT_USER as ETL_LAST_UPDATED_BY,
	    0 as ETL_DELETED_FLAG
FROM MASTER_DATES_MODIFICATION;



RETURN ''SUCCESS'';
END;

 EOT
}

