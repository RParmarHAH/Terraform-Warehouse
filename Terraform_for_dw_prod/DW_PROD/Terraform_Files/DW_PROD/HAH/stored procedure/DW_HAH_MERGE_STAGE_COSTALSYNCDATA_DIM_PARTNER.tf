resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_COSTALSYNCDATA_DIM_PARTNER" {
	name ="MERGE_STAGE_COSTALSYNCDATA_DIM_PARTNER"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    RETURN_RESULT VARCHAR;
BEGIN
MERGE INTO DW_${var.SF_ENVIRONMENT}.HAH.DIM_PARTNER AS tgt
USING DW_${var.SF_ENVIRONMENT}.STAGE.COSTALSYNCDATA_DIM_PARTNER AS src
ON tgt.PARTNER_KEY=src.PARTNER_KEY
WHEN MATCHED
THEN UPDATE SET
      tgt.PARENT_PARTNER_KEY= src.PARENT_PARTNER_KEY
    , tgt.PARENT_PARTNER_NAME=src.PARENT_PARTNER_NAME
	, tgt.SOURCE_SYSTEM_ID=src.SOURCE_SYSTEM_ID
	, tgt.SYSTEM_CODE=src.SYSTEM_CODE
	, tgt.PARTNER_CODE=src.PARTNER_CODE
	, tgt.PARTNER_NAME=src.PARTNER_NAME
	, tgt.PARTNER_TYPE_CODE=src.PARTNER_TYPE_CODE
	, tgt.PARTNER_TYPE_NAME=src.PARTNER_TYPE_NAME
	, tgt.ACTIVE_FLAG=src.ACTIVE_FLAG
	, tgt.START_DATE=src.START_DATE
	, tgt.END_DATE=src.END_DATE
	, tgt.ETL_TASK_KEY=src.ETL_TASK_KEY
	, tgt.ETL_INSERTED_TASK_KEY=src.ETL_INSERTED_TASK_KEY
	, tgt.ETL_INSERTED_DATE=src.ETL_INSERTED_DATE
	, tgt.ETL_INSERTED_BY=src.ETL_INSERTED_BY
	, tgt.ETL_LAST_UPDATED_DATE=src.ETL_LAST_UPDATED_DATE
	, tgt.ETL_LAST_UPDATED_BY=src.ETL_LAST_UPDATED_BY
	, tgt.ETL_DELETED_FLAG=src.ETL_DELETED_FLAG
	, tgt.ETL_INFERRED_MEMBER_FLAG=src.ETL_INFERRED_MEMBER_FLAG
WHEN NOT MATCHED
THEN INSERT (PARTNER_KEY
    , PARENT_PARTNER_KEY
    , PARENT_PARTNER_NAME
	, SOURCE_SYSTEM_ID
	, SYSTEM_CODE
	, PARTNER_CODE
	, PARTNER_NAME
	, PARTNER_TYPE_CODE
	, PARTNER_TYPE_NAME
	, ACTIVE_FLAG
	, START_DATE
	, END_DATE
	, ETL_TASK_KEY
	, ETL_INSERTED_TASK_KEY
	, ETL_INSERTED_DATE
	, ETL_INSERTED_BY
	, ETL_LAST_UPDATED_DATE
	, ETL_LAST_UPDATED_BY
	, ETL_DELETED_FLAG
	, ETL_INFERRED_MEMBER_FLAG)
VALUES (src.PARTNER_KEY
    , src.PARENT_PARTNER_KEY
    , src.PARENT_PARTNER_NAME
	, src.SOURCE_SYSTEM_ID
	, src.SYSTEM_CODE
	, src.PARTNER_CODE
	, src.PARTNER_NAME
	, src.PARTNER_TYPE_CODE
	, src.PARTNER_TYPE_NAME
	, src.ACTIVE_FLAG
	, src.START_DATE
	, src.END_DATE
	, src.ETL_TASK_KEY
	, src.ETL_INSERTED_TASK_KEY
	, src.ETL_INSERTED_DATE
	, src.ETL_INSERTED_BY
	, src.ETL_LAST_UPDATED_DATE
	, src.ETL_LAST_UPDATED_BY
	, src.ETL_DELETED_FLAG
	, src.ETL_INFERRED_MEMBER_FLAG);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Inserted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;

 EOT
}

