resource "snowflake_procedure" "DW_HAH_GET_STAGE_ALAYACARE_DIM_INVOICE" {
	name ="GET_STAGE_ALAYACARE_DIM_INVOICE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
  RETURN_RESULT VARCHAR(1000);
BEGIN
    --*****************************************************************************************************************************
-- NAME:  ALAYACARE_DIM_INVOICE
--
-- PURPOSE: Creates one row per Invoice_ID according to AlayaCare
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 11/09/21		Mir Ali				Initial version
--22/12/21      Vaidehi Shah        dedupe and changes in keys
--20/01/22		Pooja Shah			IMPROVED INVOICE LOGIC FOR GA - MARKET REPORT
--21/04/23		PINKAL PANCHAL		ADDED INVOICE_STATUS_MAPPING FOR RCM
--05/06/2023 	PINKAL PANCHAL		Resolved Orphan Branch keys
--23/06/2023	PINKAL PANCHAL		Resolved Orphan Client Keys
--27/07/2023	PINKAL PANCHAL		Updated "BILLED" INVOICE_STATUS
--15/09/2023    Pradeep Thippani    changed invoice_status logic for PAID and SENT
--*****************************************************************************************************************************
--

INSERT OVERWRITE INTO STAGE.ALAYACARE_DIM_INVOICE
WITH INVOICE_ITEMS AS (
	SELECT INVOICE_ITEM.INVOICE_ID, 
		COALESCE(C.MASTER_ID,CM.MASTER_ID, INVOICE_ITEM.CLIENT_ID, VISIT.CLIENT_ID) AS CLIENT_ID,
--		COALESCE(C.MASTER_ID, INVOICE_ITEM.CLIENT_ID, VISIT.CLIENT_ID) AS CLIENT_ID,	--Changes made on 23/06/23
		COALESCE(VISIT.BRANCH_ID, COST_CENTRE.PROPERTIES_BRANCH_ID) AS BRANCH_ID,
		G.GROUP_ID,
-- 		CHANGES MADE FOR RCM ON 28/12/22
--		SUM(INVOICE_ITEM.INVOICE_ITEM_AMOUNT) AS AMOUNT_BILLED, 
--		SUM(NVL(INVOICE_ITEM.INVOICE_ITEM_AMOUNT, 0) - NVL(INVOICE_ITEM.INVOICE_ITEM_BALANCE, 0)) AS AMOUNT_COLLECTED,
--		SUM(INVOICE_ITEM.INVOICE_ITEM_BALANCE) AS AMOUNT_OUTSTANDING,
		NULLIF(MAX(GREATEST(NVL(INVOICE_ITEM.PAYMENT_DATE, ''1/1/1900''), NVL(INVOICE_ITEM.INVOICE_LAST_PAYMENT_DATE, ''1/1/1900''))), ''1/1/1900'') AS FINAL_PAYMENT_DATE,
		NULLIF(concat(YEAR(billing_period.END_DATE),MONTH(billing_period.END_DATE)),''19001'') AS BILLING_PERIOD
	FROM DISC_${var.SF_ENVIRONMENT}.ALAYACARE.INVOICE_ITEM AS INVOICE_ITEM
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.VISIT AS VISIT
		ON VISIT.VISIT_ID = INVOICE_ITEM.VISIT_ID 
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.SERVICE AS SERVICE
		ON SERVICE.SERVICE_ID = COALESCE(INVOICE_ITEM.SERVICE_ID,VISIT.SERVICE_ID) 	--Changes made on 23/06/23
--		ON SERVICE.SERVICE_ID = COALESCE(VISIT.SERVICE_ID,VISIT.CLIENT_ID, INVOICE_ITEM.CLIENT_ID) 
	LEFT JOIN DISC_DEDUPE_${var.SF_ENVIRONMENT}.ALAYACARE.CLIENT_MATCH_LIST   CM
--		ON CM.ID = SERVICE.SERVICE_CLIENT_ID	--Changes made on 23/06/23
		ON CM.ID = COALESCE(INVOICE_ITEM.CLIENT_ID, SERVICE.SERVICE_CLIENT_ID)
	LEFT JOIN DISC_DEDUPE_${var.SF_ENVIRONMENT}.ALAYACARE.CLIENT_MASTER_LIST  C	
		ON C.CLIENT_ID=COALESCE(CM.ID, SERVICE.SERVICE_CLIENT_ID, VISIT.CLIENT_ID, INVOICE_ITEM.CLIENT_ID)
--			AND VISIT.BRANCH_ID=C.BRANCH_ID 
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.TBL_GUID_COST_CENTRE_TIER_4 COST_CENTRE_MAPPING
--		ON COST_CENTRE_MAPPING.GUID_TO = C.GUID		--Changes made on 05/06/23 by Pinkal
		ON COST_CENTRE_MAPPING.GUID_TO = COALESCE (C.GUID,CM.GUID) 
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.TBL_COST_CENTRES_TIER_4 AS COST_CENTRE
		ON COST_CENTRE.ID = COST_CENTRE_MAPPING.COST_CENTRE_ID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.GROUPS AS G
		ON G.BRANCH_ID = COALESCE(COST_CENTRE.PROPERTIES_BRANCH_ID, VISIT.BRANCH_ID)
			AND G.PROFILE_COMPANY = COST_CENTRE.PROPERTIES_DESCRIPTION
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.BRANCH B 
		ON B.BRANCH_ID = COALESCE(VISIT.BRANCH_ID, COST_CENTRE.PROPERTIES_BRANCH_ID)
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.INVOICE_ITEM_BILLING_PERIOD AS invoice_item_billing_period 
		ON INVOICE_ITEM.invoice_item_id=invoice_item_billing_period.invoice_item_id
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.BILLING_PERIOD AS billing_period 
		ON invoice_item_billing_period.billingperiod_id=billing_period.billing_period_id
	GROUP BY 1, 2, 3, 4, BILLING_PERIOD
),
INVOICE_STATUS_MAPPING AS 
(
SELECT DISTINCT
	INVOICE_DETAILS.INVOICE_ID,
	9 AS SOURCE_SYSTEM_ID1,
	UPPER(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(INVOICE_ITEMS.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'') AS SYSTEM_CODE,
	CASE
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''DELETED'' THEN ''CANCELLED''
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''DRAFT'' THEN ''UNBILLED''
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''PAID'' THEN
                  CASE WHEN (SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)))>0 AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))<=0 THEN ''PAID''
                  ELSE ''PARTIAL PAY''  END
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''SENT'' THEN --''BILLED''        --Changes made on 19/07/23 by Pinkal
                CASE WHEN (SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)))> 0 AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))>0 THEN ''PARTIAL PAY''
                     WHEN  (SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)))> 0 AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))<=0 THEN ''PAID''
                ELSE ''BILLED'' END
--			changes made on 15/09/2023 for RCM
--			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''PAID'' AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))=0 THEN ''PAID''
--			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''PAID'' AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))!=0 THEN ''PARTIAL PAY''
--			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''SENT'' THEN --''BILLED'' --Changes made on 27/07/23 by Pinkal
--				CASE WHEN (SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)))>0
--						AND SUM(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE)>0 THEN ''PARTIAL PAY''
--                ELSE ''BILLED'' END
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''VOID'' THEN ''CANCELLED'' 
	ELSE ''UNKNOWN'' END AS DERIVED_INVOICE_STATUS,
	MD5(SOURCE_SYSTEM_ID1 || ''-'' || DERIVED_INVOICE_STATUS || ''-'' || SYSTEM_CODE) AS INVOICE_STATUS_KEY
FROM DISC_${var.SF_ENVIRONMENT}.ALAYACARE.INVOICE_DETAILS AS INVOICE_DETAILS
LEFT JOIN INVOICE_ITEMS AS INVOICE_ITEMS
	ON INVOICE_ITEMS.INVOICE_ID = INVOICE_DETAILS.INVOICE_ID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.FUNDER AS FUNDERS
	ON FUNDERS.FUNDER_ID = INVOICE_DETAILS.INVOICE_FUNDER_ID
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.BRANCH AS B 
	ON B.BRANCH_ID = COALESCE(INVOICE_ITEMS.BRANCH_ID, FUNDERS.BRANCH_ID)
GROUP BY INVOICE_DETAILS.INVOICE_ID,SOURCE_SYSTEM_ID1,B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION,INVOICE_ITEMS.BRANCH_ID, FUNDERS.BRANCH_ID,INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS
)
SELECT DATA.* FROM (
SELECT MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(INVOICE_ITEMS.BRANCH_ID,-1) || '')'' || ''-'' || INVOICE_DETAILS.INVOICE_ID || ''-'' || ''ALAYACARE'') AS INVOICE_KEY,
		--MD5(''ALAYACARE'' || ''-'' || NVL(INVOICE_ITEMS.CLIENT_ID, -1) || ''-'' || ''ALAYACARE'') AS CLIENT_KEY,
		 MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(INVOICE_ITEMS.BRANCH_ID,-1) || '')'' || ''-'' || NVL(INVOICE_ITEMS.CLIENT_ID::INT, -1) || ''-'' || ''ALAYACARE'') AS CLIENT_KEY,
		INVOICE_DETAILS.INVOICE_ID AS INVOICE_NUMBER,
		TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_INVOICE_NUMBER) AS ALTERNATE_INVOICE_NUMBER,
		INVOICE_ITEMS.BILLING_PERIOD AS PERIOD,
		''Regular'' AS INVOICE_TYPE,
		1 AS NUMBER_OF_CLIENTS,
		UPPER(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(INVOICE_ITEMS.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'')  AS SYSTEM_CODE,-- add branch id from invoiceitems
		9 AS SOURCE_SYSTEM_ID,
		--MD5(''ALAYACARE'' || ''-'' || NVL(EMPLOYEE_GROUPS.GROUP_ID, -1) || ''-'' || ''ALAYACARE'') AS BRANCH_KEY,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(INVOICE_ITEMS.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'' || ''-'' || NVL(INVOICE_ITEMS.GROUP_ID,-1) || ''-'' || ''ALAYACARE'') AS BRANCH_KEY,
		NULL AS PAYOR_CODE,
		NULL AS PAYOR_NAME,
		IFF(SUM(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE) <= 0, FALSE, TRUE) AS INVOICE_OPEN_FLAG,
--		INVOICE_DETAILS.PROPERTIES_INVOICE_INVOICE_DATE AS FIRST_INVOICE_DATE,	--Changed on 03/04/23 as per the discussion with Phil
		INVOICE_DETAILS.PROPERTIES_INVOICE_CREATE_TIME AS FIRST_INVOICE_DATE,
		INVOICE_ITEMS.FINAL_PAYMENT_DATE,
		INVOICE_DETAILS.INVOICE_ID AS FIRST_INVOICE_NUMBER,
		NULL AS BILL_ITERATION,
		NULL AS BILL_REPRESENTATIVE,
		NULL AS BILL_SUPERVISOR,
		NULL AS BILL_MANAGER,
--		CASE LOWER(TRIM(INVOICE_DETAILS.MASTER_INVOICE_STATUS))
--			WHEN ''deleted'' THEN ''Cancelled''
--			WHEN ''draft'' THEN ''Pending''
--			WHEN ''paid'' THEN ''Bill Paid''
--			WHEN ''sent'' THEN ''Billed''
--			WHEN ''void'' THEN ''Cancelled'' END AS INVOICE_STATUS,
--		CASE	-- Added on 20/01/23 as per discusion with Kate Kaplya
--			WHEN  LOWER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''deleted'' THEN ''Cancelled''
--			WHEN  LOWER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''draft'' THEN ''Pending''
--			WHEN  LOWER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''paid'' AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))=0 THEN ''Bill Paid''
--			WHEN  LOWER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''paid'' AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))!=0 THEN ''Partially Paid''
--			WHEN  LOWER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''sent'' THEN ''Billed''
--			WHEN  LOWER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''void'' THEN ''Cancelled'' END AS INVOICE_STATUS,
-- CHANGES MADE ON 21/04/23 FOR RCM INVOICE_STATUS_MAPPING BY PINKAL
		DISM.DERIVED_INVOICE_STATUS AS INVOICE_STATUS,
		NULL AS WRITEOFF_FLAG,
		NULL AS WRITEOFF_REASON,
--		INVOICE_ITEMS.AMOUNT_BILLED,	--CHANGES MADE FOR RCM ON 20/01/23
--		INVOICE_ITEMS.AMOUNT_COLLECTED,
--		INVOICE_ITEMS.AMOUNT_OUTSTANDING,
		SUM(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL) AS AMOUNT_BILLED,
		SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)) AS AMOUNT_COLLECTED,
		SUM(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE) AS AMOUNT_OUTSTANDING,
		''1900-01-01''::DATE AS EFFECTIVE_FROM_DATE,
		''9999-12-31''::DATE AS EFFECTIVE_TO_DATE,
		:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
        :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
        convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	    CURRENT_USER as ETL_INSERTED_BY ,
	    convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	    CURRENT_USER as ETL_LAST_UPDATED_BY,
	    0 as ETL_DELETED_FLAG,
	    0 as ETL_INFERRED_MEMBER_FLAG
	FROM DISC_${var.SF_ENVIRONMENT}.ALAYACARE.INVOICE_DETAILS AS INVOICE_DETAILS
--	LEFT JOIN INVOICE_ITEMS AS INVOICE_ITEMS 	--Changes made on 05/06/23 by Pinkal
	INNER JOIN INVOICE_ITEMS AS INVOICE_ITEMS
		ON INVOICE_ITEMS.INVOICE_ID = INVOICE_DETAILS.INVOICE_ID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.FUNDER AS FUNDERS
		ON FUNDERS.FUNDER_ID = INVOICE_DETAILS.INVOICE_FUNDER_ID -- Do not use Invoice_Details.Branch_ID as it could be null
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.GROUPS AS G
		ON G.GROUP_ID = INVOICE_ITEMS.GROUP_ID
	LEFT JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.BRANCH AS B 
		ON B.BRANCH_ID = COALESCE(INVOICE_ITEMS.BRANCH_ID, FUNDERS.BRANCH_ID)
	LEFT JOIN INVOICE_STATUS_MAPPING ISM ON ISM.INVOICE_ID = INVOICE_DETAILS.INVOICE_ID 
	LEFT JOIN HAH.DIM_INVOICE_STATUS_MAPPING DISM ON DISM.INVOICE_STATUS_KEY = ISM.INVOICE_STATUS_KEY
	GROUP BY 
	B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION,
	INVOICE_ITEMS.BRANCH_ID,
	INVOICE_DETAILS.INVOICE_ID,
	INVOICE_ITEMS.CLIENT_ID,
	INVOICE_ITEMS.BILLING_PERIOD,
	INVOICE_DETAILS.PROPERTIES_INVOICE_INVOICE_NUMBER,
	INVOICE_TYPE,
	NUMBER_OF_CLIENTS,
	FUNDERS.BRANCH_ID, 
	SOURCE_SYSTEM_ID,
	INVOICE_ITEMS.GROUP_ID,
	INVOICE_DETAILS.PROPERTIES_INVOICE_CREATE_TIME,
	INVOICE_ITEMS.FINAL_PAYMENT_DATE,
--	INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS
	DISM.DERIVED_INVOICE_STATUS
	) DATA
INNER JOIN DISC_${var.SF_ENVIRONMENT}.ALAYACARE.CONFIGURATION CONFIG 
	ON UPPER(CONFIG.SYSTEM_CODE) = UPPER(DATA.SYSTEM_CODE)
	AND CONFIG.CONFIGURATION_ACTIVE=TRUE
	AND CONFIG.SYSTEM_CODE IS NOT NULL;
SELECT CONCAT (''MESSAGE : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
	RETURN return_result;
    END;
    
 EOT
}

