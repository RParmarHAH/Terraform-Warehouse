resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_CLEARCARE_DIM_INVOICE" {
	name ="MERGE_STAGE_CLEARCARE_DIM_INVOICE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN
    MERGE INTO HAH.DIM_INVOICE TGT 
	USING STAGE.CLEARCARE_DIM_INVOICE STG 
	ON TGT.INVOICE_KEY = STG.INVOICE_KEY
	WHEN MATCHED THEN 
	UPDATE SET 
	    TGT.INVOICE_KEY=STG.INVOICE_KEY
,TGT.CLIENT_KEY=STG.CLIENT_KEY
,TGT.INVOICE_NUMBER=STG.INVOICE_NUMBER
,TGT.ALTERNATE_INVOICE_NUMBER=STG.ALTERNATE_INVOICE_NUMBER
,TGT.PERIOD=STG.PERIOD
,TGT.INVOICE_TYPE=STG.INVOICE_TYPE
,TGT.NUMBER_OF_CLIENTS=STG.NUMBER_OF_CLIENTS
,TGT.SYSTEM_CODE=STG.SYSTEM_CODE
,TGT.SOURCE_SYSTEM_ID=STG.SOURCE_SYSTEM_ID
,TGT.BRANCH_KEY=STG.BRANCH_KEY
,TGT.PAYOR_CODE=STG.PAYOR_CODE
,TGT.PAYOR_NAME=STG.PAYOR_NAME
,TGT.INVOICE_OPEN_FLAG=STG.INVOICE_OPEN_FLAG
,TGT.FIRST_INVOICE_DATE=STG.FIRST_INVOICE_DATE
,TGT.FINAL_PAYMENT_DATE=STG.FINAL_PAYMENT_DATE
,TGT.FIRST_INVOICE_NUMBER=STG.FIRST_INVOICE_NUMBER
,TGT.BILL_ITERATION=STG.BILL_ITERATION
,TGT.BILL_REPRESENTATIVE=STG.BILL_REPRESENTATIVE
,TGT.BILL_SUPERVISOR=STG.BILL_SUPERVISOR
,TGT.BILL_MANAGER=STG.BILL_MANAGER
,TGT.INVOICE_STATUS=STG.INVOICE_STATUS
,TGT.WRITEOFF_FLAG=STG.WRITEOFF_FLAG
,TGT.WRITEOFF_REASON=STG.WRITEOFF_REASON
,TGT.AMOUNT_BILLED=STG.AMOUNT_BILLED
,TGT.AMOUNT_COLLECTED=STG.AMOUNT_COLLECTED
,TGT.AMOUNT_OUTSTANDING=STG.AMOUNT_OUTSTANDING
,TGT.EFFECTIVE_FROM_DATE=STG.EFFECTIVE_FROM_DATE
,TGT.EFFECTIVE_TO_DATE=STG.EFFECTIVE_TO_DATE
,TGT.ETL_TASK_KEY=STG.ETL_TASK_KEY
,TGT.ETL_INSERTED_TASK_KEY=STG.ETL_INSERTED_TASK_KEY
,TGT.ETL_INSERTED_DATE=STG.ETL_INSERTED_DATE
,TGT.ETL_INSERTED_BY=STG.ETL_INSERTED_BY
,TGT.ETL_LAST_UPDATED_DATE=STG.ETL_LAST_UPDATED_DATE
,TGT.ETL_LAST_UPDATED_BY=STG.ETL_LAST_UPDATED_BY
,TGT.ETL_DELETED_FLAG=STG.ETL_DELETED_FLAG
,TGT.ETL_INFERRED_MEMBER_FLAG=STG.ETL_INFERRED_MEMBER_FLAG      
	WHEN NOT MATCHED THEN 
	INSERT ( 
	   INVOICE_KEY
,CLIENT_KEY
,INVOICE_NUMBER
,ALTERNATE_INVOICE_NUMBER
,PERIOD
,INVOICE_TYPE
,NUMBER_OF_CLIENTS
,SYSTEM_CODE
,SOURCE_SYSTEM_ID
,BRANCH_KEY
,PAYOR_CODE
,PAYOR_NAME
,INVOICE_OPEN_FLAG
,FIRST_INVOICE_DATE
,FINAL_PAYMENT_DATE
,FIRST_INVOICE_NUMBER
,BILL_ITERATION
,BILL_REPRESENTATIVE
,BILL_SUPERVISOR
,BILL_MANAGER
,INVOICE_STATUS
,WRITEOFF_FLAG
,WRITEOFF_REASON
,AMOUNT_BILLED
,AMOUNT_COLLECTED
,AMOUNT_OUTSTANDING
,EFFECTIVE_FROM_DATE
,EFFECTIVE_TO_DATE
,ETL_TASK_KEY
,ETL_INSERTED_TASK_KEY
,ETL_INSERTED_DATE
,ETL_INSERTED_BY
,ETL_LAST_UPDATED_DATE
,ETL_LAST_UPDATED_BY
,ETL_DELETED_FLAG
,ETL_INFERRED_MEMBER_FLAG
	) 
	VALUES (
	   STG.INVOICE_KEY
,STG.CLIENT_KEY
,STG.INVOICE_NUMBER
,STG.ALTERNATE_INVOICE_NUMBER
,STG.PERIOD
,STG.INVOICE_TYPE
,STG.NUMBER_OF_CLIENTS
,STG.SYSTEM_CODE
,STG.SOURCE_SYSTEM_ID
,STG.BRANCH_KEY
,STG.PAYOR_CODE
,STG.PAYOR_NAME
,STG.INVOICE_OPEN_FLAG
,STG.FIRST_INVOICE_DATE
,STG.FINAL_PAYMENT_DATE
,STG.FIRST_INVOICE_NUMBER
,STG.BILL_ITERATION
,STG.BILL_REPRESENTATIVE
,STG.BILL_SUPERVISOR
,STG.BILL_MANAGER
,STG.INVOICE_STATUS
,STG.WRITEOFF_FLAG
,STG.WRITEOFF_REASON
,STG.AMOUNT_BILLED
,STG.AMOUNT_COLLECTED
,STG.AMOUNT_OUTSTANDING
,STG.EFFECTIVE_FROM_DATE
,STG.EFFECTIVE_TO_DATE
,STG.ETL_TASK_KEY
,STG.ETL_INSERTED_TASK_KEY
,STG.ETL_INSERTED_DATE
,STG.ETL_INSERTED_BY
,STG.ETL_LAST_UPDATED_DATE
,STG.ETL_LAST_UPDATED_BY
,STG.ETL_DELETED_FLAG
,STG.ETL_INFERRED_MEMBER_FLAG
);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
    
 EOT
}

