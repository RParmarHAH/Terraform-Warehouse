resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_OPENSYSTEMS_DIM_BRANCH" {
	name ="MERGE_STAGE_OPENSYSTEMS_DIM_BRANCH"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN 
MERGE INTO DW_${var.SF_ENVIRONMENT}.HAH.DIM_BRANCH AS tgt 
USING DW_${var.SF_ENVIRONMENT}.STAGE.OPENSYSTEMS_DIM_BRANCH  AS src
ON (tgt.BRANCH_KEY=src.BRANCH_KEY)
WHEN MATCHED THEN UPDATE SET
	tgt.BRANCH_NAME=src.BRANCH_NAME,
	tgt.SYSTEM_CODE=src.SYSTEM_CODE,
	tgt.SOURCE_SYSTEM_ID=src.SOURCE_SYSTEM_ID,
	tgt.SOURCE_SYSTEM_TYPE=src.SOURCE_SYSTEM_TYPE,
	tgt.OFFICE_NUMBER=src.OFFICE_NUMBER,
	tgt.OFFICE_CODE=src.OFFICE_CODE,
	tgt.OFFICE_NAME=src.OFFICE_NAME,
	tgt.OFFICE_NAME_ALT=src.OFFICE_NAME_ALT,
	tgt.DEPARTMENT_NAME=src.DEPARTMENT_NAME,
	tgt.BRANCH_SERVICE_LINE=src.BRANCH_SERVICE_LINE,
	tgt.PARENT_FLAG=src.PARENT_FLAG,
	tgt.PARENT_BRANCH_KEY=src.PARENT_BRANCH_KEY,
	tgt.PARENT_OFFICE_NUMBER=src.PARENT_OFFICE_NUMBER,
	tgt.PARENT_OFFICE_CODE=src.PARENT_OFFICE_CODE,
	tgt.PARENT_BRANCH_NAME=src.PARENT_BRANCH_NAME,
	tgt.OFFICE_ADDRESS1=src.OFFICE_ADDRESS1,
	tgt.OFFICE_ADDRESS2=src.OFFICE_ADDRESS2,
	tgt.OFFICE_CITY=src.OFFICE_CITY,
	tgt.OFFICE_STATE_CODE=src.OFFICE_STATE_CODE,
	tgt.OFFICE_ZIP=src.OFFICE_ZIP,
	tgt.OFFICE_PHONE=src.OFFICE_PHONE,
	tgt.OFFICE_TOLL_FREE_PHONE=src.OFFICE_TOLL_FREE_PHONE,
	tgt.OFFICE_FAX=src.OFFICE_FAX,
	tgt.DETAILED_OFFICE_NAME=src.DETAILED_OFFICE_NAME,
	tgt.REGION_NUMBER=src.REGION_NUMBER,
	tgt.REGION_NAME=src.REGION_NAME,
	tgt.REGION_MANAGER=src.REGION_MANAGER,
	tgt.REGION_MANAGER_EMPLOYEE_KEY=src.REGION_MANAGER_EMPLOYEE_KEY,
	tgt.SUBREGION_NAME=src.SUBREGION_NAME,
	tgt.PRIMARY_BRANCH_MANAGER_NAME=src.PRIMARY_BRANCH_MANAGER_NAME, 
	tgt.PRIMARY_BRANCH_EMAIL=src.PRIMARY_BRANCH_EMAIL,
	tgt.PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY=src.PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	tgt.SECONDARY_BRANCH_MANAGER_NAME=src.SECONDARY_BRANCH_MANAGER_NAME,
	tgt.SECONDARY_BRANCH_EMAIL=src.SECONDARY_BRANCH_EMAIL,
	tgt.SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY=src.SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	tgt.RISKCONNECT_NODE_KEY=src.RISKCONNECT_NODE_KEY,
	tgt.RISKCONNECT_NAME=src.RISKCONNECT_NAME,
	tgt.HR_OFFICE_NUMBER=src.HR_OFFICE_NUMBER,
	tgt.HR_OFFICE_NAME=src.HR_OFFICE_NAME,
	tgt.ACTIVE_FLAG=src.ACTIVE_FLAG,
	tgt.EFFECTIVE_FROM_DATE=src.EFFECTIVE_FROM_DATE,
	tgt.EFFECTIVE_TO_DATE=src.EFFECTIVE_TO_DATE,
	tgt.ETL_TASK_KEY=src.ETL_TASK_KEY,
	tgt.ETL_INSERTED_TASK_KEY=src.ETL_INSERTED_TASK_KEY,
	tgt.ETL_INSERTED_DATE=src.ETL_INSERTED_DATE,
	tgt.ETL_INSERTED_BY=src.ETL_INSERTED_BY,
	tgt.ETL_LAST_UPDATED_DATE=src.ETL_LAST_UPDATED_DATE,
	tgt.ETL_LAST_UPDATED_BY=src.ETL_LAST_UPDATED_BY,
	tgt.ETL_DELETED_FLAG=src.ETL_DELETED_FLAG,
	tgt.ETL_INFERRED_MEMBER_FLAG=src.ETL_INFERRED_MEMBER_FLAG
WHEN NOT MATCHED
THEN INSERT (
	 BRANCH_KEY, 
	 BRANCH_NAME,
	 SYSTEM_CODE,
	 SOURCE_SYSTEM_ID,
	 SOURCE_SYSTEM_TYPE,
	 OFFICE_NUMBER,
	 OFFICE_CODE,
	 OFFICE_NAME,
	 OFFICE_NAME_ALT,
	 DEPARTMENT_NAME,
	 BRANCH_SERVICE_LINE,
	 PARENT_FLAG,
	 PARENT_BRANCH_KEY,
	 PARENT_OFFICE_NUMBER,
	 PARENT_OFFICE_CODE,
	 PARENT_BRANCH_NAME,
	 OFFICE_ADDRESS1,
	 OFFICE_ADDRESS2,
	 OFFICE_CITY,
	 OFFICE_STATE_CODE,
	 OFFICE_ZIP,
	 OFFICE_PHONE,
	 OFFICE_TOLL_FREE_PHONE,
	 OFFICE_FAX,
	 DETAILED_OFFICE_NAME,
	 REGION_NUMBER,
	 REGION_NAME,
	 REGION_MANAGER,
	 REGION_MANAGER_EMPLOYEE_KEY,
	 SUBREGION_NAME,
	 PRIMARY_BRANCH_MANAGER_NAME,
	 PRIMARY_BRANCH_EMAIL,
	 PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	 SECONDARY_BRANCH_MANAGER_NAME,
	 SECONDARY_BRANCH_EMAIL,
	 SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	 RISKCONNECT_NODE_KEY,
	 RISKCONNECT_NAME,
	 HR_OFFICE_NUMBER,
	 HR_OFFICE_NAME,
	 ACTIVE_FLAG,
	 EFFECTIVE_FROM_DATE,
	 EFFECTIVE_TO_DATE,
	 ETL_TASK_KEY,
	 ETL_INSERTED_TASK_KEY,
	 ETL_INSERTED_DATE,
	 ETL_INSERTED_BY,
	 ETL_LAST_UPDATED_DATE,
	 ETL_LAST_UPDATED_BY,
	 ETL_DELETED_FLAG,
	 ETL_INFERRED_MEMBER_FLAG)
VALUES (
	 src.BRANCH_KEY,
	 src.BRANCH_NAME,
	 src.SYSTEM_CODE,
	 src.SOURCE_SYSTEM_ID,
	 src.SOURCE_SYSTEM_TYPE,
	 src.OFFICE_NUMBER,
	 src.OFFICE_CODE,
	 src.OFFICE_NAME,
	 src.OFFICE_NAME_ALT,
	 src.DEPARTMENT_NAME,
	 src.BRANCH_SERVICE_LINE,
	 src.PARENT_FLAG,
	 src.PARENT_BRANCH_KEY,
	 src.PARENT_OFFICE_NUMBER,
	 src.PARENT_OFFICE_CODE,
	 src.PARENT_BRANCH_NAME,
	 src.OFFICE_ADDRESS1,
	 src.OFFICE_ADDRESS2,
	 src.OFFICE_CITY,
	 src.OFFICE_STATE_CODE,
	 src.OFFICE_ZIP,
	 src.OFFICE_PHONE,
	 src.OFFICE_TOLL_FREE_PHONE,
	 src.OFFICE_FAX,
	 src.DETAILED_OFFICE_NAME,
	 src.REGION_NUMBER,
	 src.REGION_NAME,
	 src.REGION_MANAGER,
	 src.REGION_MANAGER_EMPLOYEE_KEY,
	 src.SUBREGION_NAME,
	 src.PRIMARY_BRANCH_MANAGER_NAME,
	 src.PRIMARY_BRANCH_EMAIL,
	 src.PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	 src.SECONDARY_BRANCH_MANAGER_NAME,
	 src.SECONDARY_BRANCH_EMAIL,
	 src.SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	 src.RISKCONNECT_NODE_KEY,
	 src.RISKCONNECT_NAME,
	 src.HR_OFFICE_NUMBER,
	 src.HR_OFFICE_NAME,
	 src.ACTIVE_FLAG,
	 src.EFFECTIVE_FROM_DATE,
	 src.EFFECTIVE_TO_DATE,
	 src.ETL_TASK_KEY,
	 src.ETL_INSERTED_TASK_KEY,
	 src.ETL_INSERTED_DATE,
	 src.ETL_INSERTED_BY,
	 src.ETL_LAST_UPDATED_DATE,
	 src.ETL_LAST_UPDATED_BY,
	 src.ETL_DELETED_FLAG,
	 src.ETL_INFERRED_MEMBER_FLAG);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
end;

 EOT
}

