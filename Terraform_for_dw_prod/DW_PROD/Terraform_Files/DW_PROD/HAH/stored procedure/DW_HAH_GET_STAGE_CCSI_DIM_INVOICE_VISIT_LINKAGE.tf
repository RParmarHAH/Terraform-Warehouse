resource "snowflake_procedure" "DW_HAH_GET_STAGE_CCSI_DIM_INVOICE_VISIT_LINKAGE" {
	name ="GET_STAGE_CCSI_DIM_INVOICE_VISIT_LINKAGE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  CCSI_DIM_INVOICE_VISIT_LINKAGE
--
-- DEVELOPMENT LOG:A
-- DATE         AUTHOR              NOTES:
-- --------     ------------------- -----------------------------------------------------------------------------------------------
-- 06/12/23		Preeti Sharma		Initial Development
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.CCSI_DIM_INVOICE_VISIT_LINKAGE
WITH RAWVRFP AS  --VISIT DATA
(
    SELECT DISTINCT RECORD_NUMBER
                    ,CLIENT_ID
                    ,AREA_2
                    ,DAY_OF_SERVICE
                    ,DATEADD(DAY,(IFNULL(DAY_OF_SERVICE,1) - 1),DATE_TRUNC(''MONTH'',TRY_TO_DATE(PERIOD_DATE, ''MMDDYY''))) AS "PERIOD_DATE" --CHANGE
                    ,SERVICE_TYPE
            FROM DISC_${var.SF_ENVIRONMENT}.CCSI.RAWVRFP
            WHERE PERIOD_DATE IS NOT NULL
                AND TRY_TO_DATE(PERIOD_DATE, ''MMDDYY'') > ''2015-12-31''
                AND DAY_OF_SERVICE  IS NOT NULL
                AND CLIENT_ID IS NOT NULL
)
 ,OTHERINV AS
(
    SELECT DISTINCT TRY_TO_DATE(DATE_OF_SERVICE, ''MM/YYYY'') AS "DATE_OF_SERVICE"
                    ,CLIENT_ID
                    ,AREA 
                    ,TYPE_OF_SERVICE AS "SERVICE_TYPE"
                FROM DISC_${var.SF_ENVIRONMENT}.CCSI.OTHERINV
                GROUP BY CLIENT_ID,AREA,TYPE_OF_SERVICE 
                ,TRY_TO_DATE(DATE_OF_SERVICE, ''MM/YYYY'')
)
,MAXOTHERINV AS
(
    SELECT DISTINCT MAX(TRY_TO_DATE(DATE_OF_SERVICE, ''MM/YYYY'')) AS "DATE_OF_SERVICE"
                    ,CLIENT_ID
                    ,AREA 
                    ,TYPE_OF_SERVICE AS "SERVICE_TYPE"
                FROM DISC_${var.SF_ENVIRONMENT}.CCSI.OTHERINV
                GROUP BY CLIENT_ID,AREA,TYPE_OF_SERVICE
                ,TRY_TO_DATE(DATE_OF_SERVICE, ''MM/YYYY'')
)
, MCOINVOICE AS
(
    SELECT DISTINCT TRY_TO_DATE(SERVICE_MONTH, ''YYYY/MM'') AS "DATE_OF_SERVICE"
                    ,CLIENT_ID
                    ,UPPER(CCSI_OFFICE) AS "AREA"
                    ,SERVICE_TYPE
            FROM DISC_${var.SF_ENVIRONMENT}.CCSI.MCOINV
            GROUP BY CLIENT_ID,UPPER(CCSI_OFFICE)
                    ,SERVICE_TYPE
                    ,TRY_TO_DATE(SERVICE_MONTH, ''YYYY/MM'')
)   
, MAXMCOINVOICE AS
(
    SELECT DISTINCT MAX(TRY_TO_DATE(SERVICE_MONTH, ''YYYY/MM'')) AS "DATE_OF_SERVICE"
                    ,CLIENT_ID
                    ,UPPER(CCSI_OFFICE) AS "AREA"
                    ,SERVICE_TYPE
            FROM DISC_${var.SF_ENVIRONMENT}.CCSI.MCOINV
            GROUP BY CLIENT_ID,UPPER(CCSI_OFFICE),SERVICE_TYPE
            ,TRY_TO_DATE(SERVICE_MONTH, ''YYYY/MM'')
)   
, RAWVRFP_OTHERINV AS --DATA RELATED OTHER INVOICE
(
    SELECT * FROM RAWVRFP WHERE try_to_numeric(SERVICE_TYPE) IS NOT NULL --NUMERIC OTHER INV
)
, RAWVRFP_MCOINV AS --DATA RELATED MCO INVOICE
(
    SELECT * FROM RAWVRFP WHERE try_to_numeric(SERVICE_TYPE) IS NULL --NON NUMERIC FOR MCO INV
)
SELECT 
REVENUE_KEY
,VISIT_KEY
,VISIT_ID
,SERVICE_DATE
,SYSTEM_CODE
,SOURCE_SYSTEM_ID
,:STR_ETL_TASK_KEY AS ETL_TASK_KEY
,:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
,Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
,CURRENT_USER AS ETL_INSERTED_BY
,Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
,CURRENT_USER AS ETL_LAST_UPDATED_BY
, 0 AS ETL_DELETED_FLAG	
FROM 
(
WITH RESULT AS
(
SELECT DISTINCT
		MD5(NVL(R.CLIENT_ID,''E'')::STRING || ''-'' || NVL(R.PERIOD_DATE::STRING,''E'')::STRING || ''-'' || NVL(R.DAY_OF_SERVICE,''E'')::STRING || ''-'' || NVL(R.RECORD_NUMBER,''E'')::STRING || ''-'' || ''CCSI'') AS REVENUE_KEY
		,MD5(NVL(R.CLIENT_ID,''E'')::STRING || ''-'' || NVL(R.PERIOD_DATE::STRING,''E'')::STRING || ''-'' || NVL(R.DAY_OF_SERVICE,''E'')::STRING || ''-'' || NVL(R.RECORD_NUMBER,''E'')::STRING) AS VISIT_KEY
        ,R.CLIENT_ID AS VISIT_ID
        ,R.PERIOD_DATE AS "SERVICE_DATE"    
        ,''CCSI'' AS SYSTEM_CODE
        ,8 AS "SOURCE_SYSTEM_ID"
		,-1 AS ETL_TASK_KEY
		,-1 AS ETL_INSERTED_TASK_KEY
      	,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
      	,CURRENT_USER AS ETL_INSERTED_BY 
      	,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
      	,CURRENT_USER AS ETL_LAST_UPDATED_BY
	    ,0 AS ETL_DELETED_FLAG	
    FROM RAWVRFP_MCOINV R 
    LEFT JOIN MCOINVOICE O  
        ON R.CLIENT_ID = O.CLIENT_ID
        AND R.AREA_2 = O.AREA 
        AND  (MONTH(O.DATE_OF_SERVICE) = MONTH(R.PERIOD_DATE) AND YEAR(O.DATE_OF_SERVICE) = YEAR(R.PERIOD_DATE))
        AND R.SERVICE_TYPE = O.SERVICE_TYPE
    LEFT JOIN MAXMCOINVOICE O1  
        ON R.CLIENT_ID = O1.CLIENT_ID
        AND R.AREA_2 = O1.AREA 
        AND  (MONTH(O1.DATE_OF_SERVICE) = MONTH(R.PERIOD_DATE)-1 AND YEAR(O1.DATE_OF_SERVICE) = YEAR(R.PERIOD_DATE))
        AND R.SERVICE_TYPE = O1.SERVICE_TYPE
    UNION   
SELECT DISTINCT
	MD5(NVL(R.CLIENT_ID,''E'')::STRING || ''-'' || NVL(R.PERIOD_DATE::STRING,''E'')::STRING || ''-'' || NVL(R.DAY_OF_SERVICE,''E'')::STRING || ''-'' || NVL(R.RECORD_NUMBER,''E'')::STRING || ''-'' || ''CCSI'') AS REVENUE_KEY
	,MD5(NVL(R.CLIENT_ID,''E'')::STRING || ''-'' || NVL(R.PERIOD_DATE::STRING,''E'')::STRING || ''-'' || NVL(R.DAY_OF_SERVICE,''E'')::STRING || ''-'' || NVL(R.RECORD_NUMBER,''E'')::STRING) AS VISIT_KEY
	,R.CLIENT_ID AS VISIT_ID
	,R.PERIOD_DATE AS "SERVICE_DATE"
	,''CCSI'' AS SYSTEM_CODE
	,8 AS "SOURCE_SYSTEM_ID"
	,-1 AS ETL_TASK_KEY
	,-1 AS ETL_INSERTED_TASK_KEY
	,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
	,CURRENT_USER AS ETL_INSERTED_BY 
	,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
	,CURRENT_USER AS ETL_LAST_UPDATED_BY
	,0 AS ETL_DELETED_FLAG	
    FROM RAWVRFP_OTHERINV R 
    LEFT JOIN OTHERINV O  
        ON R.CLIENT_ID = O.CLIENT_ID
        AND R.AREA_2 = O.AREA 
        AND  (MONTH(O.DATE_OF_SERVICE) = MONTH(R.PERIOD_DATE) AND YEAR(O.DATE_OF_SERVICE) = YEAR(R.PERIOD_DATE))
        AND R.SERVICE_TYPE = O.SERVICE_TYPE
    LEFT JOIN MAXOTHERINV O1  
        ON R.CLIENT_ID = O1.CLIENT_ID
        AND R.AREA_2 = O1.AREA 
        AND  (MONTH(O1.DATE_OF_SERVICE) = MONTH(R.PERIOD_DATE)-1 AND YEAR(O1.DATE_OF_SERVICE) = YEAR(R.PERIOD_DATE))
        AND R.SERVICE_TYPE = O1.SERVICE_TYPE
    )
        SELECT *
        ,ROW_NUMBER() OVER (PARTITION BY REVENUE_KEY ORDER BY REVENUE_KEY DESC) AS RN  
        FROM RESULT 
        )
        WHERE RN = 1
; 

RETURN ''SUCCESS'';
END;

 EOT
}

