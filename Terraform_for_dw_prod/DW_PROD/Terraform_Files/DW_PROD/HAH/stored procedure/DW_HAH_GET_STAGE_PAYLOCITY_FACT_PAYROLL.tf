resource "snowflake_procedure" "DW_HAH_GET_STAGE_PAYLOCITY_FACT_PAYROLL" {
	name ="GET_STAGE_PAYLOCITY_FACT_PAYROLL"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
	
--*****************************************************************************************************************************
-- NAME: PAYLOCITY_FACT_PAYROLL
--
-- PURPOSE: Creates one row per PAYROLL according to Paylocity
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    	----------------	-----------------------------------------------------------------------------------------
-- 05/19/23		Aditya Shukla		Excluded Adaptive Hospice Inc (33978)
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.PAYLOCITY_FACT_PAYROLL

WITH EMPLOYEES AS (
	SELECT DISTINCT 
		MASTER_ID, EMPLOYEEID, COMPANYID, DEPARTMENTPOSITION_COSTCENTER1
	FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.PAYLOCITY.EMPLOYEE_MASTER_LIST
	UNION 
	SELECT DISTINCT 
		MASTER_ID, EMPLOYEEID, COMPANYID, DEPARTMENTPOSITION_COSTCENTER1
	FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.PAYLOCITY.EMPLOYEE_MATCH_LIST 
	WHERE EMPLOYEEID NOT IN (SELECT DISTINCT EMPLOYEEID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.PAYLOCITY.EMPLOYEE_MASTER_LIST)
)
SELECT DISTINCT 
	MD5(PSS.TRANSACTIONNUMBER || COALESCE(TRIM(EMP.MASTER_ID), TRIM(PSS.EMPLOYEEID::VARCHAR)) || PSS.COMPANYID ||''PAYLOCITY'') AS PAYROLL_KEY,
	PSS.CHECKDATE::DATE AS REPORT_DATE,
	MD5(PSS.COMPANYID || ''-'' || TRIM(coalesce(EMP.MASTER_ID, PSS.EMPLOYEEID::VARCHAR)) || ''-'' || ''PAYLOCITY'')  AS EMPLOYEE_KEY,
	COALESCE(BRANCH.BRANCH_KEY,(PSS.COMPANYID || ''-'' || ''Unknown'' || ''-'' ||  ''PAYLOCITY'')) AS BRANCH_KEY,
	10 AS SOURCE_SYSTEM_ID,
	PSS.CHECKDATE::DATE AS PAYROLL_DATE,
	COALESCE(EMP.EMPLOYEEID, PSS.EMPLOYEEID)::NUMBER AS EMPLOYEE_ID,
	COALESCE(BRANCH.BRANCH_NAME,''UNKONWN'') AS BRANCH_NAME,
	PSS.COMPANYID AS SYSTEM_CODE,
	PSS.BEGINDATE::DATE AS PAY_PERIOD_START_DATE,
	PSS.ENDDATE::DATE AS PAY_PERIOD_END_DATE,
	PSS.CHECKNUMBER AS CHECKNUMBER,
	PSS.HOURS AS PAY_HOURS,
	PSS.REGULARHOURS AS SERVICE_HOURS,
	PSS.OVERTIMEHOURS AS OVERTIME_HOURS,
	NULL AS NON_SERVICE_UNITS,
	NULL SICK_HOURS,
	NULL AS VACATION_HOURS,
	DETAILS.PRIMARYPAYRATE_BASERATE AS PAY_RATE,
	ROUND(PSS.OVERTIMEDOLLARS/ NULLIF(PSS.OVERTIMEHOURS, 0), 2) AS OVERTIME_RATE,
	PSS.GROSSPAY AS GROSS_PAY_AMOUNT,
	NULL AS SERVICE_PAY_AMOUNT,
	PSS.OVERTIMEDOLLARS AS OVERTIME_PAY_AMOUNT,
	NULL NON_SERVICE_PAY_AMOUNT,
	NULL TAX_AMOUNT,
	PSS.NETPAY AS NET_PAY_AMOUNT,
	NULL AS OTHER_DEDUCTIONS_AMOUNT,
	NULL AS UNION_DUES_AMOUNT,
	NULL AS REINBURSMENT_AMOUNT,
	-1 AS ETL_TASK_KEY,
    -1 AS ETL_INSERTED_TASK_KEY,  
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
CURRENT_USER as ETL_INSERTED_BY ,
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE,
CURRENT_USER as ETL_LAST_UPDATED_BY,
0 as ETL_DELETED_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.PAYLOCITY.PAY_STATEMENT_SUMMARY PSS
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.PAYLOCITY.EMPLOYEE_DETAILS DETAILS
	ON TRIM(DETAILS.EMPLOYEEID) = TRIM(PSS.EMPLOYEEID) AND TRIM(DETAILS.COMPANYID) = TRIM(PSS.COMPANYID)
LEFT JOIN EMPLOYEES EMP
	ON EMP.EMPLOYEEID = PSS.EMPLOYEEID
	AND EMP.COMPANYID = PSS.COMPANYID
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_BRANCH BRANCH ON COALESCE(EMP.COMPANYID, DETAILS.COMPANYID) = BRANCH.SYSTEM_CODE AND TRIM(COALESCE(EMP.DEPARTMENTPOSITION_COSTCENTER1, DETAILS.DEPARTMENTPOSITION_COSTCENTER1)) = BRANCH.OFFICE_CODE
WHERE PSS.COMPANYID NOT IN (''33978'');

END;

 EOT
}

