resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_GENERAL_DIM_SURVEY" {
	name ="MERGE_STAGE_GENERAL_DIM_SURVEY"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
	RETURN_RESULT VARCHAR;
BEGIN
MERGE INTO HAH.DIM_SURVEY DS
USING STAGE.DIM_SURVEY STAGE 
ON DS.SURVEY_KEY = STAGE.SURVEY_KEY
WHEN MATCHED THEN 
UPDATE SET 
    DS.SURVEY_ID	=STAGE.SURVEY_ID,
	DS.SURVEY_NAME	=STAGE.SURVEY_NAME,
	DS.ETL_TASK_KEY	=STAGE.ETL_TASK_KEY,
	DS.ETL_INSERTED_TASK_KEY	=STAGE.ETL_INSERTED_TASK_KEY,
	DS.ETL_INSERTED_DATE	=STAGE.ETL_INSERTED_DATE,
	DS.ETL_INSERTED_BY	=STAGE.ETL_INSERTED_BY,
	DS.ETL_LAST_UPDATED_DATE	=STAGE.ETL_LAST_UPDATED_DATE,
	DS.ETL_LAST_UPDATED_BY	=STAGE.ETL_LAST_UPDATED_BY,
	DS.ETL_DELETED_FLAG	=STAGE.ETL_DELETED_FLAG
WHEN NOT MATCHED THEN 
INSERT ( 
    SURVEY_KEY,
	SURVEY_ID,
	SURVEY_NAME,
	ACTIVE,
	CLIENT_EMPLOYEE_INDICATOR,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
) 
VALUES (
	STAGE.SURVEY_KEY,
    STAGE.SURVEY_ID,
	STAGE.SURVEY_NAME,
	0,
	STAGE.CLIENT_EMPLOYEE_INDICATOR,
	STAGE.ETL_TASK_KEY,
	STAGE.ETL_INSERTED_TASK_KEY,
	STAGE.ETL_INSERTED_DATE,
	STAGE.ETL_INSERTED_BY,
	STAGE.ETL_LAST_UPDATED_DATE,
	STAGE.ETL_LAST_UPDATED_BY,
	STAGE.ETL_DELETED_FLAG
);

SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Inserted & '' ,"number of rows updated",'' Rows Updated.'') into :RETURN_RESULT FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return RETURN_RESULT;
END;   

 EOT
}

