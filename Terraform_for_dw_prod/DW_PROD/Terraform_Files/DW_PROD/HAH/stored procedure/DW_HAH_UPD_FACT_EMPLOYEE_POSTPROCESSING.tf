resource "snowflake_procedure" "DW_HAH_UPD_FACT_EMPLOYEE_POSTPROCESSING" {
	name ="UPD_FACT_EMPLOYEE_POSTPROCESSING"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

BEGIN
--*****************************************************************************************************************************
-- NAME:  UPDATE_EMPLOYEE_KEY
--
-- PURPOSE: Update UPDATE_EMPLOYEE_KEY in FACT_VISIT ,FACT_REVENUE Tables 
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 04/28/2023	Darshan Gosai 			Initial development
--*****************************************************************************************************************************


------Update EMPLOYEE_KEY in FACT_REVENUE table When EMPLOYEE_KEY in DIM_EMPLOYEE get change

UPDATE DW_${var.SF_ENVIRONMENT}.HAH.FACT_REVENUE R FROM   
(
SELECT
REVENUE.EMPLOYEE_KEY AS EMPLOYEE_KEY,
REVENUE.SYSTEM_CODE  AS SYSTEM_CODE,
EMP_MATCH.MASTER_EMPLOYEE_KEY AS MASTER_EMPLOYEE_KEY,
EMP_MATCH.LATEST_EMPLOYEE_NUMBER AS LATEST_EMPLOYEE_NUMBER
from
DISC_DEDUPE_${var.SF_ENVIRONMENT}.PUBLIC.VW_EMPLOYEE_MATCH_LIST EMP_MATCH
JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_EMPLOYEE EMP ON EMP.EMPLOYEE_KEY = EMP_MATCH.MASTER_EMPLOYEE_KEY
JOIN DW_${var.SF_ENVIRONMENT}.HAH.FACT_REVENUE REVENUE ON REVENUE.EMPLOYEE_KEY = EMP_MATCH.EMPLOYEE_KEY
AND REVENUE.EMPLOYEE_KEY <> EMP_MATCH.MASTER_EMPLOYEE_KEY
GROUP BY 1,2,3,4
)X
SET 
R.EMPLOYEE_KEY = X.MASTER_EMPLOYEE_KEY,
R.EMPLOYEE_ID = X.LATEST_EMPLOYEE_NUMBER
WHERE
R.EMPLOYEE_KEY = X.EMPLOYEE_KEY 
AND R.SYSTEM_CODE = X.SYSTEM_CODE ;

---Update EMPLOYEE_KEY in FACT_VISIT table When EMPLOYEE_KEY in DIM_EMPLOYEE get change 


UPDATE DW_${var.SF_ENVIRONMENT}.HAH.FACT_VISIT V FROM  
(
SELECT
VISIT.EMPLOYEE_KEY AS EMPLOYEE_KEY,
VISIT.SYSTEM_CODE  AS SYSTEM_CODE,
EMP_MATCH.MASTER_EMPLOYEE_KEY AS MASTER_EMPLOYEE_KEY,
EMP_MATCH.LATEST_EMPLOYEE_NUMBER AS LATEST_EMPLOYEE_NUMBER
FROM
DISC_DEDUPE_${var.SF_ENVIRONMENT}.PUBLIC.VW_EMPLOYEE_MATCH_LIST EMP_MATCH
JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_EMPLOYEE EMP ON EMP.EMPLOYEE_KEY = EMP_MATCH.MASTER_EMPLOYEE_KEY
JOIN DW_${var.SF_ENVIRONMENT}.HAH.FACT_VISIT VISIT ON VISIT.EMPLOYEE_KEY = EMP_MATCH.EMPLOYEE_KEY
AND VISIT.EMPLOYEE_KEY <> EMP_MATCH.MASTER_EMPLOYEE_KEY
GROUP BY 1,2,3,4)Y
SET 
V.EMPLOYEE_KEY = Y.MASTER_EMPLOYEE_KEY,
V.EMPLOYEE_ID = Y.LATEST_EMPLOYEE_NUMBER 
WHERE
V.EMPLOYEE_KEY = Y.EMPLOYEE_KEY
AND V.SYSTEM_CODE  = Y.SYSTEM_CODE ;


 RETURN ''SUCCESS'';
    END;

 EOT
}

