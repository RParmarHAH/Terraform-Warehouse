resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_MATRIXCARE_DIM_ACTIVITIES" {
	name ="MERGE_STAGE_MATRIXCARE_DIM_ACTIVITIES"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN
    MERGE INTO DW_${var.SF_ENVIRONMENT}.HAH.DIM_ACTIVITIES TGT 
USING DW_${var.SF_ENVIRONMENT}.STAGE.MATRIXCARE_DIM_ACTIVITIES STAGE 
ON TGT.ACTIVITY_KEY = STAGE.ACTIVITY_KEY
WHEN MATCHED THEN 
UPDATE SET 
TGT.ACTIVITY_NAME= STAGE.ACTIVITY_NAME
,TGT.SYSTEM_CODE= STAGE.SYSTEM_CODE
,TGT.SOURCE_SYSTEM_ID= STAGE.SOURCE_SYSTEM_ID
,TGT.ETL_TASK_KEY= STAGE.ETL_TASK_KEY
,TGT.ETL_INSERTED_TASK_KEY= STAGE.ETL_INSERTED_TASK_KEY
,TGT.ETL_INSERTED_DATE= STAGE.ETL_INSERTED_DATE
,TGT.ETL_INSERTED_BY= STAGE.ETL_INSERTED_BY
   ,TGT.ETL_LAST_UPDATED_DATE= STAGE.ETL_LAST_UPDATED_DATE
   ,TGT.ETL_LAST_UPDATED_BY= STAGE.ETL_LAST_UPDATED_BY
   ,TGT.ETL_DELETED_FLAG= STAGE.ETL_DELETED_FLAG
   ,TGT.ETL_INFERRED_MEMBER_FLAG= STAGE.ETL_INFERRED_MEMBER_FLAG
WHEN NOT MATCHED THEN 
INSERT ( 
ACTIVITY_KEY,
SOURCE_SYSTEM_ID,
SYSTEM_CODE,
ACTIVITY_NAME,
ETL_TASK_KEY,
ETL_INSERTED_TASK_KEY,
ETL_INSERTED_DATE,
ETL_INSERTED_BY,
ETL_LAST_UPDATED_DATE,
ETL_LAST_UPDATED_BY,
ETL_DELETED_FLAG,
ETL_INFERRED_MEMBER_FLAG
) 
VALUES (
STAGE.ACTIVITY_KEY,
STAGE.SOURCE_SYSTEM_ID,
STAGE.SYSTEM_CODE,
STAGE.ACTIVITY_NAME,
STAGE.ETL_TASK_KEY,
STAGE.ETL_INSERTED_TASK_KEY,
STAGE.ETL_INSERTED_DATE,
STAGE.ETL_INSERTED_BY,
STAGE.ETL_LAST_UPDATED_DATE,
STAGE.ETL_LAST_UPDATED_BY,
STAGE.ETL_DELETED_FLAG,
STAGE.ETL_INFERRED_MEMBER_FLAG
);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
    
 EOT
}

