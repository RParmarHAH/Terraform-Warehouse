resource "snowflake_procedure" "DW_HAH_MERGE_STAGE_HAH_REPORTING_DIM_DATE" {
	name ="MERGE_STAGE_HAH_REPORTING_DIM_DATE"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "HAH"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result varchar(1000);
    return_result_temp VARCHAR(1000);
BEGIN
MERGE INTO HAH.DIM_DATE TGT 
USING STAGE.HAH_REPORTING_DIM_DATE STAGE 
ON TGT.DATE_KEY = STAGE.DATE_KEY
WHEN MATCHED THEN 
UPDATE SET 
    TGT.CALENDAR_DATE= STAGE.CALENDAR_DATE
   ,TGT.YEAR= STAGE.YEAR
   ,TGT.FIRST_DAY_OF_YEAR= STAGE.FIRST_DAY_OF_YEAR
   ,TGT.LAST_DAY_OF_YEAR= STAGE.LAST_DAY_OF_YEAR
   ,TGT.PREVIOUS_YEAR_FIRST_DAY= STAGE.PREVIOUS_YEAR_FIRST_DAY
   ,TGT.PREVIOUS_YEAR_LAST_DAY= STAGE.PREVIOUS_YEAR_LAST_DAY
   ,TGT.QUARTER= STAGE.QUARTER
   ,TGT.QUARTER_NAME= STAGE.QUARTER_NAME
   ,TGT.YEAR_QUARTER= STAGE.YEAR_QUARTER
   ,TGT.FIRST_DAY_OF_QUARTER= STAGE.FIRST_DAY_OF_QUARTER
   ,TGT.LAST_DAY_OF_QUARTER= STAGE.LAST_DAY_OF_QUARTER
   ,TGT.PREVIOUS_QUARTER_FIRST_DAY= STAGE.PREVIOUS_QUARTER_FIRST_DAY
   ,TGT.PREVIOUS_QUARTER_LAST_DAY= STAGE.PREVIOUS_QUARTER_LAST_DAY
   ,TGT.MONTH= STAGE.MONTH
   ,TGT.YEAR_MONTH= STAGE.YEAR_MONTH
   ,TGT.YEAR_MONTH_DESC= STAGE.YEAR_MONTH_DESC
   ,TGT.MONTH_NAME= STAGE.MONTH_NAME
   ,TGT.FIRST_DAY_OF_MONTH= STAGE.FIRST_DAY_OF_MONTH
   ,TGT.LAST_DAY_OF_MONTH= STAGE.LAST_DAY_OF_MONTH
   ,TGT.PREVIOUS_MONTH_FIRST_DAY= STAGE.PREVIOUS_MONTH_FIRST_DAY
   ,TGT.PREVIOUS_MONTH_LAST_DAY= STAGE.PREVIOUS_MONTH_LAST_DAY
   ,TGT.MOST_RECENT_4_WEEKS_FIRST_DAY= STAGE.MOST_RECENT_4_WEEKS_FIRST_DAY
   ,TGT.MOST_RECENT_4_WEEKS_LAST_DAY= STAGE.MOST_RECENT_4_WEEKS_LAST_DAY
   ,TGT.PREVIOUS_4_WEEKS_FIRST_DAY= STAGE.PREVIOUS_4_WEEKS_FIRST_DAY
   ,TGT.PREVIOUS_4_WEEKS_LAST_DAY= STAGE.PREVIOUS_4_WEEKS_LAST_DAY
   ,TGT.PREVIOUS_4TH_WEEK_FIRST_DAY= STAGE.PREVIOUS_4TH_WEEK_FIRST_DAY
   ,TGT.PREVIOUS_4TH_WEEK_LAST_DAY= STAGE.PREVIOUS_4TH_WEEK_LAST_DAY
   ,TGT.PREVIOUS_ROLLING_4_WEEKS_FIRST_DAY= STAGE.PREVIOUS_ROLLING_4_WEEKS_FIRST_DAY
   ,TGT.PREVIOUS_ROLLING_4_WEEKS_LAST_DAY= STAGE.PREVIOUS_ROLLING_4_WEEKS_LAST_DAY
   ,TGT.WEEK_OF_YEAR= STAGE.WEEK_OF_YEAR
   ,TGT.HAH_CURRENT_WEEK_FIRST_DAY= STAGE.HAH_CURRENT_WEEK_FIRST_DAY
   ,TGT.HAH_CURRENT_WEEK_LAST_DAY= STAGE.HAH_CURRENT_WEEK_LAST_DAY
   ,TGT.HAH_PREVIOUS_WEEK_FIRST_DAY= STAGE.HAH_PREVIOUS_WEEK_FIRST_DAY
   ,TGT.HAH_PREVIOUS_WEEK_LAST_DAY= STAGE.HAH_PREVIOUS_WEEK_LAST_DAY
   ,TGT.DAY_OF_YEAR= STAGE.DAY_OF_YEAR
   ,TGT.DAY_OF_MONTH= STAGE.DAY_OF_MONTH
   ,TGT.DAY_OF_WEEK= STAGE.DAY_OF_WEEK
   ,TGT.DAY_NAME= STAGE.DAY_NAME
   ,TGT.YEAR_DAY= STAGE.YEAR_DAY
   ,TGT.WEEKEND_FLAG= STAGE.WEEKEND_FLAG
   ,TGT.HOLIDAY_FLAG= STAGE.HOLIDAY_FLAG
   ,TGT.ISO_YEAR= STAGE.ISO_YEAR
   ,TGT.ISO_WEEK= STAGE.ISO_WEEK
   ,TGT.ISO_DAY= STAGE.ISO_DAY
   ,TGT.IS_CURRENT_YEAR= STAGE.IS_CURRENT_YEAR
   ,TGT.IS_CURRENT_MONTH= STAGE.IS_CURRENT_MONTH
   ,TGT.IS_CURRENT_WEEK= STAGE.IS_CURRENT_WEEK
   ,TGT.IS_TODAY= STAGE.IS_TODAY
WHEN NOT MATCHED THEN 
INSERT ( 
    DATE_KEY
   ,CALENDAR_DATE
   ,YEAR
   ,FIRST_DAY_OF_YEAR
   ,LAST_DAY_OF_YEAR
   ,PREVIOUS_YEAR_FIRST_DAY
   ,PREVIOUS_YEAR_LAST_DAY
   ,QUARTER
   ,QUARTER_NAME
   ,YEAR_QUARTER
   ,FIRST_DAY_OF_QUARTER
   ,LAST_DAY_OF_QUARTER
   ,PREVIOUS_QUARTER_FIRST_DAY
   ,PREVIOUS_QUARTER_LAST_DAY
   ,MONTH
   ,YEAR_MONTH
   ,YEAR_MONTH_DESC
   ,MONTH_NAME
   ,FIRST_DAY_OF_MONTH
   ,LAST_DAY_OF_MONTH
   ,PREVIOUS_MONTH_FIRST_DAY
   ,PREVIOUS_MONTH_LAST_DAY
   ,MOST_RECENT_4_WEEKS_FIRST_DAY
   ,MOST_RECENT_4_WEEKS_LAST_DAY
   ,PREVIOUS_4_WEEKS_FIRST_DAY
   ,PREVIOUS_4_WEEKS_LAST_DAY
   ,PREVIOUS_4TH_WEEK_FIRST_DAY
   ,PREVIOUS_4TH_WEEK_LAST_DAY
   ,PREVIOUS_ROLLING_4_WEEKS_FIRST_DAY
   ,PREVIOUS_ROLLING_4_WEEKS_LAST_DAY
   ,WEEK_OF_YEAR
   ,HAH_CURRENT_WEEK_FIRST_DAY
   ,HAH_CURRENT_WEEK_LAST_DAY
   ,HAH_PREVIOUS_WEEK_FIRST_DAY
   ,HAH_PREVIOUS_WEEK_LAST_DAY
   ,DAY_OF_YEAR
   ,DAY_OF_MONTH
   ,DAY_OF_WEEK
   ,DAY_NAME
   ,YEAR_DAY
   ,WEEKEND_FLAG
   ,HOLIDAY_FLAG
   ,ISO_YEAR
   ,ISO_WEEK
   ,ISO_DAY
   ,IS_CURRENT_YEAR
   ,IS_CURRENT_MONTH
   ,IS_CURRENT_WEEK
   ,IS_TODAY
) 
VALUES (
    STAGE.DATE_KEY
   ,STAGE.CALENDAR_DATE
   ,STAGE.YEAR
   ,STAGE.FIRST_DAY_OF_YEAR
   ,STAGE.LAST_DAY_OF_YEAR
   ,STAGE.PREVIOUS_YEAR_FIRST_DAY
   ,STAGE.PREVIOUS_YEAR_LAST_DAY
   ,STAGE.QUARTER
   ,STAGE.QUARTER_NAME
   ,STAGE.YEAR_QUARTER
   ,STAGE.FIRST_DAY_OF_QUARTER
   ,STAGE.LAST_DAY_OF_QUARTER
   ,STAGE.PREVIOUS_QUARTER_FIRST_DAY
   ,STAGE.PREVIOUS_QUARTER_LAST_DAY
   ,STAGE.MONTH
   ,STAGE.YEAR_MONTH
   ,STAGE.YEAR_MONTH_DESC
   ,STAGE.MONTH_NAME
   ,STAGE.FIRST_DAY_OF_MONTH
   ,STAGE.LAST_DAY_OF_MONTH
   ,STAGE.PREVIOUS_MONTH_FIRST_DAY
   ,STAGE.PREVIOUS_MONTH_LAST_DAY
   ,STAGE.MOST_RECENT_4_WEEKS_FIRST_DAY
   ,STAGE.MOST_RECENT_4_WEEKS_LAST_DAY
   ,STAGE.PREVIOUS_4_WEEKS_FIRST_DAY
   ,STAGE.PREVIOUS_4_WEEKS_LAST_DAY
   ,STAGE.PREVIOUS_4TH_WEEK_FIRST_DAY
   ,STAGE.PREVIOUS_4TH_WEEK_LAST_DAY
   ,STAGE.PREVIOUS_ROLLING_4_WEEKS_FIRST_DAY
   ,STAGE.PREVIOUS_ROLLING_4_WEEKS_LAST_DAY
   ,STAGE.WEEK_OF_YEAR
   ,STAGE.HAH_CURRENT_WEEK_FIRST_DAY
   ,STAGE.HAH_CURRENT_WEEK_LAST_DAY
   ,STAGE.HAH_PREVIOUS_WEEK_FIRST_DAY
   ,STAGE.HAH_PREVIOUS_WEEK_LAST_DAY
   ,STAGE.DAY_OF_YEAR
   ,STAGE.DAY_OF_MONTH
   ,STAGE.DAY_OF_WEEK
   ,STAGE.DAY_NAME
   ,STAGE.YEAR_DAY
   ,STAGE.WEEKEND_FLAG
   ,STAGE.HOLIDAY_FLAG
   ,STAGE.ISO_YEAR
   ,STAGE.ISO_WEEK
   ,STAGE.ISO_DAY
   ,STAGE.IS_CURRENT_YEAR
   ,STAGE.IS_CURRENT_MONTH
   ,STAGE.IS_CURRENT_WEEK
   ,STAGE.IS_TODAY
);
SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted & '',"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
UPDATE HAH.DIM_DATE
SET Holiday_Flag = CAST( ''TRUE'' AS BOOLEAN)
WHERE (MONTH = 1 AND DAY_OF_MONTH = 1)   -- New years day
OR (MONTH = 7 AND DAY_OF_MONTH = 4)      -- 4th of July
OR (MONTH = 11 AND DAY_OF_MONTH = 11)    -- Veterens day
OR (MONTH = 12 AND DAY_OF_MONTH = 25);

SELECT CONCAT('' '',"number of rows updated",'' Rows Updated.'') into :return_result_temp FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return_result:=CONCAT(return_result,'' | '',return_result_temp);
return return_result;
END;

 EOT
}

