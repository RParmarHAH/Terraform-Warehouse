resource "snowflake_view" "DW_INTEGRATION_VW_APPLICANT_CROSSWALK_INPUT_CLEANUP" {
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "INTEGRATION"
	name = "VW_APPLICANT_CROSSWALK_INPUT_CLEANUP"
	statement = <<-SQL
	 with workday_applicant as (
select 
APPLICANT_ID,
LINKED_ID,
FIRST_NAME,
LAST_NAME,
SSN,
DATE_OF_BIRTH,
ADDRESS,
MOBILE_PHONE,
EMAIL
from DW_${var.SF_ENVIRONMENT}.stage.workday_dim_applicant 
where APPLICANT_ID not in (select COALESCE(WORKDAY_INTERNAL_ID,RANDOM()) from DW_${var.SF_ENVIRONMENT}.INTEGRATION.EMPLOYEE_CROSS_WALK_CLONE_FOR_CLEANUP WHERE WORKDAY_INTERNAL_ID IS NOT NULL)
  ) 
,CROSS_WALK_DATA AS (
SELECT distinct  EMPLOYEE_ENTERPRISE_ID::VARCHAR AS EMPLOYEE_ENTERPRISE_ID, --AMS_EMPLOYEE_KEY, PAYROLL_EMPLOYEE_KEY ,
  APPLICANT_EMPLOYEE_ID as LINKED_ID,
    E.EMPLOYEE_FIRST_NAME as FIRST_NAME,
  E.EMPLOYEE_LAST_NAME as LAST_NAME,
  E.EMPLOYEE_PID as SSN,
  E.EMPLOYEE_DOB as DATE_OF_BIRTH,
  E.EMPLOYEE_ADDRESS1 as ADDRESS,
  coalesce(E.EMPLOYEE_HOME_PHONE,E.EMPLOYEE_HOME_PHONE,E.EMPLOYEE_WORK_PHONE ) as MOBILE_PHONE,
  coalesce(E.EMPLOYEE_PERSONAL_EMAIL,E.EMPLOYEE_WORK_EMAIL ) as EMAIL
  FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.EMPLOYEE_CROSS_WALK_CLONE_FOR_CLEANUP C 
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_EMPLOYEE E ON C.AMS_EMPLOYEE_KEY = E.EMPLOYEE_KEY
where C.AMS_EMPLOYEE_KEY IS not null AND INACTIVE = FALSE and DUP_FLAG = FALSE
union 
SELECT distinct EMPLOYEE_ENTERPRISE_ID::VARCHAR AS EMPLOYEE_ENTERPRISE_ID,-- AMS_EMPLOYEE_KEY, PAYROLL_EMPLOYEE_KEY ,
  APPLICANT_EMPLOYEE_ID  as LINKED_ID,
  E.EMPLOYEE_FIRST_NAME,
  E.EMPLOYEE_LAST_NAME,
  E.EMPLOYEE_PID,
  E.EMPLOYEE_DOB,
  E.EMPLOYEE_ADDRESS1,
  coalesce(E.EMPLOYEE_HOME_PHONE,E.EMPLOYEE_HOME_PHONE,E.EMPLOYEE_WORK_PHONE ) as PHONE,
  coalesce(E.EMPLOYEE_PERSONAL_EMAIL,E.EMPLOYEE_WORK_EMAIL ) as EMAIL
  FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.EMPLOYEE_CROSS_WALK_CLONE_FOR_CLEANUP C 
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_EMPLOYEE E ON C.PAYROLL_EMPLOYEE_KEY = E.EMPLOYEE_KEY 
where C.AMS_EMPLOYEE_KEY IS null and C.PAYROLL_EMPLOYEE_KEY is not null AND INACTIVE = FALSE and DUP_FLAG = FALSE  -- DATASET 2 ALL THE RECORDS FROM CROSS WALK TABLE
) 
  SELECT *
FROM (
SELECT E.APPLICANT_ID AS ID1,EE.EMPLOYEE_ENTERPRISE_ID AS ID2,
  JAROWINKLER_SIMILARITY(E.LINKED_ID,EE.LINKED_ID) LINKED_ID_MATCH,  --COMPARE FIRST NAME 
  JAROWINKLER_SIMILARITY(E.FIRST_NAME,EE.FIRST_NAME) FIRST_NAME_MATCH,  --COMPARE FIRST NAME 
  JAROWINKLER_SIMILARITY(E.LAST_NAME,EE.LAST_NAME) LAST_NAME_MATCH,  --COMPARE LAST NAME
  JAROWINKLER_SIMILARITY(E.SSN,EE.SSN) SSN_MATCH,  --COMPARE  SSN
  JAROWINKLER_SIMILARITY(E.DATE_OF_BIRTH,EE.DATE_OF_BIRTH) BIRTHDAY_MATCH, --COMPARE  DOB
  JAROWINKLER_SIMILARITY(E.ADDRESS,EE.ADDRESS) ADDRESS_MATCH, --COMPARE  ADDRESS
  JAROWINKLER_SIMILARITY(E.MOBILE_PHONE,EE.MOBILE_PHONE) PHONE_MATCH, --COMPARE  ADDRESS
  JAROWINKLER_SIMILARITY(E.EMAIL,EE.EMAIL) EMAIL_MATCH --COMPARE  ADDRESS
FROM workday_applicant E 
left join CROSS_WALK_DATA EE ON 
( E.MOBILE_PHONE = EE.MOBILE_PHONE 
 or E.EMAIL = EE.EMAIL 
 OR 
(UPPER(TRIM(E.FIRST_NAME)) =  UPPER(TRIM(EE.FIRST_NAME))  AND UPPER(TRIM(E.LAST_NAME)) =  UPPER(TRIM(EE.LAST_NAME)))
  OR 
(E.DATE_OF_BIRTH = EE.DATE_OF_BIRTH AND  E.ADDRESS = EE.ADDRESS )
 )
 );
SQL
	or_replace = true 
	is_secure = false 
}

