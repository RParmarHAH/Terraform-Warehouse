resource "snowflake_view" "DW_INTEGRATION_VW_WORKDAY_CROSSWALK_DEDUPE_INPUT" {
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "INTEGRATION"
	name = "VW_WORKDAY_CROSSWALK_DEDUPE_INPUT"
	statement = <<-SQL
	 
WITH WORKDAY_DATA AS (
SELECT DISTINCT EMPLOYEE_ID AS WORKDAY_ID,
  EMPLOYEE_FIRST_NAME,
  EMPLOYEE_LAST_NAME,
  EMPLOYEE_PID,
  EMPLOYEE_DOB,
  EMPLOYEE_ADDRESS1,
  coalesce(EMPLOYEE_HOME_PHONE,EMPLOYEE_HOME_PHONE,EMPLOYEE_WORK_PHONE ) as PHONE,
  coalesce(EMPLOYEE_PERSONAL_EMAIL,EMPLOYEE_WORK_EMAIL ) as EMAIL
  FROM DW_${var.SF_ENVIRONMENT}.STAGE.WORKDAY_DIM_EMPLOYEE where EMPLOYEE_ID not in 
(select COALESCE(WORKDAY_INTERNAL_ID,RANDOM()) fROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.EMPLOYEE_CROSS_WALK  where WORKDAY_INTERNAL_ID is not null AND INACTIVE = FALSE and DUP_FLAG = FALSE) -- DATASET 1 - WITH ALL NEW RECORDS FROM THE WORKDAY
 )
,CROSS_WALK_DATA AS (
SELECT distinct  EMPLOYEE_ENTERPRISE_ID::VARCHAR AS EMPLOYEE_ENTERPRISE_ID, --AMS_EMPLOYEE_KEY, PAYROLL_EMPLOYEE_KEY ,
    E.EMPLOYEE_FIRST_NAME,
  E.EMPLOYEE_LAST_NAME,
  E.EMPLOYEE_PID,
  E.EMPLOYEE_DOB,
  E.EMPLOYEE_ADDRESS1,
  coalesce(E.EMPLOYEE_HOME_PHONE,E.EMPLOYEE_HOME_PHONE,E.EMPLOYEE_WORK_PHONE ) as PHONE,
  coalesce(E.EMPLOYEE_PERSONAL_EMAIL,E.EMPLOYEE_WORK_EMAIL ) as EMAIL
  FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.EMPLOYEE_CROSS_WALK C 
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_EMPLOYEE E ON C.AMS_EMPLOYEE_KEY = E.EMPLOYEE_KEY
where C.AMS_EMPLOYEE_KEY IS not null AND INACTIVE = FALSE and DUP_FLAG = FALSE
union 
SELECT distinct EMPLOYEE_ENTERPRISE_ID::VARCHAR AS EMPLOYEE_ENTERPRISE_ID,-- AMS_EMPLOYEE_KEY, PAYROLL_EMPLOYEE_KEY ,
  E.EMPLOYEE_FIRST_NAME,
  E.EMPLOYEE_LAST_NAME,
  E.EMPLOYEE_PID,
  E.EMPLOYEE_DOB,
  E.EMPLOYEE_ADDRESS1,
  coalesce(E.EMPLOYEE_HOME_PHONE,E.EMPLOYEE_HOME_PHONE,E.EMPLOYEE_WORK_PHONE ) as PHONE,
  coalesce(E.EMPLOYEE_PERSONAL_EMAIL,E.EMPLOYEE_WORK_EMAIL ) as EMAIL
  FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.EMPLOYEE_CROSS_WALK C 
LEFT JOIN DW_${var.SF_ENVIRONMENT}.HAH.DIM_EMPLOYEE E ON C.PAYROLL_EMPLOYEE_KEY = E.EMPLOYEE_KEY 
where C.AMS_EMPLOYEE_KEY IS null and C.PAYROLL_EMPLOYEE_KEY is not null  AND INACTIVE = FALSE and DUP_FLAG = FALSE -- DATASET 2 ALL THE RECORDS FROM CROSS WALK TABLE
)-- select * from CROSS_WALK_DATA where EMPLOYEE_ENTERPRISE_ID in  ('10064052','10069751','10266724');;
SELECT *,
CASE WHEN (SSN_match = 100 and BIRTHDAY_match =100 and (FIRST_NAME_match >=90 or LAST_NAME_match>=90)) THEN 1
     WHEN (SSN_match = 100 and BIRTHDAY_match >=90 and (FIRST_NAME_match >=90 or LAST_NAME_match>=90)) THEN 2
     WHEN  ((SSN_match >90 OR BIRTHDAY_match >90)  and (FIRST_NAME_match >=90 or LAST_NAME_match>=90))  THEN 3
     END AS RULE_ID 
FROM (
SELECT E.WORKDAY_ID AS ID1,EE.EMPLOYEE_ENTERPRISE_ID AS ID2,
  JAROWINKLER_SIMILARITY(E.EMPLOYEE_FIRST_NAME,EE.EMPLOYEE_FIRST_NAME) FIRST_NAME_MATCH,  --COMPARE FIRST NAME 
  JAROWINKLER_SIMILARITY(E.EMPLOYEE_LAST_NAME,EE.EMPLOYEE_LAST_NAME) LAST_NAME_MATCH,  --COMPARE LAST NAME
  JAROWINKLER_SIMILARITY(E.EMPLOYEE_PID,EE.EMPLOYEE_PID) SSN_MATCH,  --COMPARE  SSN
  JAROWINKLER_SIMILARITY(E.EMPLOYEE_DOB,EE.EMPLOYEE_DOB) BIRTHDAY_MATCH, --COMPARE  DOB
  JAROWINKLER_SIMILARITY(E.EMPLOYEE_ADDRESS1,EE.EMPLOYEE_ADDRESS1) ADDRESS_MATCH, --COMPARE  ADDRESS
  JAROWINKLER_SIMILARITY(E.PHONE,EE.PHONE) PHONE_MATCH, --COMPARE  ADDRESS
  JAROWINKLER_SIMILARITY(E.EMAIL,EE.EMAIL) EMAIL_MATCH --COMPARE  ADDRESS
FROM WORKDAY_DATA E 
left join CROSS_WALK_DATA EE ON 
( E.EMPLOYEE_PID = EE.EMPLOYEE_PID 
 OR 
(UPPER(TRIM(E.EMPLOYEE_FIRST_NAME)) =  UPPER(TRIM(EE.EMPLOYEE_FIRST_NAME)) 
 AND UPPER(TRIM(E.EMPLOYEE_LAST_NAME)) =  UPPER(TRIM(EE.EMPLOYEE_LAST_NAME)))
  OR 
(E.EMPLOYEE_DOB = EE.EMPLOYEE_DOB AND  E.EMPLOYEE_ADDRESS1 = EE.EMPLOYEE_ADDRESS1 )
 )
 );
SQL
	or_replace = true 
	is_secure = false 
}

