resource "snowflake_procedure" "DW_INTEGRATION_FACT_PAYROLL_MERGED_POSTPROCESSING" {
	name ="FACT_PAYROLL_MERGED_POSTPROCESSING"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "INTEGRATION"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN

INSERT OVERWRITE INTO DW_${var.SF_ENVIRONMENT}.INTEGRATION.FACT_PAYROLL_MERGED 

	SELECT DISTINCT
		PAYROLL.PAYROLL_KEY,
		PAYROLL.REPORT_DATE,
		COALESCE(EMPLOYEE_MERGED.EMPLOYEE_KEY, PAYROLL.EMPLOYEE_KEY) AS EMPLOYEE_KEY,
		PAYROLL.EMPLOYEE_KEY AS ORIGINAL_EMPLOYEE_KEY,
		COALESCE(BRANCH_MERGED.BRANCH_KEY, PAYROLL.BRANCH_KEY) AS BRANCH_KEY,
		PAYROLL.BRANCH_KEY AS ORIGINAL_BRANCH_KEY,
		COALESCE(EMPLOYEE_MERGED.SOURCE_SYSTEM_ID, PAYROLL.SOURCE_SYSTEM_ID) AS SOURCE_SYSTEM_ID,
		PAYROLL.SOURCE_SYSTEM_ID AS ORIGINAL_SOURCE_SYSTEM_ID,
		PAYROLL.PAYROLL_DATE,
		COALESCE(EMPLOYEE_MERGED.EMPLOYEE_ID, PAYROLL.EMPLOYEE_ID) AS EMPLOYEE_ID,
		PAYROLL.EMPLOYEE_ID AS ORIGINAL_EMPLOYEE_ID,
		COALESCE(BRANCH_MERGED.DETAILED_OFFICE_NAME, PAYROLL.BRANCH_NAME) AS BRANCH_NAME,
		PAYROLL.BRANCH_NAME AS ORIGINAL_BRANCH_NAME,
		COALESCE(EMPLOYEE_MERGED.SYSTEM_CODE, PAYROLL.SYSTEM_CODE) AS SYSTEM_CODE,
		PAYROLL.SYSTEM_CODE AS ORIGINAL_SYSTEM_CODE,
		PAYROLL.PAY_PERIOD_START_DATE,
		PAYROLL.PAY_PERIOD_END_DATE,
		PAYROLL.CHECK_NUMBER,
		PAYROLL.PAY_HOURS,
		PAYROLL.SERVICE_HOURS,
		PAYROLL.OVERTIME_HOURS,
		PAYROLL.NON_SERVICE_UNITS,
		PAYROLL.SICK_HOURS,
		PAYROLL.VACATION_HOURS,
		PAYROLL.PAY_RATE,
		PAYROLL.OVERTIME_RATE,
		PAYROLL.GROSS_PAY_AMOUNT,
		PAYROLL.SERVICE_PAY_AMOUNT,
		PAYROLL.OVERTIME_PAY_AMOUNT,
		PAYROLL.NON_SERVICE_PAY_AMOUNT,
		PAYROLL.TAX_AMOUNT,
		PAYROLL.NET_PAY_AMOUNT,
		PAYROLL.OTHER_DEDUCTIONS_AMOUNT,
		PAYROLL.UNION_DUES_AMOUNT,
		PAYROLL.REINBURSMENT_AMOUNT,
		PAYROLL.ETL_TASK_KEY,
		PAYROLL.ETL_INSERTED_TASK_KEY,
		PAYROLL.ETL_INSERTED_DATE,
		PAYROLL.ETL_INSERTED_BY,
		PAYROLL.ETL_LAST_UPDATED_DATE,
		PAYROLL.ETL_LAST_UPDATED_BY,
		PAYROLL.ETL_DELETED_FLAG
	FROM DW_${var.SF_ENVIRONMENT}.HAH.FACT_PAYROLL AS PAYROLL
	LEFT JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.DIM_BRANCH_MERGED AS BRANCH_MERGED 
		ON BRANCH_MERGED.ORIGINAL_BRANCH_KEY = PAYROLL.BRANCH_KEY
	LEFT JOIN DW_${var.SF_ENVIRONMENT}.INTEGRATION.DIM_EMPLOYEE_PAYROLL_MERGE_DEDUPE AS EMPLOYEE_MERGED 
		ON EMPLOYEE_MERGED.ORIGINAL_EMPLOYEE_KEY = PAYROLL.EMPLOYEE_KEY
	WHERE PAYROLL.SOURCE_SYSTEM_ID NOT IN (''14'', ''15'', ''19'')
	AND PAYROLL.SYSTEM_CODE NOT IN (''OPENSYSTEMS - PA'', ''OPENSYSTEMS - DE'')
    AND PAYROLL.SYSTEM_CODE NOT LIKE ''%OSHAH%'';

SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

return return_result;
END;


 EOT
}

