resource "snowflake_procedure" "DW_INTEGRATION_GET_MASTER_CARE_COORDINATION_CAREGIVER_MATCH_LIST" {
	name ="GET_MASTER_CARE_COORDINATION_CAREGIVER_MATCH_LIST"
	database = "DW_${var.SF_ENVIRONMENT}"
	schema = "INTEGRATION"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN
    INSERT OVERWRITE INTO APP_DB_${var.SF_ENVIRONMENT}.CARE_COORDINATION.CAREGIVER_MATCH_LIST
    WITH PRIORITY_SOURCE AS (
     SELECT SOURCE,ID,EMPLOYEE_KEY,
     ROW_NUMBER() OVER (PARTITION BY CLUSTER_ID ORDER BY IFF(SOURCE = ''CARE_COORDINATION'',1,0) DESC) AS SRC_PRI, CLUSTER_ID
     FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.CARE_COORDINATION_CAREGIVER_DEDUPE
     WHERE CLUSTER_ID IS NOT NULL
    )
    ,NEW AS (
     SELECT * FROM PRIORITY_SOURCE WHERE SRC_PRI >1
     )
    ,OLD AS (
    SELECT * FROM PRIORITY_SOURCE WHERE SRC_PRI =1
    ) --SELECT * FROM OLD;
    select O.SOURCE AS SOURCE,O.EMPLOYEE_KEY AS GATOR_EMPLOYEE_KEY,R.SOURCE AS ORIGINAL_SOURCE,R.EMPLOYEE_KEY AS DW_EMPLOYEE_KEY,
     CURRENT_DATE AS ETL_INSERTED_DATE
    FROM DW_${var.SF_ENVIRONMENT}.INTEGRATION.CARE_COORDINATION_CAREGIVER_DEDUPE R
    LEFT JOIN OLD O ON O.CLUSTER_ID = R.CLUSTER_ID
    WHERE R.CLUSTER_ID IS NOT NULL;

SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

return return_result;
END;


 EOT
}

