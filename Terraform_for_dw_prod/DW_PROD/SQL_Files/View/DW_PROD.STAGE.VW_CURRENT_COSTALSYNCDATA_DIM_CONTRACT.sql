create or replace view DW_PROD.STAGE.VW_CURRENT_COSTALSYNCDATA_DIM_CONTRACT(
	CONTRACT_KEY
) as
WITH HOUR_UNIT_MAPPING AS (
	SELECT DB, PLAN_CODE, 
		MIN(TIME_TRANSLATION_CODE) AS PLAN_TIME_TRANSLATION_CODE, 
		CASE LEFT(MIN(TIME_TRANSLATION_CODE), 2) WHEN '15' THEN 4 WHEN '30' THEN 2 ELSE 1 END MATH_FACTOR,
		MAX(ETL_LAST_UPDATED_DATE) AS ETL_LAST_UPDATED_DATE
	FROM DISC_PROD.COSTALSYNCDATA.CV_PLANTIMETRANSLATION
	WHERE TRIM(TIME_TRANSLATION_CODE) LIKE '%MIN'
	GROUP BY DB, PLAN_CODE 
), DD_SUPERVISORS AS (
    SELECT ADMISSIONS.DB, ADMISSIONS.CURRENT_PLAN_CODE AS PLAN_CODE,
		MAX(IFF(SUPERVISORS.DEPARTMENT_NAME LIKE '%ADULT%' OR SUPERVISORS.DEPARTMENT_NAME LIKE '%DD%' OR SUPERVISORS.DEPARTMENT_NAME LIKE '%CLA%' OR ADMISSIONS.CURRENT_PLAN_CODE LIKE '%DD%' OR LOCATIONS.LOCATION_NAME LIKE '%DD%', 1, 0)) AS DD_check,
		MAX(IFF(TRIM(LOCATIONS.LOCATION_NAME) = 'AIKEN', 1, 0)) SC_State_Check,
		MAX(
			NULLIF(
				GREATEST(
					COALESCE(ADMISSIONS.ETL_LAST_UPDATED_DATE, '1/1/1900'),
					COALESCE(SUPERVISORS.ETL_LAST_UPDATED_DATE, '1/1/1900'),
					COALESCE(LOCATIONS.ETL_LAST_UPDATED_DATE, '1/1/1900')
				), '1/1/1900'
			) 
		) AS ETL_LAST_UPDATED_DATE
    FROM DISC_PROD.COSTALSYNCDATA.CV_ADMISSIONS ADMISSIONS
    LEFT JOIN DISC_PROD.COSTALSYNCDATA.CV_DEPARTMENTS SUPERVISORS
    	ON SUPERVISORS.DB = ADMISSIONS.DB AND SUPERVISORS.DEPARTMENT__CODE = ADMISSIONS.DEPARTMENT__CODE
	LEFT JOIN DISC_PROD.COSTALSYNCDATA.CV_LOCATIONS LOCATIONS
		ON LOCATIONS.DB = ADMISSIONS.DB AND LOCATIONS.LOCATION_CODE = ADMISSIONS.LOCATION_CODE 
	GROUP BY ADMISSIONS.DB, ADMISSIONS.CURRENT_PLAN_CODE
)
SELECT
	md5(TRIM(PLANS.DB) || '-' || TRIM(PLANS.PLAN_CODE) || '-'  || 'COSTALSYNCDATA') AS CONTRACT_KEY --PK
FROM DISC_PROD.COSTALSYNCDATA.CV_PLANS AS PLANS
LEFT JOIN HOUR_UNIT_MAPPING AS MAPPING
	ON MAPPING.DB = PLANS.DB AND MAPPING.PLAN_CODE = PLANS.PLAN_CODE 
LEFT JOIN DD_SUPERVISORS AS SUPERVISORS
	ON SUPERVISORS.DB = PLANS.DB AND SUPERVISORS.PLAN_CODE = PLANS.PLAN_CODE
WHERE PLANS.ETL_LAST_UPDATED_DATE >= '1900-01-01' 
	OR MAPPING.ETL_LAST_UPDATED_DATE >= '1900-01-01'
	OR SUPERVISORS.ETL_LAST_UPDATED_DATE >= '1900-01-01';