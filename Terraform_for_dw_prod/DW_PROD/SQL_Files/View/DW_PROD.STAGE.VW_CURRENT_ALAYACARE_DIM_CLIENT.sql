create or replace view DW_PROD.STAGE.VW_CURRENT_ALAYACARE_DIM_CLIENT(
	CLIENT_KEY
) as
/*WITH ALAYACARE_SERVICE_DATES AS (
	SELECT CLIENT_NUMBER AS CLIENT_ID,
		MIN(SERVICE_DATE) AS FIRST_SERVICE_DATE, MAX(SERVICE_DATE) AS LAST_SERVICE_DATE
	FROM HAH.FACT_VISIT
	WHERE SOURCE_SYSTEM_ID = 9 
		AND STATUS_CODE IN ('02', '03', '04', '05')
	GROUP BY CLIENT_NUMBER
),*/
 WITH 
CLIENT AS  --VISIT DATA
(
SELECT * FROM 
(
	SELECT CLIENT_ID,MASTER_ID,CLIENT_ID AS ORIGINAL_RECORD_ID,GUID,BRANCH_ID
	FROM  DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MASTER_LIST 
) 
UNION
SELECT * FROM 
(
	SELECT DISTINCT ID,MASTER_ID,ID AS ORIGINAL_RECORD_ID,GUID,BRANCH_ID
	FROM DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MATCH_LIST 
	WHERE ID NOT IN (SELECT CLIENT_ID FROM DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MASTER_LIST ) 
) 
)
,ALAYACARE_SERVICE_DATES AS (
SELECT  NVL(C.MASTER_ID::INT,VISITS.CLIENT_ID::INT) AS CLIENT_ID,NVL(C.BRANCH_ID::INT,VISITS.BRANCH_ID::INT ) AS BRANCH_ID ,
		MIN(DATE_TRUNC (DAY,START_AT)) AS FIRST_SERVICE_DATE, MAX(DATE_TRUNC (DAY,START_AT)) AS LAST_SERVICE_DATE
	FROM DISC_PROD.ALAYACARE.VISIT VISITS
	LEFT JOIN CLIENT C ON VISITS.CLIENT_ID =C.CLIENT_ID AND VISITS.BRANCH_ID=C.BRANCH_ID
	WHERE  VISITS.IS_PAID = 1 OR VISITS.IS_INVOICED = 1 OR VISITS.VISIT_COMPLETED = 1
	GROUP BY NVL(C.MASTER_ID::INT,VISITS.CLIENT_ID::INT),NVL(C.BRANCH_ID::INT,VISITS.BRANCH_ID::INT ) 
)
--add branch id in ctes below
,
CLIENT_LATEST_STATUS AS (
SELECT * FROM DISC_PROD.AlayaCare.Client_Status CS
JOIN (
SELECT CLIENT_ID AS CLIENT_IDL ,MAX(ID) AS ID,BRANCH_ID  AS BRANCH_IDL
FROM  DISC_PROD.AlayaCare.Client_Status CS 
GROUP BY CLIENT_ID,BRANCH_ID 
)LATEST_CLIENT_DATA
ON LATEST_CLIENT_DATA.ID=CS.ID
)
,
CLIENT_ONHOLD AS (
SELECT * FROM DISC_PROD.AlayaCare.Client_Status CS  
JOIN (
SELECT CLIENT_ID AS CLIENT_IDH ,MAX(ID) AS ID,BRANCH_ID AS BRANCH_IDH
FROM  DISC_PROD.AlayaCare.Client_Status CS 
WHERE TRIM(UPPER(CLIENT_STATUS)) IN ('ON_HOLD')
GROUP BY CLIENT_ID,BRANCH_ID 
)LATEST_CLIENT_DATA
ON LATEST_CLIENT_DATA.ID=CS.ID
)
	SELECT CLIENT_KEY
	FROM (
		SELECT
			MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), 'Unknown') || ' (' || NVL(C.BRANCH_ID,-1) || ')' || '-' || NVL(C.MASTER_ID::STRING,'') || '-' || 'ALAYACARE') CLIENT_KEY
			,C.MASTER_ID AS CLIENT_NUMBER
			,NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), 'Unknown') || ' (' || NVL(C.BRANCH_ID,-1) || ')' AS SYSTEM_CODE
			,9 AS SOURCE_SYSTEM_ID
			,MD5(C.PROFILE_SSN) AS CLIENT_PID 
			--,IFF(LEN(C.PROFILE_BIRTHDAY)=10,IFF(C.PROFILE_BIRTHDAY='--',NULL,TO_DATE(C.PROFILE_BIRTHDAY,'YYYY-MM-DD')),NULL) AS CLIENT_DOB
			,COALESCE(TRY_TO_DATE(C.PROFILE_BIRTHDAY,'YYYY-MM-DD'),TRY_TO_DATE(C.PROFILE_BIRTHDAY,'YYYY-M-DD')) AS CLIENT_DOB --yyyy-m-dd
			,NULL AS CLIENT_DATE_OF_DEATH 
			,CASE WHEN UPPER(TRIM(C.PROFILE_GENDER)) = 'M' THEN 'MALE'
					WHEN UPPER(TRIM(C.PROFILE_GENDER)) = 'F' THEN 'FEMALE'
					ELSE NULL 
			END AS CLIENT_GENDER
			,CASE WHEN TRIM(C.PROFILE_ETHNICITY) LIKE '%Black or African%' THEN 'Black or African American'
					WHEN TRIM(C.PROFILE_ETHNICITY) LIKE '%White%' THEN 'White'
					WHEN TRIM(C.PROFILE_ETHNICITY) LIKE '%Asian' THEN 'Asian'
					WHEN TRIM(C.PROFILE_ETHNICITY) LIKE '%Hispanic or Latino%' THEN 'Hispanic or Latino'
					WHEN TRIM(C.PROFILE_ETHNICITY) LIKE '%American Indian or Alaskan Native%' THEN 'American Indian or Alaskan Native'
					ELSE C.PROFILE_ETHNICITY END AS Client_Ethnicity
			,CASE UPPER(TRIM(C.PROFILE_MARITAL_STATUS))
				WHEN 'D' THEN 'Divorced'
				WHEN 'S' THEN 'Single'
				WHEN 'W' THEN 'Widowed'
				WHEN 'M' THEN 'Married'
				WHEN 'SEP' THEN 'SEPARATED'
				WHEN 'DIVORCED' THEN 'Divorced'
				WHEN 'SINGLE' THEN 'Single'
				WHEN 'WIDOWED' THEN 'Widowed'
				WHEN 'WIDOW' THEN 'Widowed'
				WHEN 'SEPARATED' THEN 'SEPARATED'
				WHEN 'MARRIED' THEN 'Married'
				ELSE NULL END AS CLIENT_MARITAL_STATUS -- ASK FRANK add null or  C.PROFILE_MARITAL_STATUS
			,UPPER(TRIM(C.PROFILE_SALUTATION)) AS CLIENT_SALUTATION
			,UPPER(TRIM(C.PROFILE_FIRST_NAME)) AS CLIENT_FIRST_NAME
			,NULL AS CLIENT_MIDDLE_NAME
			,LEFT(UPPER(TRIM(C.PROFILE_LAST_NAME)), 50) AS CLIENT_LAST_NAME
			,CONCAT(UPPER(TRIM(C.PROFILE_LAST_NAME)), ', ' , UPPER(TRIM(C.PROFILE_FIRST_NAME)),'') AS CLIENT_NAME
			,C.PROFILE_ADDRESS AS CLIENT_ADDRESS1
			,C.PROFILE_ADDRESS_SUITE AS CLIENT_ADDRESS2 
			,UPPER(TRIM(C.PROFILE_CITY)) AS CLIENT_CITY
			,UPPER(TRIM(C.PROFILE_STATE)) AS CLIENT_STATE_CODE
			,TRIM(C.PROFILE_ZIP) AS CLIENT_ZIP
			,NULL AS CLIENT_CLN_ADDRESS1
			,NULL AS CLIENT_CLN_ADDRESS2
			,NULL AS CLIENT_CLN_CITY
			,NULL AS CLIENT_CLN_STATE_CODE
			,NULL AS CLIENT_CLN_ZIP
			,NULL AS CLIENT_STD_ADDRESS1
			,NULL AS CLIENT_STD_ADDRESS2
			,NULL AS CLIENT_STD_CITY
			,NULL AS CLIENT_STD_STATE_CODE
			,NULL AS CLIENT_STD_ZIP
			,NULL AS CLIENT_HOME_PHONE
			,REGEXP_REPLACE(SUBSTR(C.PROFILE_PHONE_MAIN,1,14), '(d{3})[s-]*(d{3})[s-]*(d{4})','($1) $2-$3') AS CLIENT_CELL_PHONE 
			,REGEXP_REPLACE(SUBSTR(C.PROFILE_PHONE_PERSONAL,1,14), '(d{3})[s-]*(d{3})[s-]*(d{4})','($1) $2-$3') AS CLIENT_WORK_PHONE --IT HAS NULL VALUES  -- add same as client cell phone
			,REGEXP_REPLACE(SUBSTR(TRIM(C.PROFILE_FAX),1,14), '(d{3})[s-]*(d{3})[s-]*(d{4})','($1) $2-$3') AS CLIENT_FAX_NUMBER --add same as client cell phone
			,UPPER(TRIM(C.PROFILE_EMAIL)) AS CLIENT_PERSONAL_EMAIL
			--,IFF(LEN(C.PROFILE_REFERRAL_DATE)=10,IFF(C.PROFILE_REFERRAL_DATE='--',NULL,TO_DATE(C.PROFILE_REFERRAL_DATE,'YYYY-MM-DD')),NULL) AS REFERRAL_DATE
			,COALESCE(TRY_TO_DATE(C.PROFILE_REFERRAL_DATE,'YYYY-MM-DD'),TRY_TO_DATE(C.PROFILE_REFERRAL_DATE,'YYYY-M-DD')) AS REFERRAL_DATE --yyyy-m-dd
			,IFF(REFERRAL_DATE>S.FIRST_SERVICE_DATE,0,DATEDIFF(DAY, REFERRAL_DATE,S.FIRST_SERVICE_DATE)) AS DAYS_TO_SERVICE --ref>first - then 0		-- REF DATE - FIRST SERVICE DATE DIFF --DATAFLEX LOGIC CHECK
			,NULL AS CONTRACT_BEGIN_DATE   --ASK
			,NULL AS CONTRACT_END_DATE   --ASK
			,S.FIRST_SERVICE_DATE  --FIRST COMING FROM FACT_VISIT--CHANGED TO VISIT
			,S.LAST_SERVICE_DATE   --FIRST COMING FROM FACT_VISIT--CHANGED TO VISIT
			--,IFF(PROFILE_START_ON='--',NULL,TO_DATE(PROFILE_START_ON)) AS BEGIN_DATE --NEET TO BRING
			,COALESCE(TRY_TO_DATE(PROFILE_START_ON,'YYYY-MM-DD'),TRY_TO_DATE(PROFILE_START_ON,'YYYY-M-DD')) AS BEGIN_DATE --yyyy-m-dd
			,IFF(UPPER(TRIM(C.PROPERTIES_TBL_GT_ACCOUNT_IDSTATUS)) IN ('DISCHARGED'),IFF(UPPER(TRIM(CLS.CLIENT_STATUS)) IN ('DISCHARGED'),CLS.EFFECTIVE_DATE,NULL),NULL) AS END_DATE --SHOULD WE USE LAST SERVICE DATE IF THERE IS NO DISCHARGE STATUS ?? ASK FRANK
			,CASE WHEN UPPER(TRIM(C.PROPERTIES_TBL_GT_ACCOUNT_IDSTATUS)) IN ('DISCHARGED') THEN FALSE
			ELSE TRUE END AS ACTIVE_CLIENT_FLAG 
			,CASE WHEN UPPER(TRIM(C.PROPERTIES_TBL_GT_ACCOUNT_IDSTATUS)) IN ('ON_HOLD') THEN TRUE
			ELSE FALSE END AS ON_HOLD_FLAG
			,IFF(UPPER(TRIM(CLH.CLIENT_STATUS)) IN ('ON_HOLD'),CLH.EFFECTIVE_DATE,NULL) AS ON_HOLD_START_DATE
			,IFF(UPPER(TRIM(CLH.CLIENT_STATUS)) IN ('ON_HOLD'),CLH.EFFECTIVE_DATE_TO,NULL ) AS ON_HOLD_END_DATE
			,C.PROFILE_IMPORT_ID AS LINKED_ID
			,NULL AS ACQUIRED_FROM_COMPANY_KEY
			,NULL AS ACQUIRED_FROM_COMPANY_ID
			,NULL AS ACQUIRED_FROM_COMPANY_FULL_NAME
			,NULL AS ACQUISITION_DATE
			,NULL AS ACQUISITION_FLAG
			,NULL AS ADMISSION_DATE
			,NULL AS ADMISSION_FLAG
			,NULL AS CLIENT_CONVERTED_FLAG --?? ASK FRANK
			,MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), 'Unknown') || ' (' || NVL(C.BRANCH_ID,-1) || ')'||'-'||UPPER(TRIM(B.PROFILE_STATE)) || '-' || NVL(G.GROUP_ID,-1) || '-' || 'ALAYACARE') AS PRIMARY_SUPERVISOR_KEY --DIM_SUPERVISOR
			,UPPER(TRIM(B.PROFILE_STATE)) ||'-'|| NVL(G.GROUP_ID,-1) AS PRIMARY_SUPERVISOR_CODE--add state from branch
			,UPPER(TRIM(G.PROFILE_COMPANY))|| ' SUPERVISOR' AS PRIMARY_SUPERVISOR_NAME --NEED TO BRING
			,NULL AS SECONDARY_SUPERVISOR_KEY
			,NULL AS SECONDARY_SUPERVISOR_CODE
			,NULL AS SECONDARY_SUPERVISOR_NAME
			,MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), 'Unknown') || ' (' || NVL(C.BRANCH_ID,-1) || ')' || '-' || NVL(G.GROUP_ID,-1) || '-' || 'ALAYACARE') AS PRIMARY_BRANCH_KEY --NEED TO TAKE FROM BRANCH
			,NVL(UPPER(TRIM(G.PROFILE_COMPANY)), 'Unknown (' || NVL(G.GROUP_ID, -1) || ')') AS PRIMARY_BRANCH_NAME 
			,UPPER(TRIM(COALESCE(STATE.STATE_ISO_CODE, COMPANY.PROFILE_STATE))) AS PRIMARY_BRANCH_STATE
			,NULL AS GUARANTOR_NAME
			,NULL AS NOTES
			,NULL AS AGENCY
			,TO_DATE('1900-01-01', 'YYYY-MM-DD') AS EFFECTIVE_FROM_DATE
			,TO_DATE('9999-12-31', 'YYYY-MM-DD') AS EFFECTIVE_TO_DATE,
			-1 AS ETL_TASK_KEY,
			-1 AS ETL_INSERTED_TASK_KEY,
			convert_timezone('UTC', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
			CURRENT_USER as ETL_INSERTED_BY,
			convert_timezone('UTC', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE,
			CURRENT_USER as ETL_LAST_UPDATED_BY,
			0 as ETL_DELETED_FLAG,
			0 as ETL_INFERRED_MEMBER_FLAG
	FROM DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MASTER_LIST AS C
	LEFT JOIN DISC_PROD.ALAYACARE.TBL_GUID_COST_CENTRE_TIER_4 COST_CENTRE_MAPPING
	ON COST_CENTRE_MAPPING.GUID_TO = C.GUID
	LEFT JOIN DISC_PROD.ALAYACARE.TBL_COST_CENTRES_TIER_4 AS COST_CENTRE
	ON COST_CENTRE.ID = COST_CENTRE_MAPPING.COST_CENTRE_ID
	LEFT JOIN DISC_PROD.ALAYACARE.GROUPS AS G
	ON G.BRANCH_ID = COST_CENTRE.PROPERTIES_BRANCH_ID
	AND G.PROFILE_COMPANY = COST_CENTRE.PROPERTIES_DESCRIPTION
	LEFT JOIN DISC_PROD.ALAYACARE.BRANCH B 
		ON B.BRANCH_ID = COALESCE(C.BRANCH_ID, G.BRANCH_ID)
	LEFT JOIN ALAYACARE_SERVICE_DATES AS S 
	ON S.CLIENT_ID = C.MASTER_ID
	AND C.BRANCH_ID=S.BRANCH_ID
	LEFT JOIN CLIENT_LATEST_STATUS CLS ON CLS.CLIENT_ID=C.CLIENT_ID 
	AND CLS.BRANCH_ID=C.BRANCH_ID 
	LEFT JOIN CLIENT_ONHOLD CLH ON CLH.CLIENT_ID=C.CLIENT_ID
	AND CLH.BRANCH_ID=C.BRANCH_ID
	LEFT JOIN DISC_PROD.ALAYACARE.BRANCH AS COMPANY
		ON COMPANY.BRANCH_ID = C.BRANCH_ID
	LEFT JOIN HAH.DIM_STATE AS STATE
		ON UPPER(TRIM(STATE.STATE_NAME)) = UPPER(TRIM(COMPANY.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION))
	) L
	WHERE L.SYSTEM_CODE = 'Georgia (1002)';