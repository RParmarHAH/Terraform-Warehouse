create or replace view DW_PROD.INTEGRATION.VW_WORKDAY_CROSSWALK_DEDUPE_OUTPUT(
	ID,
	SOURCE,
	SYSTEM_CODE,
	ETL_INSERTED_DATE
) as
SELECT DISTINCT EMPLOYEE_ID as id,'WORKDAY' AS SOURCE,LOCATION_HIERARCHY AS SYSTEM_CODE, CURRENT_TIMESTAMP AS ETL_INSERTED_DATE
  FROM  DW_PROD.STAGE.WORKDAY_DIM_EMPLOYEE where EMPLOYEE_ID not in 
(select COALESCE(WORKDAY_INTERNAL_ID,RANDOM()) fROM DW_PROD.INTEGRATION.EMPLOYEE_CROSS_WALK  where WORKDAY_INTERNAL_ID is not null AND INACTIVE = FALSE and DUP_FLAG = FALSE)
  union 
SELECT EMPLOYEE_ENTERPRISE_ID::VARCHAR  as id ,'CROSSWALK' AS SOURCE,SYSTEM_CODE , CURRENT_TIMESTAMP  AS ETL_INSERTED_DATE
  FROM DW_PROD.INTEGRATION.EMPLOYEE_CROSS_WALK C
LEFT JOIN DW_PROD.HAH.DIM_EMPLOYEE E ON C.AMS_EMPLOYEE_KEY = E.EMPLOYEE_KEY
where C.AMS_EMPLOYEE_KEY IS NOT NULL AND INACTIVE = FALSE and DUP_FLAG = FALSE
union 
SELECT distinct EMPLOYEE_ENTERPRISE_ID::VARCHAR  as id ,'CROSSWALK' AS SOURCE,SYSTEM_CODE, CURRENT_TIMESTAMP AS ETL_INSERTED_DATE
  FROM DW_PROD.INTEGRATION.EMPLOYEE_CROSS_WALK C
LEFT JOIN DW_PROD.HAH.DIM_EMPLOYEE E ON C.PAYROLL_EMPLOYEE_KEY = E.EMPLOYEE_KEY 
where C.AMS_EMPLOYEE_KEY IS null and C.PAYROLL_EMPLOYEE_KEY is not null  AND INACTIVE = FALSE and DUP_FLAG = FALSE ;