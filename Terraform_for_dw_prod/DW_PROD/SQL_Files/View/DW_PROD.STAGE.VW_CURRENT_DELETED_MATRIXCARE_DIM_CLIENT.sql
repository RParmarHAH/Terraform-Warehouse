create or replace view DW_PROD.STAGE.VW_CURRENT_DELETED_MATRIXCARE_DIM_CLIENT(
	CLIENT_KEY
) as
WITH CLIENT_PHONENUMBER_LIST AS (
	SELECT *
	FROM (
		SELECT T.CLPH_ID, T.CLPH_CLIENTID, T.CLPH_PHONETYPE, TRIM(T.CLPH_PHONE) AS CLPH_PHONE,
			ROW_NUMBER() OVER (PARTITION BY T.CLPH_CLIENTID, T.CLPH_PHONETYPE ORDER BY T.CLPH_SEQUENCE DESC) AS RN,
			MAX(T.ETL_LAST_UPDATED_DATE) OVER (PARTITION BY T.CLPH_CLIENTID) AS ETL_LAST_UPDATED_DATE
		FROM DISC_PROD.MATRIXCARE.STVHC_T_CLIENTPHONES T
	) AS L
	WHERE L.RN = 1
), 
CLIENT_PHONENUMBER AS
(
	SELECT L.CLPH_CLIENTID, L.ETL_LAST_UPDATED_DATE,
		FAX.CLPH_PHONE AS CLIENT_FAX_NUMBER,
		HOME.CLPH_PHONE AS CLIENT_HOME_PHONE,
		WORK.CLPH_PHONE AS CLIENT_WORK_PHONE,
		CELL.CLPH_PHONE AS CLIENT_CELL_PHONE
	FROM (
		SELECT DISTINCT CLPH_CLIENTID, ETL_LAST_UPDATED_DATE
		FROM CLIENT_PHONENUMBER_LIST
	) AS L
	LEFT JOIN CLIENT_PHONENUMBER_LIST AS FAX
		ON FAX.CLPH_CLIENTID = L.CLPH_CLIENTID AND FAX.CLPH_PHONETYPE = 1
	LEFT JOIN CLIENT_PHONENUMBER_LIST AS HOME
		ON HOME.CLPH_CLIENTID = L.CLPH_CLIENTID AND HOME.CLPH_PHONETYPE = 2
	LEFT JOIN CLIENT_PHONENUMBER_LIST AS WORK
		ON WORK.CLPH_CLIENTID = L.CLPH_CLIENTID AND WORK.CLPH_PHONETYPE = 3
	LEFT JOIN CLIENT_PHONENUMBER_LIST AS CELL
		ON CELL.CLPH_CLIENTID = L.CLPH_CLIENTID AND CELL.CLPH_PHONETYPE = 4
),
CLIENT_DISTINCT AS
( 
	SELECT * FROM 
	(
		SELECT A.*, MASTER_CLIENT_KEY,MASTER_CLIENT_NUMBER
		,CASE WHEN B.MASTER_CLIENT_KEY IS NOT NULL THEN 
		ROW_NUMBER() OVER (PARTITION BY B.MASTER_CLIENT_KEY ORDER BY B.CLIENT_NUMBER DESC  ) 
			ELSE 1  END AS RN 
		FROM DISC_PROD.MATRIXCARE.HIST_STVHC_T_CLIENT A
		LEFT JOIN DISC_PROD.MATRIXCARE.MATRIXCARE_MASTER_CLIENT_MAPPING_ALL B ON A.CLI_ID= B.CLIENT_NUMBER 
		WHERE A.ETL_DELETED_FLAG = TRUE
			AND CAST(A.ETL_LAST_UPDATED_DATE AS DATE) IN (SELECT CAST(MAX(ETL_LAST_UPDATED_DATE) AS DATE) FROM DISC_PROD.MATRIXCARE.HIST_STVHC_T_CLIENT)
			AND B.MASTER_CLIENT_KEY IS NULL
	) 	WHERE RN =1
)
SELECT
 MD5( 'MATRIXCARE' || '-' || NVL(COALESCE (MASTER_CLIENT_NUMBER::STRING,CLI_ID::STRING),'') || '-' || 'MATRIXCARE') CLIENT_KEY
FROM CLIENT_DISTINCT CLI
LEFT JOIN HAH.DIM_STATE ST1 ON ST1.STATE_ISO_CODE = CLI.CLI_STATEORPROVINCE 
LEFT JOIN HAH.DIM_STATE ST2 ON ST1.STATE_ISO_CODE IS NULL AND UPPER(ST2.STATE_NAME) = UPPER(CLI.CLI_STATEORPROVINCE)
LEFT JOIN HAH.DIM_ZIP_CODE Z ON ST1.STATE_ISO_CODE IS NULL AND ST2.STATE_ISO_CODE IS NULL AND Z.ZIP_CODE = LEFT(TRIM(CLI.CLI_POSTALCODE), 5)
LEFT JOIN CLIENT_PHONENUMBER CPH ON CLI.CLI_ID = CPH.CLPH_CLIENTID
LEFT JOIN DISC_PROD.MATRIXCARE.STVHC_T_RACE RACE ON RACE.RCE_ID = CLI.CLI_RACEID
LEFT JOIN DISC_PROD.MATRIXCARE.MATRIXCARE_MASTER_BRANCH_MAPPING AS BRANCH_MAPPING
	ON BRANCH_MAPPING.SOURCE_SYSTEM_ID = 7 AND BRANCH_MAPPING.SYSTEM_CODE = 'MATRIXCARE'
		AND BRANCH_MAPPING.OFFICE_CODE = CLI.CLI_BRANCHID::STRING
LEFT JOIN HAH.DIM_BRANCH AS CLIENT_BRANCH 
	ON CLIENT_BRANCH.SOURCE_SYSTEM_ID = 7 AND CLIENT_BRANCH.SYSTEM_CODE = 'MATRIXCARE'
		AND CLIENT_BRANCH.OFFICE_CODE = COALESCE(BRANCH_MAPPING.CONVERGED_OFFICE_CODE, CLI.CLI_BRANCHID::STRING)
LEFT JOIN DISC_PROD.MATRIXCARE.STVHC_T_BRANCHES BR ON BR.BR_ID = COALESCE(BRANCH_MAPPING.CONVERGED_OFFICE_CODE, CLI.CLI_BRANCHID::STRING)
WHERE (CLI.ETL_LAST_UPDATED_DATE >= '1900-01-01'
OR CPH.ETL_LAST_UPDATED_DATE >= '1900-01-01'
OR RACE.ETL_LAST_UPDATED_DATE >= '1900-01-01'
OR CLIENT_BRANCH.ETL_LAST_UPDATED_DATE >= '1900-01-01');