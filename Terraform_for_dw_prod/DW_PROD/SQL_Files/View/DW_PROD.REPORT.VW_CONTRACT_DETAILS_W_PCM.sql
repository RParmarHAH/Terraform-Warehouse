create or replace view DW_PROD.REPORT.VW_CONTRACT_DETAILS_W_PCM(
	PARTNER_CONTRACT_SERVICE_KEY,
	TYPE,
	SOURCE_SYSTEM_ID,
	SOURCE_SYSTEM_NAME,
	OFFICE_STATE_CODE,
	PARTNER_KEY,
	PARENT_PARTNER_KEY,
	PARTNER_CODE,
	PARTNER_NAME,
	PARENT_PARTNER_NAME,
	PARTNER_CONTRACT_KEY,
	CONTRACT_KEY,
	CONTRACT_CODE,
	CONTRACT_NAME,
	SERVICE_KEY,
	SERVICE_CODE,
	SERVICE_NAME,
	BILL_CODE,
	BILL_NAME,
	REVENUE_CATEGORY,
	REVENUE_SUBCATEGORY_CODE,
	REVENUE_SUBCATEGORY_NAME,
	BILLABLE_FLAG,
	PAYABLE_FLAG,
	EXPENSE_FLAG,
	MILEAGE_FLAG,
	IS_CONFIRMED_VISIT
) as
WITH VISIT_DATA AS (
SELECT DISTINCT PARTNER_CONTRACT_SERVICE_KEY, CONTRACT_KEY, CONTRACT_CODE, OFFICE_STATE_CODE,
SUM(COUNT(IFF(CONFIRMED_FLAG = 'YES',VISIT_KEY,NULL))) OVER(PARTITION BY PARTNER_CONTRACT_SERVICE_KEY) AS VISITS_ALL
FROM INTEGRATION.FACT_VISIT_MERGED  V  
LEFT JOIN INTEGRATION.DIM_BRANCH_MERGED B ON V.BRANCH_KEY = B.BRANCH_KEY
GROUP BY ALL
)
,CONTRACT AS (
SELECT CC.CONTRACT_KEY,CC.CONTRACT_CODE,CC.SOURCE_SYSTEM_ID,CC.SYSTEM_CODE,CC.SERVICE_CODE_ID,CC.CONTRACT_STATE_CODE,
CC.REVENUE_CATEGORY,CC.REVENUE_SUBCATEGORY_CODE,
ROW_NUMBER () OVER (PARTITION BY CC.CONTRACT_CODE,CC.SOURCE_SYSTEM_ID,CC.SYSTEM_CODE,CC.SERVICE_CODE_ID,CC.CONTRACT_STATE_CODE,
CC.REVENUE_CATEGORY,CC.REVENUE_SUBCATEGORY_CODE ORDER BY CC.CONTRACT_KEY ) AS RN FROM HAH.DIM_CONTRACT CC
QUALIFY RN=1
)
, DATA AS (
SELECT DISTINCT 
PCS.ORIGINAL_PARTNER_CONTRACT_SERVICE_KEY AS PARTNER_CONTRACT_SERVICE_KEY,
PCS.SCHEDULE_TYPE AS TYPE,
PCS.ORIGINAL_SOURCE_SYSTEM_ID AS SOURCE_SYSTEM_ID,
SS.SYSTEM_DESCRIPTION AS SOURCE_SYSTEM_NAME,
COALESCE(VD.OFFICE_STATE_CODE,PCS.STATE) OFFICE_STATE_CODE, 
COUNT(OFFICE_STATE_CODE) OVER (PARTITION BY PCS.ORIGINAL_PARTNER_CONTRACT_SERVICE_KEY) AS COUNT,-- (From DIM_BRANCH via FACT_VISIT)
COALESCE(P.PARTNER_KEY,PC.ORIGINAL_PARTNER_KEY) AS PARTNER_KEY,
P.PARENT_PARTNER_KEY,
PCS.PARTNER_CODE,
PCS.PARTNER_NAME,
P.PARENT_PARTNER_NAME,
PCS.ORIGINAL_PARTNER_CONTRACT_KEY AS PARTNER_CONTRACT_KEY,
COALESCE(VD.CONTRACT_KEY,CC.CONTRACT_KEY) AS CONTRACT_KEY,
COALESCE(VD.CONTRACT_CODE,CC.CONTRACT_CODE,PCS.CONTRACT_CODE) AS CONTRACT_CODE,
PCS.CONTRACT_NAME,
PCS.SERVICE_KEY,
PCS.SERVICE_CODE,
PCS.SERVICE_NAME,
PCS.BILL_CODE,
PCS.BILL_NAME,
S.REVENUE_CATEGORY,
S.REVENUE_SUBCATEGORY_CODE,
S.REVENUE_SUBCATEGORY_NAME,
PCS.BILLABLE_FLAG,
PCS.PAYABLE_FLAG,
PCS.EXPENSE_FLAG,
PCS.MILEAGE_FLAG,
IFF(VISITS_ALL>0,TRUE,FALSE) AS IS_CONFIRMED_VISIT
FROM INTEGRATION.FACT_PARTNER_CONTRACT_SERVICE_MERGED PCS 
LEFT JOIN VISIT_DATA vd ON VD.PARTNER_CONTRACT_SERVICE_KEY = PCS.ORIGINAL_PARTNER_CONTRACT_SERVICE_KEY 
LEFT JOIN INTEGRATION.DIM_PARTNER_CONTRACT_MERGED PC ON PC.ORIGINAL_PARTNER_CONTRACT_KEY = PCS.ORIGINAL_PARTNER_CONTRACT_KEY 
LEFT JOIN HAH.DIM_PARTNER P ON P.PARTNER_KEY = PC.ORIGINAL_PARTNER_KEY 
LEFT JOIN HAH.DIM_SERVICES S ON PCS.SERVICE_KEY = S.SERVICE_KEY
LEFT JOIN CONTRACT CC ON CC.CONTRACT_CODE = PCS.CONTRACT_CODE AND PCS.ORIGINAL_SOURCE_SYSTEM_ID = CC.SOURCE_SYSTEM_ID
AND CC.SYSTEM_CODE = PCS.ORIGINAL_SYSTEM_CODE AND PCS.SERVICE_CODE = CC.SERVICE_CODE_ID AND CC.CONTRACT_STATE_CODE = PCS.STATE
AND CC.REVENUE_CATEGORY = S.REVENUE_CATEGORY AND CC.REVENUE_SUBCATEGORY_CODE = S.REVENUE_SUBCATEGORY_CODE
LEFT JOIN HAH.DIM_SOURCE_SYSTEM SS ON PCS.ORIGINAL_SOURCE_SYSTEM_ID =SS.SOURCE_SYSTEM_ID
)
SELECT PARTNER_CONTRACT_SERVICE_KEY,TYPE,SOURCE_SYSTEM_ID,SOURCE_SYSTEM_NAME,OFFICE_STATE_CODE,PARTNER_KEY,PARENT_PARTNER_KEY,
PARTNER_CODE,PARTNER_NAME,PARENT_PARTNER_NAME,PARTNER_CONTRACT_KEY,CONTRACT_KEY,CONTRACT_CODE,CONTRACT_NAME, -- (From DIM_BRANCH via FACT_VISIT)
SERVICE_KEY,SERVICE_CODE,SERVICE_NAME,BILL_CODE,BILL_NAME,REVENUE_CATEGORY,REVENUE_SUBCATEGORY_CODE,
REVENUE_SUBCATEGORY_NAME,BILLABLE_FLAG,PAYABLE_FLAG,EXPENSE_FLAG,MILEAGE_FLAG,IS_CONFIRMED_VISIT FROM DATA
WHERE CASE WHEN COUNT>1 THEN OFFICE_STATE_CODE IS NOT NULL WHEN COUNT>=0 THEN 1=1 END
AND CONTRACT_KEY IS NOT NULL;