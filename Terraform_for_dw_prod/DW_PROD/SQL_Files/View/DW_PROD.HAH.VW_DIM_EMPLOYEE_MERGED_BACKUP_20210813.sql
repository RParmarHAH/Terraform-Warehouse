create or replace view DW_PROD.HAH.VW_DIM_EMPLOYEE_MERGED_BACKUP_20210813(
	ORIGINAL_EMPLOYEE_KEY,
	ORIGINAL_SOURCE_SYSTEM_ID,
	ORIGINAL_SYSTEM_CODE,
	ORIGINAL_EMPLOYEE_NUMBER,
	EMPLOYEE_KEY,
	EMPLOYEE_ID,
	SYSTEM_CODE,
	SOURCE_SYSTEM_ID,
	EMPLOYEE_PID,
	EMPLOYEE_NUMBER,
	EMPLOYEE_DOB,
	EMPLOYEE_DATE_OF_DEATH,
	EMPLOYEE_HIRE_DATE,
	EMPLOYEE_REHIRE_DATE,
	EMPLOYEE_BENEFIT_START_DATE,
	EMPLOYEE_FIRST_CHECK_DATE,
	EMPLOYEE_LAST_CHECK_DATE,
	EMPLOYEE_LAST_WORKED_DATE,
	EMPLOYEE_TERMINATE_DATE,
	REASON_TO_TERMINATE,
	ACTIVE_EMPLOYEE_FLAG,
	ABLE_TO_REHIRE_FLAG,
	EMPLOYEE_PREFIX,
	EMPLOYEE_FIRST_NAME,
	EMPLOYEE_MIDDLE_NAME,
	EMPLOYEE_LAST_NAME,
	EMPLOYEE_SUFFIX,
	EMPLOYEE_ADDRESS1,
	EMPLOYEE_ADDRESS2,
	EMPLOYEE_CITY,
	EMPLOYEE_STATE_CODE,
	EMPLOYEE_ZIP,
	EMPLOYEE_HOME_PHONE,
	EMPLOYEE_CELL_PHONE,
	EMPLOYEE_WORK_PHONE,
	EMPLOYEE_PERSONAL_EMAIL,
	EMPLOYEE_WORK_EMAIL,
	LINKED_IN_PROFILE_URL,
	EMPLOYEE_GENDER,
	EMPLOYEE_ETHNICITY,
	EMPLOYEE_LANGUAGE,
	EMPLOYEE_MARITAL_STATUS,
	EMPLOYEE_TYPE,
	EMPLOYEE_CATEGORY,
	EXEMPT_FLAG,
	JOB_TITLE,
	JOB_DESCRIPTION,
	CLASS_ID,
	WORKERS_COMP,
	PAYROLL_ID,
	PERCENT_401K_DEDUCTION,
	AMOUNT_401K_DEDUCTION,
	JAZZHR_APPLICANT_ID,
	JAZZHR_USER_ID,
	JAZZHR_CONTACT_ID,
	WORK_STATE,
	SUTA_STATE,
	EMPLOYEE_DEPARTMENT,
	EMPLOYEE_OFFICE_CODE,
	PRIMARY_BRANCH_KEY,
	PRIMARY_BRANCH_STATE,
	PRIMARY_BRANCH_NAME,
	PRIMARY_BRANCH_SYSTEM_CODE,
	CASE_MANAGER_FLAG,
	SUPERVISOR_FLAG,
	COORDINATOR_FLAG,
	EFFECTIVE_FROM_DATE,
	EFFECTIVE_TO_DATE,
	MDM_DIM_EMPLOYEE_KEY,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG,
	ETL_INFERRED_MEMBER_FLAG
) as
WITH DATAFLEX_EMPLOYEES AS (
	SELECT EMPLOYEE.EMPLOYEE_KEY, LIST.SYSTEM_CODE, EMPLOYEE.EMPLOYEE_PID
	FROM (
		SELECT SOURCE_SYSTEM_ID, IFF(SYSTEM_CODE IN ('GA', 'SC'), 'GA', SYSTEM_CODE) AS SYSTEM_CODE, EMPLOYEE_PID 
		FROM HAH.DIM_EMPLOYEE
		WHERE SOURCE_SYSTEM_ID = 3
		GROUP BY SOURCE_SYSTEM_ID, IFF(SYSTEM_CODE IN ('GA', 'SC'), 'GA', SYSTEM_CODE), EMPLOYEE_PID
		HAVING COUNT(*) = 1
	) LIST
	JOIN HAH.DIM_EMPLOYEE AS EMPLOYEE
		ON EMPLOYEE.SOURCE_SYSTEM_ID = LIST.SOURCE_SYSTEM_ID AND IFF(EMPLOYEE.SYSTEM_CODE IN ('GA', 'SC'), 'GA', EMPLOYEE.SYSTEM_CODE) = LIST.SYSTEM_CODE AND EMPLOYEE.EMPLOYEE_PID = LIST.EMPLOYEE_PID
), COASTAL_EMPLOYEES AS (
	SELECT EMPLOYEE.EMPLOYEE_KEY, EMPLOYEE.EMPLOYEE_PID
	FROM (
		SELECT EMPLOYEE_PID
		FROM HAH.DIM_EMPLOYEE
		WHERE SOURCE_SYSTEM_ID IN (1, 2)
		GROUP BY EMPLOYEE_PID
		HAVING COUNT(*) = 1
	) LIST
	JOIN HAH.DIM_EMPLOYEE AS EMPLOYEE
		ON EMPLOYEE.SOURCE_SYSTEM_ID IN (1, 2) AND EMPLOYEE.EMPLOYEE_PID = LIST.EMPLOYEE_PID
), EXCEL_EMPLOYEES AS (
	SELECT EMPLOYEE.EMPLOYEE_KEY, EMPLOYEE.EMPLOYEE_PID
	FROM (
		SELECT SOURCE_SYSTEM_ID, EMPLOYEE_PID
		FROM HAH.DIM_EMPLOYEE
		WHERE SOURCE_SYSTEM_ID = 4
		GROUP BY SOURCE_SYSTEM_ID, EMPLOYEE_PID
		HAVING COUNT(*) = 1
	) LIST
	JOIN HAH.DIM_EMPLOYEE AS EMPLOYEE
		ON EMPLOYEE.SOURCE_SYSTEM_ID = LIST.SOURCE_SYSTEM_ID AND EMPLOYEE.EMPLOYEE_PID = LIST.EMPLOYEE_PID
), MERGED_EMPLOYEES AS (
	-- Coastal
	SELECT DATAFLEX.EMPLOYEE_KEY AS OLD_SYSTEM_EMPLOYEE_KEY, COASTAL.EMPLOYEE_KEY AS NEW_SYSTEM_EMPLOYEE_KEY
	FROM DATAFLEX_EMPLOYEES AS DATAFLEX
	JOIN COASTAL_EMPLOYEES AS COASTAL
		ON COASTAL.EMPLOYEE_PID = DATAFLEX.EMPLOYEE_PID
	WHERE DATAFLEX.SYSTEM_CODE = 'GA'
	-- Excel
	UNION ALL
	SELECT DATAFLEX.EMPLOYEE_KEY AS OLD_SYSTEM_EMPLOYEE_KEY, EXCEL.EMPLOYEE_KEY AS NEW_SYSTEM_EMPLOYEE_KEY
	FROM DATAFLEX_EMPLOYEES AS DATAFLEX
	JOIN EXCEL_EMPLOYEES AS EXCEL
		ON EXCEL.EMPLOYEE_PID = DATAFLEX.EMPLOYEE_PID
	WHERE DATAFLEX.SYSTEM_CODE = 'PA'
)
	SELECT EMPLOYEE.EMPLOYEE_KEY AS ORIGINAL_EMPLOYEE_KEY,
		EMPLOYEE.SOURCE_SYSTEM_ID AS ORIGINAL_SOURCE_SYSTEM_ID,
		EMPLOYEE.SYSTEM_CODE AS ORIGINAL_SYSTEM_CODE,
		EMPLOYEE.EMPLOYEE_NUMBER AS ORIGINAL_EMPLOYEE_NUMBER,
		NEW_EMPLOYEE.*
	FROM HAH.DIM_EMPLOYEE AS EMPLOYEE
	LEFT JOIN MERGED_EMPLOYEES AS MERGED_EMPLOYEES
		ON MERGED_EMPLOYEES.OLD_SYSTEM_EMPLOYEE_KEY = EMPLOYEE.EMPLOYEE_KEY
	JOIN HAH.DIM_EMPLOYEE AS NEW_EMPLOYEE
		ON NEW_EMPLOYEE.EMPLOYEE_KEY = COALESCE(MERGED_EMPLOYEES.NEW_SYSTEM_EMPLOYEE_KEY, EMPLOYEE.EMPLOYEE_KEY);