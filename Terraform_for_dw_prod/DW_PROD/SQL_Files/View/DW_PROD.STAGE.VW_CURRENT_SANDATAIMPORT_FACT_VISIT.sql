create or replace view DW_PROD.STAGE.VW_CURRENT_SANDATAIMPORT_FACT_VISIT(
	VISIT_KEY
) as
 WITH avg_bill_rate as (									--- Changed old logic to updated logic from Merge proc below
		SELECT agencyid,admissionid,AVG(RATE) as BILL_RATE 
		FROM DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS
		GROUP BY agencyid,admissionid)
,unit_type AS (
SELECT * FROM (SELECT row_number() OVER (PARTITION BY SCHEDULEID ORDER BY rate desc) rn,AGENCYID ,SCHEDULEID, 
CASE UNITTYPE WHEN '01' THEN 'Hourly' WHEN '02' THEN 'Visit' WHEN '05' THEN 'Hourly' WHEN '06' THEN 'Per Diem' 
	else NULL END AS UNITTYPE  
from DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS 
WHERE AGENCYID ='8485' AND RATE NOT IN (0.00, 0.01) AND (UNITTYPE IS NOT NULL OR UNITTYPE <>'')) WHERE rn=1 )
,scheduled_employee AS (
   SELECT * FROM (SELECT ROW_NUMBER () OVER (PARTITION BY SV.AGENCYID ,SV.SCHEDULEID ORDER BY ETL_LAST_UPDATED_DATE DESC) AS rno,
   SV.AGENCYID ,SV.SCHEDULEID ,SV.STATUS, SV.STAFFAGENCYID  
   FROM DISC_PROD.BI_REPOSITORY.HIST_SANDATAVISITS SV WHERE SV.AGENCYID ='8485' AND SV.STATUS IN('01')) WHERE rno=1)
,DERIVED_STATUS AS (
	SELECT AGENCYID ,SCHEDULEID, CASE WHEN SV.STATUS ='01' AND SV.STAFFAGENCYID IS NULL AND SV.SCHEDULEDATE > CURRENT_DATE() THEN '01OPENFUTURE' 
		 WHEN SV.STATUS ='01' AND SV.STAFFAGENCYID IS NOT NULL AND SV.SCHEDULEDATE > CURRENT_DATE() THEN '01FUTURE'
		 WHEN SV.STATUS ='01' AND SV.STAFFAGENCYID IS NULL AND SV.SCHEDULEDATE <= CURRENT_DATE() THEN '01OPEN' 
		 WHEN SV.STATUS ='01' AND SV.STAFFAGENCYID IS NOT NULL AND SV.SCHEDULEDATE <= CURRENT_DATE() THEN '01'
		ELSE SV.STATUS END AS DERIVED_STATUS
		,md5(4 ||'-'||'8485'||'-'||nvl(DERIVED_STATUS,'S')) AS VISIT_STATUS_KEY
   FROM DISC_PROD.BI_REPOSITORY.SANDATAVISITS SV WHERE AGENCYID ='8485'
),
EMPLOYEE AS 
(
	SELECT * FROM
	(
		SELECT STAFFAGENCYID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.EMPLOYEE_MASTER_LIST
        WHERE AGENCYID=8485
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT STAFFAGENCYID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.EMPLOYEE_MATCH_LIST
		WHERE STAFFAGENCYID NOT IN (SELECT STAFFAGENCYID FROM DISC_DEDUPE_PROD.SANDATAIMPORT.EMPLOYEE_MASTER_LIST ) 
        AND AGENCYID=8485
	) 
), CLIENT AS
(
	SELECT * FROM
	(
		SELECT CLIENTID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MASTER_LIST
        WHERE AGENCYID=8485 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT CLIENTID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MATCH_LIST
		WHERE CLIENTID NOT IN (SELECT CLIENTID FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MASTER_LIST ) 
        AND AGENCYID=8485
	)
)
    SELECT DISTINCT CASE WHEN SV.SERVICEID IN ('CARECO','VBPCG') 
		THEN MD5('CC_'||SV.AGENCYID || '-' || SV.SCHEDULEID || '-' || 'SANDATAIMPORT') 
		ELSE MD5(SV.AGENCYID || '-' || SV.SCHEDULEID || '-' || 'SANDATAIMPORT')
		END AS VISIT_KEY
FROM DISC_PROD.BI_REPOSITORY.SANDATAVISITS SV
LEFT JOIN DISC_PROD.BI_REPOSITORY.EXTERNALIDS EID
	ON EID.DBNAME = 'PA' AND EID.TYP = 'L' AND EID.EXTID = SV.LOCATIONID 
LEFT JOIN EMPLOYEE STF ON STF.AGENCYID=SV.AGENCYID AND STF.STAFFAGENCYID= SV.STAFFAGENCYID
LEFT JOIN HAH.DIM_EMPLOYEE E
	ON E.SYSTEM_CODE = SV.AGENCYID AND SV.SCHEDULEDATE >= E.EFFECTIVE_FROM_DATE AND SV.SCHEDULEDATE < E.EFFECTIVE_TO_DATE  AND E.EMPLOYEE_ID = SV.STAFFAGENCYID
LEFT JOIN CLIENT C ON C.AGENCYID = SV.AGENCYID AND C.CLIENTID = SV.CLIENTID
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS CAD
	ON CAD.AGENCYID = SV.AGENCYID AND CAD.ADMISSIONID = SV.ADMISSIONID 																			--- Changed old logic to updated logic from Merge proc below
LEFT JOIN (SELECT AGENCYID,scheduleid,admissionid,avg(rate) as bill_rate, avg(try_to_number(unittype)) AS unittype
	 from DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS 
	 group by AGENCYID,scheduleid,admissionid) ca on
	sv.agencyid = ca.agencyid and sv.scheduleid = ca.scheduleid
	and sv.admissionid = ca.admissionid 
LEFT JOIN avg_bill_rate avg_bill_rate_ca on
SV.agencyid = avg_bill_rate_ca.agencyid 
and SV.admissionid = avg_bill_rate_ca.admissionid
LEFT JOIN UNIT_TYPE U ON SV.AGENCYID= U.AGENCYID AND SV.SCHEDULEID = U.SCHEDULEID
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULES sch ON SV.AGENCYID = sch.AGENCYID AND SV.SCHEDULEID = sch.SCHEDULEID 
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_REJECTIONCODES r ON sch.REJECTIONCODE = r.code AND sch.agencyid = r.AGENCYID
LEFT JOIN DERIVED_STATUS DSTATUS ON SV.AGENCYID = DSTATUS.AGENCYID AND SV.SCHEDULEID = DSTATUS.SCHEDULEID
LEFT JOIN DW_PROD.HAH.DIM_VISIT_STATUS_MAPPING STATUS ON DSTATUS.VISIT_STATUS_KEY = STATUS.VISIT_STATUS_KEY
--LEFT JOIN DW_PROD.HAH.DIM_VISIT_STATUS_MAPPING STATUS ON SV.AGENCYID = STATUS.system_code AND DSTATUS.DERIVED_STATUS = STATUS.DERIVED_DISC_STATUS AND STATUS.SOURCE_SYSTEM_ID=4
LEFT JOIN scheduled_employee SEMP ON SV.AGENCYID = SEMP.AGENCYID AND SV.SCHEDULEID = SEMP.SCHEDULEID
WHERE SV.AGENCYID = '8485'
AND NVL(SV.STAFFAGENCYID,'') <> '' AND SV.CLIENTID IS NOT NULL
	AND NVL(SV.ADMISSIONTYPE, '') <> '' AND LEN(NVL(SV.STATUS,'')) <= 2 -- Exclude (7) bad data records
    AND SV.ETL_LAST_UPDATED_DATE >= '1900-01-01'
UNION
(WITH clu as (
	    select
	           (CASE WHEN try_to_numeric(OTHERID) is null AND try_to_numeric(CUSTOMID) is null THEN -1
	                WHEN try_to_numeric(OTHERID) is not null AND try_to_numeric(CUSTOMID) is null THEN OTHERID
	                WHEN try_to_numeric(CUSTOMID) is not null AND try_to_numeric(OTHERID) is null THEN CUSTOMID
	                ELSE coalesce(OTHERID, CUSTOMID)
	            END)::INTEGER as DF_CLIENT_NUMBER,
	           AGENCYID,
	           max(CLIENTID) AS CLIENTID
	    from DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTS
	    group by 1,2
	),
	max_client as (
	    select DF_CLIENT_NUMBER,
	            max(CLIENTID) AS CLIENTID
	    from clu
	    GROUP BY 1
	    ),
	avg_bill_rate as (
		SELECT agencyid,admissionid,AVG(RATE) as BILL_RATE 
		FROM DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS
		GROUP BY agencyid,admissionid),
	unit_type AS (
		SELECT * FROM (SELECT row_number() OVER (PARTITION BY SCHEDULEID ORDER BY rate desc) rn,AGENCYID ,SCHEDULEID, 
		CASE UNITTYPE WHEN '01' THEN 'Hourly' WHEN '02' THEN 'Visit' WHEN '05' THEN 'Hourly' WHEN '06' THEN 'Per Diem' 
		else NULL END AS UNITTYPE  
		from DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS 
		WHERE AGENCYID ='8485' AND RATE NOT IN (0.00, 0.01) AND (UNITTYPE IS NOT NULL OR UNITTYPE <>'')) WHERE rn=1 
		)
,scheduled_employee AS (
   SELECT * FROM (SELECT ROW_NUMBER () OVER (PARTITION BY SV.AGENCYID ,SV.SCHEDULEID ORDER BY ETL_LAST_UPDATED_DATE DESC) AS rno,
   SV.AGENCYID ,SV.SCHEDULEID ,SV.EVENTSTATUS, SV.STAFFAGENCYID  
   FROM DISC_PROD.SANDATAIMPORT.HIST_SANDATA_VISITS SV WHERE SV.AGENCYID ='8485' AND SV.EVENTSTATUS IN('01')) WHERE rno=1)
,DERIVED_STATUS AS (
	SELECT SV.AGENCYID ,SV.SCHEDULEID, CASE WHEN SV.EVENTSTATUS ='01' AND SV.STAFFAGENCYID IS NULL AND SV.DATE > CURRENT_DATE() THEN '01OPENFUTURE' 
		 WHEN SV.EVENTSTATUS ='01' AND SV.STAFFAGENCYID IS NOT NULL AND SV.DATE > CURRENT_DATE() THEN '01FUTURE'
		 WHEN SV.EVENTSTATUS ='01' AND SV.STAFFAGENCYID IS NULL AND SV.DATE <= CURRENT_DATE() THEN '01OPEN' 
		 WHEN SV.EVENTSTATUS ='01' AND SV.STAFFAGENCYID IS NOT NULL AND SV.DATE <= CURRENT_DATE() THEN '01'
	ELSE SV.EVENTSTATUS END AS DERIVED_STATUS 
	,md5(4 ||'-'||'8485'||'-'||nvl(DERIVED_STATUS,'S')) AS VISIT_STATUS_KEY
	FROM DISC_PROD.SANDATAIMPORT.SANDATA_VISITS SV WHERE AGENCYID ='8485' --AND EVENTSTATUS='01'
   ),
EMPLOYEE AS 
(
	SELECT * FROM
	(
		SELECT STAFFAGENCYID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.EMPLOYEE_MASTER_LIST
        WHERE AGENCYID=8485
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT STAFFAGENCYID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.EMPLOYEE_MATCH_LIST
		WHERE STAFFAGENCYID NOT IN (SELECT STAFFAGENCYID FROM DISC_DEDUPE_PROD.SANDATAIMPORT.EMPLOYEE_MASTER_LIST ) 
        AND AGENCYID=8485
	) 
), CLIENT AS
(
	SELECT * FROM
	(
		SELECT CLIENTID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MASTER_LIST
        WHERE AGENCYID=8485 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT CLIENTID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MATCH_LIST
		WHERE CLIENTID NOT IN (SELECT CLIENTID FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MASTER_LIST ) 
        AND AGENCYID=8485
	))
	SELECT DISTINCT
		CASE WHEN F.SERVICEID IN ('CARECO','VBPCG') 
		THEN MD5('CC_'||f.agencyID || '-' || f.scheduleid || '-' || 'SANDATAIMPORT')
		ELSE MD5(f.agencyID || '-' || f.scheduleid || '-' || 'SANDATAIMPORT') END  AS VISIT_KEY
		FROM DISC_PROD.SANDATAIMPORT.SANDATA_VISITS f
	left join clu clu
	    on (CASE WHEN try_to_numeric(F.CLIENTOTHERID) is null THEN -1
	            ELSE f.CLIENTOTHERID
	        END)::INTEGER = clu.DF_CLIENT_NUMBER
	    and f.AGENCYID = clu.AGENCYID
	left join max_client mc
	    on (CASE WHEN try_to_numeric(f.CLIENTOTHERID) is null THEN -1
	            ELSE f.CLIENTOTHERID
	        END)::INTEGER = mc.DF_CLIENT_NUMBER
	LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS ClientAdmissions
	    ON ClientAdmissions.agencyID = f.AgencyId
	    AND ClientAdmissions.admissionID = f.AdmissionId
	LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFTIMESHEETS TS ON TS.DBNAME = CLU.AGENCYID
	LEFT JOIN HAH.DIM_BRANCH AS BRANCH ON BRANCH.SYSTEM_CODE::STRING = f.AGENCYID AND BRANCH.OFFICE_CODE = f.LOCATIONID
	LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULES sch ON f.AGENCYID = sch.AGENCYID AND f.SCHEDULEID = sch.SCHEDULEID
	LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_REJECTIONCODES r ON sch.REJECTIONCODE = r.code AND sch.agencyid = r.AGENCYID
	LEFT JOIN 
	(SELECT AGENCYID,avg(try_to_number(unittype)) AS unittype,scheduleid,admissionid,avg(rate) as bill_rate
	 from DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS 
	 group by AGENCYID,scheduleid,admissionid) ca on
	f.agencyid = ca.agencyid and f.scheduleid = ca.scheduleid
	and f.admissionid = ca.admissionid 
	LEFT JOIN avg_bill_rate avg_bill_rate_ca on
	f.agencyid = avg_bill_rate_ca.agencyid 
	and f.admissionid = avg_bill_rate_ca.admissionid 
	LEFT JOIN UNIT_TYPE U ON F.AGENCYID= U.AGENCYID AND F.SCHEDULEID = U.SCHEDULEID 
--	LEFT JOIN HAH.DIM_EMPLOYEE e
--		ON f.STAFFAGENCYID = e.EMPLOYEE_ID
--		AND e.SYSTEM_CODE = nvl(f.agencyID,'S')
--	    AND f.Date >= e.EFFECTIVE_FROM_DATE
--	    AND f.Date < e.EFFECTIVE_TO_DATE
    LEFT JOIN EMPLOYEE STF ON STF.AGENCYID=f.AGENCYID AND STF.STAFFAGENCYID= f.STAFFAGENCYID	
	LEFT JOIN DERIVED_STATUS DSTATUS ON F.AGENCYID = DSTATUS.AGENCYID AND F.SCHEDULEID = DSTATUS.SCHEDULEID
	LEFT JOIN DW_PROD.HAH.DIM_VISIT_STATUS_MAPPING STATUS ON DSTATUS.VISIT_STATUS_KEY = STATUS.VISIT_STATUS_KEY
	--LEFT JOIN HAH.DIM_VISIT_STATUS_MAPPING STATUS ON F.AGENCYID = STATUS.system_code AND DSTATUS.DERIVED_STATUS = STATUS.DERIVED_DISC_STATUS AND STATUS.SOURCE_SYSTEM_ID=4
	LEFT JOIN scheduled_employee SEMP ON F.AGENCYID = SEMP.AGENCYID AND F.SCHEDULEID = SEMP.SCHEDULEID
    LEFT JOIN CLIENT CL ON CL.AGENCYID=clu.AGENCYID AND CL.AGENCYID=ClientAdmissions.AGENCYID
                         AND ClientAdmissions.CLIENTID= CL.CLIENTID AND CL.CLIENTID= CLU.CLIENTID AND MC.CLIENTID = CL.CLIENTID 
	WHERE f.agencyID = 8485 --and f.ADJUSTEDTIMEOUT IS NOT NULL
	AND (f.ETL_LAST_UPDATED_DATE >= '1900-01-01'
		OR sch.ETL_LAST_UPDATED_DATE >= '1900-01-01'
	AND f.STAFFAGENCYID <> '''') --remove test records
	);