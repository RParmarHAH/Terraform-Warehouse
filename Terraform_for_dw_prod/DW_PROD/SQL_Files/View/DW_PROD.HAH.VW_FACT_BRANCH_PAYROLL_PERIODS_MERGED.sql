create or replace view DW_PROD.HAH.VW_FACT_BRANCH_PAYROLL_PERIODS_MERGED(
	BRANCH_PAYROLL_PERIODS_KEY,
	BRANCH_KEY,
	OFFICE_STATE_CODE,
	DETAILED_OFFICE_NAME,
	ORIGINAL_BRANCH_KEY,
	PERIOD_START_DATE,
	PERIOD_END_DATE,
	CHECK_DATE,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG,
	ETL_INFERRED_MEMBER_FLAG
) as
	SELECT PAYROLL_PERIODS.BRANCH_PAYROLL_PERIODS_KEY,
		COALESCE(BRANCH_MERGED.BRANCH_KEY, PAYROLL_PERIODS.BRANCH_KEY) AS BRANCH_KEY,
		COALESCE(BRANCH_MERGED.OFFICE_STATE_CODE, PAYROLL_PERIODS.OFFICE_STATE_CODE) AS OFFICE_STATE_CODE,
		COALESCE(BRANCH_MERGED.DETAILED_OFFICE_NAME, PAYROLL_PERIODS.DETAILED_OFFICE_NAME) AS DETAILED_OFFICE_NAME,
		PAYROLL_PERIODS.BRANCH_KEY AS ORIGINAL_BRANCH_KEY,
		PAYROLL_PERIODS.PERIOD_START_DATE,
		PAYROLL_PERIODS.PERIOD_END_DATE,
		PAYROLL_PERIODS.CHECK_DATE,
		PAYROLL_PERIODS.ETL_TASK_KEY,
		PAYROLL_PERIODS.ETL_INSERTED_TASK_KEY,
		PAYROLL_PERIODS.ETL_INSERTED_DATE,
		PAYROLL_PERIODS.ETL_INSERTED_BY,
		PAYROLL_PERIODS.ETL_LAST_UPDATED_DATE,
		PAYROLL_PERIODS.ETL_LAST_UPDATED_BY,
		PAYROLL_PERIODS.ETL_DELETED_FLAG,
		PAYROLL_PERIODS.ETL_INFERRED_MEMBER_FLAG
	FROM HAH.FACT_BRANCH_PAYROLL_PERIODS AS PAYROLL_PERIODS
	LEFT JOIN HAH.VW_DIM_BRANCH_MERGED AS BRANCH_MERGED
		ON BRANCH_MERGED.ORIGINAL_BRANCH_KEY = PAYROLL_PERIODS.BRANCH_KEY;