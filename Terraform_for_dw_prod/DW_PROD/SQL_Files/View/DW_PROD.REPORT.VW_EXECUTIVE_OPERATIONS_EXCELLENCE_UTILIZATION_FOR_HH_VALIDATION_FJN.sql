create or replace view DW_PROD.REPORT.VW_EXECUTIVE_OPERATIONS_EXCELLENCE_UTILIZATION_FOR_HH_VALIDATION_FJN(
	PERIOD_BEGIN_DATE,
	PERIOD_NAME,
	STATE,
	BRANCH_KEY,
	OFFICE_NUMBER,
	OFFICE_NAME,
	SUPERVISOR_KEY,
	SUPERVISOR_CODE,
	CLIENT_KEY_DATA,
	CLIENT_NUMBER,
	CONTRACT_KEY,
	CONTRACT_CODE,
	CLIENT_KEY,
	HOURS_SERVED_WHERE_AUTH_EXISTS,
	HOURS_BILLED_WHERE_AUTH_EXISTS,
	HOURS_AUTHORIZED_WHERE_AUTH_EXISTS,
	HOURS_SERVED_ALL,
	HOURS_BILLED_ALL,
	HOURS_AUTHORIZED_ALL,
	INCLUDE_FOR_CLIENTS,
	INCLUDE_FOR_HOURS,
	REVENUE_CATEGORY,
	ETL_LAST_UPDATED_DATE,
	VISITS_ALL,
	VISITS_CLEAN_SHIFTS,
	VISITS_NEED_MAINTENANCE,
	CLIENT_STATE,
	CLIENT_ETHNICITY,
	CLIENT_GENDER,
	CLIENT_AGE,
	FIRST_SERVICE_MONTH
) as
	WITH DATES AS (
		SELECT DISTINCT FIRST_DAY_OF_MONTH, CONCAT(MONTH_NAME, ' ', "YEAR") PERIOD_NAME
        FROM DW_PROD.HAH.DIM_DATE
        WHERE FIRST_DAY_OF_MONTH BETWEEN '2018-01-01' and '2020-12-31'
	), CONTRACTS AS (
		SELECT CONTRACT_KEY, 
			CONTRACT_CODE, 
			CONTRACT_NAME, 
			REVENUE_CATEGORY,
			INCLUDE_FOR_EXEC_OPS_CLIENTS AS INCLUDE_FOR_CLIENTS,
			INCLUDE_FOR_EXEC_OPS_HOURS AS INCLUDE_FOR_HOURS
		FROM DW_PROD.REPORT.VW_DASHBOARD_CONTRACTS
--		WHERE INCLUDE_FOR_EXEC_OPS_HOURS = TRUE
		WHERE INCLUDE_FOR_EXEC_OPS_CLIENTS = TRUE OR INCLUDE_FOR_EXEC_OPS_HOURS = TRUE
	), UTILIZATION_DATA AS (
		SELECT DATA.PERIOD_BEGIN_DATE,
			DATES.PERIOD_NAME,
			DATA.BRANCH_KEY,
			DATA.STATE,
			DATA.OFFICE_NUMBER,
			DATA.OFFICE_NAME,
			DATA.SUPERVISOR_KEY,
			DATA.SUPERVISOR_CODE,
			DATA.CLIENT_KEY AS CLIENT_KEY_DATA, 
			DATA.CLIENT_NUMBER, 
            CLIENT.CLIENT_STATE_CODE as CLIENT_STATE,
            CLIENT.CLIENT_ETHNICITY,
            CLIENT.CLIENT_GENDER,
            DATEDIFF(YEAR, CLIENT.CLIENT_DOB, DATA.PERIOD_BEGIN_DATE) as CLIENT_AGE,
            DATE_TRUNC('MONTH', CLIENT.FIRST_SERVICE_DATE) as FIRST_SERVICE_MONTH,
			DATA.CONTRACT_KEY,
			DATA.CONTRACT_CODE,
			CONTRACT.CONTRACT_NAME,
			CONTRACT.INCLUDE_FOR_CLIENTS,
			CONTRACT.INCLUDE_FOR_HOURS,
			CONTRACT.REVENUE_CATEGORY,
			CASE WHEN CONTRACT.INCLUDE_FOR_CLIENTS = 1 THEN DATA.CLIENT_KEY END CLIENT_KEY,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 THEN DATA.HOURS_BILLED END, 0) HOURS_BILLED_ALL,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 THEN DATA.HOURS_SERVED END, 0) HOURS_SERVED_ALL,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 THEN DATA.HOURS_AUTHORIZED END, 0) HOURS_AUTHORIZED_ALL,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) <= 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_SERVED END, 0) HOURS_SERVED_WHERE_AUTH_EXISTS,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) <= 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_BILLED END, 0) HOURS_BILLED_WHERE_AUTH_EXISTS,
			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) <= 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_AUTHORIZED END, 0) HOURS_AUTHORIZED_WHERE_AUTH_EXISTS,
--			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) = 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_SERVED END, 0) HOURS_SERVED_WHERE_AUTH_EXISTS,
--			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) = 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_BILLED END, 0) HOURS_BILLED_WHERE_AUTH_EXISTS,
--			NVL(CASE WHEN CONTRACT.INCLUDE_FOR_HOURS = 1 AND NOT (NVL(DATA.HOURS_AUTHORIZED, 0) = 0 OR DATA.HOURS_AUTHORIZED > 900) THEN DATA.HOURS_AUTHORIZED END, 0) HOURS_AUTHORIZED_WHERE_AUTH_EXISTS,
			DATA.ETL_LAST_UPDATED_DATE,
			DATA.VISITS_ALL,
			DATA.VISITS_CLEAN_SHIFTS,
			DATA.VISITS_NEED_MAINTENANCE
		FROM DW_PROD.REPORT.UTILIZATION AS DATA
		JOIN CONTRACTS CONTRACT
			ON CONTRACT.CONTRACT_KEY = DATA.CONTRACT_KEY --AND Data.CONTRACT_KEY NOT in ('7a063b085cebe336b0d355ac9df05840', '040c3a083eba1cfd52725c26878010ba','b63036c4869a4398a28f2b2a1bedbcde')
		JOIN DATES DATES 
			ON DATES.FIRST_DAY_OF_MONTH = DATA.PERIOD_BEGIN_DATE 
        JOIN DW_PROD.HAH.DIM_CLIENT CLIENT
            ON CLIENT.CLIENT_KEY = DATA.CLIENT_KEY
WHERE NVL(DATA.HOURS_SERVED, 0) > 0
	)
	SELECT PERIOD_BEGIN_DATE, PERIOD_NAME, STATE, BRANCH_KEY, OFFICE_NUMBER, OFFICE_NAME, SUPERVISOR_KEY, SUPERVISOR_CODE,
		CLIENT_KEY_DATA, CLIENT_NUMBER, CONTRACT_KEY, CONTRACT_CODE, CLIENT_KEY, 
		HOURS_SERVED_WHERE_AUTH_EXISTS, HOURS_BILLED_WHERE_AUTH_EXISTS, HOURS_AUTHORIZED_WHERE_AUTH_EXISTS,
		HOURS_SERVED_ALL, HOURS_BILLED_ALL, HOURS_AUTHORIZED_ALL,
		INCLUDE_FOR_CLIENTS, INCLUDE_FOR_HOURS, REVENUE_CATEGORY,
		ETL_LAST_UPDATED_DATE, VISITS_ALL, VISITS_CLEAN_SHIFTS, VISITS_NEED_MAINTENANCE,
		CLIENT_STATE, CLIENT_ETHNICITY, CLIENT_GENDER, CLIENT_AGE, FIRST_SERVICE_MONTH
	FROM UTILIZATION_DATA;