create or replace view DW_PROD.REPORT.FIELD_ADMIN_METRICS(
	PAYROLL_DATE,
	EMPLOYEE_KEY,
	PRIMARY_BRANCH_KEY,
	EMPLOYEE_LAST_NAME,
	EMPLOYEE_FIRST_NAME,
	EMPLOYEE_ETHNICITY,
	EMPLOYEE_GENDER,
	AGE,
	AGE_BUCKET,
	EMPLOYEE_ZIP,
	FIRST_CHECK_DATE,
	LAST_CHECK_DATE,
	TENURE_MONTH,
	TENURE_YEAR,
	TENURE_YEAR_BUCKET,
	ACTIVE_FLAG
) as
---------------------development log---------------------

--   date        NAME				Description
-- 08/31/23  Deepen Gajjar   Pushing this view in PROD as per requirement in IDDPS-20

----------------------------------------------------------

WITH ADMIN AS 
(SELECT DISTINCT 
PAYROLL_dATE,
emp.employee_key,
emp.PRIMARY_BRANCH_KEY, 
emp.employee_last_name,
emp.employee_first_name,
CASE
WHEN emp.EMPLOYEE_ETHNICITY IN ('AMERICAN INDIAN','American Indian or Alaska Native','American Indian or Alaskan Native') THEN 'American Indian or Alaskan Native'
WHEN emp.EMPLOYEE_ETHNICITY IN ('ASIAN','Asian') THEN 'Asian'
WHEN emp.EMPLOYEE_ETHNICITY IN ('BLACK','Black or African American') THEN 'Black or African American'
WHEN emp.EMPLOYEE_ETHNICITY IN ('HISPANIC','Hispanic or Latino') THEN 'Hispanic or Latino'
WHEN emp.EMPLOYEE_ETHNICITY IN ('Two or more races','Two or More Races') THEN 'Two or More Races'
WHEN emp.EMPLOYEE_ETHNICITY IN ('WHITE','White') THEN 'White' ELSE EMP.EMPLOYEE_ETHNICITY END AS EMPLOYEE_ETHNICITY, 
emp.EMPLOYEE_GENDER, 
EMP.EMPLOYEE_ZIP,
datediff(YEAR, emp.EMPLOYEE_DOB, getdate()) AS AGE


-----change join to employee key 
------ merged tables and DW_PROD.INTEGRATION.DIM_EMPLOYEE_PAYROLL_MERGE_DEDUPE 

FROM DW_PROD.INTEGRATION.DIM_EMPLOYEE_MERGED  EMP
LEFT JOIN DW_PROD.INTEGRATION.FACT_PAYROLL_MERGED PAY
ON PAY.ORIGINAL_EMPLOYEE_KEY = EMP.EMPLOYEE_KEY 


WHERE pay.PAYROLL_DATE BETWEEN '1/1/2021' AND getdate() 
AND emp.employee_Category in('ADMIN', 'Admin')),

MIN_MAX_CHECKS AS

(SELECT DISTINCT 
emp.employee_key,
MIN(PAY.PAYROLL_DATE)AS FIRST_CHECK_DATE, 
MAX(PAYROLL_DATE) AS LAST_CHECK_DATE


FROM DW_PROD.INTEGRATION.DIM_EMPLOYEE_MERGED  EMP
LEFT JOIN DW_PROD.INTEGRATION.FACT_PAYROLL_MERGED PAY
ON PAY.ORIGINAL_EMPLOYEE_KEY = EMP.EMPLOYEE_KEY 

GROUP BY 1), 

TENURE AS (

SELECT DISTINCT 
A.PAYROLL_DATE,
A.employee_key,
A.PRIMARY_BRANCH_KEY, 
A.employee_last_name,
A.employee_first_name,
A.EMPLOYEE_ETHNICITY, 
A.EMPLOYEE_GENDER, 
A.AGE,
A.EMPLOYEE_ZIP,
C.FIRST_CHECK_DATE,
C.LAST_CHECK_DATE, 
datediff(month, c.FIRST_CHECK_DATE, a.PAYROLL_DATE) AS TENURE_MONTH, 
datediff(YEAR, c.FIRST_CHECK_DATE, a.PAYROLL_DATE) AS TENURE_YEAR, 
CASE WHEN datediff(days, c.LAST_CHECK_DATE, getdate()) > 30 THEN 'INACTIVE' ELSE 'ACTIVE' END  AS ACTIVE_FLAG

FROM ADMIN A 
JOIN MIN_MAX_CHECKS C 
ON C.EMPLOYEE_KEY = A.EMPLOYEE_KEY)

SELECT DISTINCT 

T.PAYROLL_DATE,
T.employee_key,
T.PRIMARY_BRANCH_KEY, 
T.employee_last_name,
T.employee_first_name,
T.EMPLOYEE_ETHNICITY, 
T.EMPLOYEE_GENDER, 
T.AGE,
CASE 
	WHEN T.age BETWEEN 18 AND 20 THEN '18 TO 20' 
	WHEN T.age BETWEEN 21 AND 30 THEN '21 TO 30' 
	WHEN T.age BETWEEN 31 AND 40 THEN '31 TO 40' 
	WHEN T.age BETWEEN 41 AND 50 THEN '41 TO 50' 
	WHEN T.age BETWEEN 51 AND 60 THEN '51 TO 60' 
	WHEN T.age BETWEEN 61 AND 70 THEN '61 TO 70' 
	WHEN T.age BETWEEN 71 AND 80 THEN '71 TO 80' 
	WHEN T.age BETWEEN 81 AND 90 THEN '81 TO 90' 
	WHEN T.age  > 90 THEN 'GREATER THAN 90' END AS AGE_BUCKET,
T.EMPLOYEE_ZIP,
T.FIRST_CHECK_DATE,
T.LAST_CHECK_DATE, 
T.TENURE_MONTH, 
T.TENURE_YEAR, 
CASE 
	WHEN T.TENURE_YEAR BETWEEN 0 AND 1 THEN '0-1 YR'
	WHEN T.TENURE_YEAR BETWEEN 2 AND 3 THEN '2-3 YRS'
	WHEN T.TENURE_YEAR BETWEEN 4 AND 5 THEN '4-5 YRS'
	WHEN T.TENURE_YEAR BETWEEN 6 AND 7 THEN '6-7 YRS'
	WHEN T.TENURE_YEAR BETWEEN 7 AND 8 THEN '7-8 YRS'
	WHEN T.TENURE_YEAR >=9 THEN '9+ YRS' END AS TENURE_YEAR_BUCKET,
T.ACTIVE_FLAG


FROM Tenure T;