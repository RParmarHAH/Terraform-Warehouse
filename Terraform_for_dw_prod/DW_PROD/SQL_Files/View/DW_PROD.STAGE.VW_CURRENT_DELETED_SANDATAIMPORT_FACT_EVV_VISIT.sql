create or replace view DW_PROD.STAGE.VW_CURRENT_DELETED_SANDATAIMPORT_FACT_EVV_VISIT(
	VISIT_KEY
) as
WITH avg_bill_rate as (
	SELECT agencyid,admissionid,AVG(RATE) as BILL_RATE 
	FROM DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS
	GROUP BY agencyid,admissionid)
SELECT MD5(NVL(SV.AGENCYID,'S') || '-' || SV.SCHEDULEID || '-' || 'SANDATAIMPORT') AS VISIT_KEY
FROM DISC_PROD.BI_REPOSITORY.HIST_SANDATAVISITS SV
LEFT JOIN HAH.DIM_BRANCH AS BRANCH ON BRANCH.SYSTEM_CODE::STRING = SV.AGENCYID AND BRANCH.OFFICE_CODE = SV.LOCATIONID
LEFT JOIN HAH.DIM_STATE S 
    on SV.agencyid = S.sandata_agency_id
LEFT JOIN HAH.DIM_EMPLOYEE E
	ON (case when s.state_iso_code ='PA' then e.system_code = SV.agencyid
        else e.SYSTEM_CODE = S.STATE_ISO_CODE end) AND SV.SCHEDULEDATE >= E.EFFECTIVE_FROM_DATE AND SV.SCHEDULEDATE < E.EFFECTIVE_TO_DATE  
	AND E.EMPLOYEE_ID = CAST(SV.STAFFAGENCYID AS INT)::STRING
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS CAD
	ON CAD.AGENCYID = SV.AGENCYID AND CAD.ADMISSIONID = SV.ADMISSIONID 
LEFT JOIN (SELECT AGENCYID,avg(try_to_number(unittype)) AS unittype,scheduleid,admissionid,avg(rate) as bill_rate
 from DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS 
 group by AGENCYID,scheduleid,admissionid) ca ON SV.agencyid = ca.agencyid and SV.scheduleid = ca.scheduleid
and SV.admissionid = ca.admissionid 
LEFT JOIN avg_bill_rate avg_bill_rate_ca on
SV.agencyid = avg_bill_rate_ca.agencyid 
and SV.admissionid = avg_bill_rate_ca.admissionid 
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULES sch ON SV.AGENCYID = sch.AGENCYID AND SV.SCHEDULEID = sch.SCHEDULEID 
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_REJECTIONCODES r ON sch.REJECTIONCODE = r.code AND sch.agencyid = r.AGENCYID 
-------Employee_Key-----
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFEMPLOYEES AS EMPLOYEE
    ON EMPLOYEE.DBNAME = S.STATE_ISO_CODE AND EMPLOYEE.PAYROLLIDINDEXNO = try_cast(SV.STAFFAGENCYID as integer)
-------Contract_Key-----
LEFT JOIN DISC_PROD.SANDATAEXCHANGE.OPENSAM_CLIENTADMISSIONTYPES CAT
    ON CAT.HAHDFDB = S.STATE_ISO_CODE AND CAT.ADMISSIONTYPEID = SV.ADMISSIONTYPE AND CAT.DEFAULTSERVICE = SV.SERVICEID
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFCONTRACTS AS CONTRACT
    ON CONTRACT.DBNAME = CAT.HAHDFDB AND CONTRACT.CONTRACTCODE = CAT.CONTRACTCODE
-------Supervisor_Key----
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTS C
    ON C.AGENCYID = CAD.AGENCYID AND C.CLIENTID = CAD.CLIENTID
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFCLIENTS AS DFCLIENT
    ON DFCLIENT.DBNAME = S.STATE_ISO_CODE AND DFCLIENT."NUMBER" = TRY_CAST(C.OTHERID AS INTEGER)
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFCLIENTSUPERVISORS DFCLIENTSUPERVISOR
    ON DFCLIENTSUPERVISOR.DBNAME = DFCLIENT.DBNAME AND DFCLIENTSUPERVISOR.CLIENTNUMBER = DFCLIENT."NUMBER"  
    AND DFCLIENTSUPERVISOR.BUSINESSLINE = CONTRACT.REVENUECATEGORY
-------Branch_Key------
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFOFFICES AS OFFICE
    ON OFFICE.DBNAME = DFCLIENT.DBNAME AND OFFICE.OFFICENUMBER = DFCLIENT.OFFICENUMBER
-----------------------
WHERE 
NVL(SV.STAFFAGENCYID,'') <> '' AND SV.CLIENTID IS NOT NULL
	AND NVL(SV.ADMISSIONTYPE, '') <> '' AND LEN(NVL(SV.STATUS,'')) <= 2 -- Exclude (7) bad data records
	AND SV.ETL_DELETED_FLAG = TRUE
	AND CAST(SV.ETL_LAST_UPDATED_DATE AS DATE) IN (SELECT CAST(MAX(ETL_LAST_UPDATED_DATE) AS DATE) FROM DISC_PROD.BI_REPOSITORY.HIST_SANDATAVISITS)
union
(WITH clu as (
    select
           (CASE WHEN try_to_numeric(OTHERID) is null AND try_to_numeric(CUSTOMID) is null THEN -1
                WHEN try_to_numeric(OTHERID) is not null AND try_to_numeric(CUSTOMID) is null THEN OTHERID
                WHEN try_to_numeric(CUSTOMID) is not null AND try_to_numeric(OTHERID) is null THEN CUSTOMID
                ELSE coalesce(OTHERID, CUSTOMID)
            END)::INTEGER as DF_CLIENT_NUMBER,
           AGENCYID,
           max(CLIENTID) AS CLIENTID
    from DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTS
    group by 1,2
),
max_client as (
    select DF_CLIENT_NUMBER,
            max(CLIENTID) AS CLIENTID
    from clu
    GROUP BY 1
    ),
avg_bill_rate as (
	SELECT agencyid,admissionid,AVG(RATE) as BILL_RATE 
	FROM DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS
	GROUP BY agencyid,admissionid)
SELECT
	MD5(NVL(f.agencyID,'S') || '-' || f.scheduleid || '-' || 'SANDATAIMPORT') AS VISIT_KEY
FROM DISC_PROD.SANDATAIMPORT.HIST_SANDATA_VISITS f
left join clu clu
    on (CASE WHEN try_to_numeric(F.CLIENTOTHERID) is null THEN -1
            ELSE f.CLIENTOTHERID
        END)::INTEGER = clu.DF_CLIENT_NUMBER
    and f.AGENCYID = clu.AGENCYID
left join max_client mc
    on (CASE WHEN try_to_numeric(f.CLIENTOTHERID) is null THEN -1
            ELSE f.CLIENTOTHERID
        END)::INTEGER = mc.DF_CLIENT_NUMBER
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS ClientAdmissions
    ON ClientAdmissions.agencyID = f.AgencyId
    AND ClientAdmissions.admissionID = f.AdmissionId
LEFT JOIN HAH.DIM_BRANCH AS BRANCH ON BRANCH.SYSTEM_CODE::STRING = F.AGENCYID AND BRANCH.OFFICE_CODE = F.LOCATIONID
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULES sch ON f.AGENCYID = sch.AGENCYID AND f.SCHEDULEID = sch.SCHEDULEID
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_REJECTIONCODES r ON sch.REJECTIONCODE = r.code AND sch.agencyid = r.AGENCYID 
LEFT JOIN (SELECT AGENCYID,avg(try_to_number(unittype)) AS unittype,scheduleid,admissionid,avg(rate) as bill_rate
 from DISC_PROD.SANDATAIMPORT.SANDATA_SCHEDULESCLIENTS 
 group by AGENCYID,scheduleid,admissionid) ca on
f.agencyid = ca.agencyid and f.scheduleid = ca.scheduleid
and f.admissionid = ca.admissionid 
LEFT JOIN avg_bill_rate avg_bill_rate_ca on
f.agencyid = avg_bill_rate_ca.agencyid 
and f.admissionid = avg_bill_rate_ca.admissionid
LEFT JOIN HAH.DIM_STATE s 
    on f.agencyid = s.sandata_agency_id
-----Employee_Key-----
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFEMPLOYEES AS EMPLOYEE
    ON EMPLOYEE.DBNAME = S.STATE_ISO_CODE AND EMPLOYEE.PAYROLLIDINDEXNO = try_cast(F.STAFFAGENCYID as integer)
LEFT JOIN HAH.DIM_EMPLOYEE e
	ON f.STAFFAGENCYID = e.EMPLOYEE_ID
	AND (case when s.state_iso_code ='PA' then e.system_code = f.agencyid
        else e.SYSTEM_CODE = S.STATE_ISO_CODE end)
    AND f.Date >= e.EFFECTIVE_FROM_DATE
    AND f.Date < e.EFFECTIVE_TO_DATE
-----Contract_Key-----
LEFT JOIN DISC_PROD.SANDATAEXCHANGE.OPENSAM_CLIENTADMISSIONTYPES CAT
    ON CAT.HAHDFDB = S.STATE_ISO_CODE AND CAT.ADMISSIONTYPEID = F.CLIENTADMITTYPE AND CAT.DEFAULTSERVICE = F.SERVICEID
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFCONTRACTS AS CONTRACT
    ON CONTRACT.DBNAME = CAT.HAHDFDB AND CONTRACT.CONTRACTCODE = CAT.CONTRACTCODE
-----Client_Key-------
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTS C
    ON C.AGENCYID = ClientAdmissions.AGENCYID AND C.CLIENTID = ClientAdmissions.CLIENTID
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFCLIENTS AS DFCLIENT
    ON DFCLIENT.DBNAME = S.STATE_ISO_CODE AND DFCLIENT."NUMBER" = CLU.DF_CLIENT_NUMBER --TRY_CAST(C.OTHERID AS INTEGER)
-----Supervisor_Key----
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFCLIENTSUPERVISORS DFCLIENTSUPERVISOR
    ON DFCLIENTSUPERVISOR.DBNAME = DFCLIENT.DBNAME AND DFCLIENTSUPERVISOR.CLIENTNUMBER = DFCLIENT."NUMBER"  
    AND DFCLIENTSUPERVISOR.BUSINESSLINE = CONTRACT.REVENUECATEGORY
-----Branch_Key-----
LEFT JOIN DISC_PROD.DATAFLEXSYNCDATA.DFOFFICES AS OFFICE
    ON OFFICE.DBNAME = DFCLIENT.DBNAME AND OFFICE.OFFICENUMBER = DFCLIENT.OFFICENUMBER
WHERE  
(f.ETL_LAST_UPDATED_DATE >= '1900-01-01'
	OR sch.ETL_LAST_UPDATED_DATE >= '1900-01-01')
	AND f.ETL_DELETED_FLAG = TRUE
AND CAST(f.ETL_LAST_UPDATED_DATE AS DATE) IN (SELECT CAST(MAX(ETL_LAST_UPDATED_DATE) AS DATE) FROM DISC_PROD.SANDATAIMPORT.HIST_SANDATA_VISITS)
AND f.STAFFAGENCYID <> '' 
GROUP BY 1
HAVING SUM(f.ADJUSTEDDURATION) > 0
);