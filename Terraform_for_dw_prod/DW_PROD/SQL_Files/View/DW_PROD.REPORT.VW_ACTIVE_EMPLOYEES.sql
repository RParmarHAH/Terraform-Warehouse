create or replace view DW_PROD.REPORT.VW_ACTIVE_EMPLOYEES(
	EMPLOYEE_KEY,
	EMPLOYEE_PID,
	MONTH,
	DOB,
	WORKER_TYPE,
	EMPLOYEE_TYPE,
	STATE,
	PRIMARY_BRANCH_KEY,
	PRIMARY_BRANCH_NAME,
	SOURCE_SYSTEM
) as

-- all months starting 1/1/2019
WITH DIMDATE AS
(
	SELECT DATE_TRUNC( MONTH, CALENDAR_DATE) AS MONTH
	FROM DW_PROD.HAH.DIM_DATE
	WHERE CALENDAR_DATE BETWEEN '2018-01-01' AND CURRENT_DATE() 
	GROUP BY 1
)
,

-- deduplicate DIM_EMPLOYEE
EMPLOYEE AS
(
	SELECT DISTINCT NVL( e1.EMPLOYEE_KEY, e2.EMPLOYEE_KEY) AS EMPLOYEE_KEY,
		NVL( e1.EMPLOYEE_PID, e2.EMPLOYEE_PID) AS EMPLOYEE_PID,
		NVL( e1.EMPLOYEE_CATEGORY, e2.EMPLOYEE_CATEGORY) AS EMPLOYEE_CATEGORY,
		NVL( e1.EMPLOYEE_TYPE, e2.EMPLOYEE_TYPE) AS EMPLOYEE_TYPE,
		NVL( e1.SUTA_STATE, e2.SUTA_STATE) AS SUTA_STATE,
		NVL( e1.PRIMARY_BRANCH_KEY, e2.PRIMARY_BRANCH_KEY) AS PRIMARY_BRANCH_KEY,
		NVL( e1.PRIMARY_BRANCH_NAME, e2.PRIMARY_BRANCH_NAME) AS PRIMARY_BRANCH_NAME,
		NVL( e1.EMPLOYEE_DOB, e2.EMPLOYEE_DOB) AS DOB,
		e1.SOURCE_SYSTEM_ID
	FROM (SELECT * FROM DW_PROD.HAH.DIM_EMPLOYEE WHERE SOURCE_SYSTEM_ID IN ('5')) e1
	FULL OUTER JOIN (SELECT * FROM DW_PROD.HAH.DIM_EMPLOYEE WHERE SOURCE_SYSTEM_ID IN ('1','2','3','4')) e2
	ON e1.EMPLOYEE_PID = e2.EMPLOYEE_PID
)
,

-- getting active CORP employees
CORP_ACTIVE AS
(
	SELECT DISTINCT MD5( CAST( c.EMPLOYEEID AS VARCHAR)||'-'|| c.DB) AS Employee_Key, dd.MONTH, c.EMPLOYEEID
	FROM DISC_PROD.GPSYNCDATA.PAYSTUB_MASTER c
	INNER JOIN DIMDATE dd
	ON dd.MONTH BETWEEN DATEADD( DAY, -90, c.PAYDATE) AND c.PAYDATE  -- considered active with visit in last 30 days
	WHERE c.DB = 'HAHIL'   -- including only corporate records
)
,

CORP_EMPLOYEE AS
(
	SELECT DISTINCT a.Employee_Key, e.EMPLOYEE_PID,	a.MONTH, e.DOB,
		'Corp' AS WORKER_TYPE, e.EMPLOYEE_TYPE, 'IL' AS STATE,
		NVL( e.PRIMARY_BRANCH_KEY, 'a78ad0b51aa3524f0d07d5c50977ed77') AS PRIMARY_BRANCH_KEY,
		NVL( e.PRIMARY_BRANCH_NAME, 'Corporate') AS PRIMARY_BRANCH_NAME,
		'GP' AS SOURCE_SYSTEM
	FROM CORP_ACTIVE a
	LEFT OUTER JOIN EMPLOYEE e
	ON a.EMPLOYEE_KEY = e.EMPLOYEE_KEY
)
,

-- determining active admin and field employees (except PA & CORP)
GP_ACTIVE AS
(
	SELECT DISTINCT p.EMPLOYEE_KEY, dd.MONTH
	FROM DW_PROD.HAH.FACT_PAYROLL p
	INNER JOIN DIMDATE dd
	ON dd.MONTH BETWEEN DATEADD( DAY, -90, p.PAYROLL_DATE) AND p.PAYROLL_DATE   -- considered active with payroll date in last 30 days
	WHERE p.PAYROLL_DATE <= CURRENT_DATE()
		AND p.SOURCE_SYSTEM_ID = '5'
		AND p.Employee_ID NOT IN ( SELECT EmployeeID FROM Corp_Active)
)
,

-- active admin and field with attributes
GP_EMPLOYEE AS
(
	SELECT DISTINCT a.EMPLOYEE_KEY, e.EMPLOYEE_PID, a.MONTH, e.DOB,
		-- CASE WHEN e.FIELD_WORKER_FLAG = TRUE THEN 'Field' ELSE 'Admin' END AS WORKER_TYPE, 
        e.EMPLOYEE_CATEGORY AS WORKER_TYPE,
        e.EMPLOYEE_TYPE,
		e.SUTA_STATE AS STATE, e.PRIMARY_BRANCH_KEY, e.PRIMARY_BRANCH_NAME,
		'DF' AS SOURCE_SYSTEM
	FROM GP_ACTIVE a
	LEFT OUTER JOIN EMPLOYEE e
	ON a.EMPLOYEE_KEY = e.EMPLOYEE_KEY
	WHERE e.SUTA_STATE NOT IN ('GA','SC','PA')
		OR e.SUTA_STATE IS NULL    -- excluding PA & COASTAL
)
,

-- determining active PA & COASTAL field employees
PA_COASTAL_ACTIVE AS
(
	SELECT DISTINCT v.EMPLOYEE_KEY, dd.MONTH,
		FIRST_VALUE( v.BRANCH_KEY) OVER (PARTITION BY v.EMPLOYEE_KEY, dd.MONTH ORDER BY v.SERVICE_DATE DESC) AS PRIMARY_BRANCH_KEY,
		FIRST_VALUE( v.BRANCH_NAME) OVER (PARTITION BY v.EMPLOYEE_KEY, dd.MONTH ORDER BY v.SERVICE_DATE DESC) AS PRIMARY_BRANCH_NAME,
		CASE WHEN v.SOURCE_SYSTEM_ID = '4' THEN 'SD'
			ELSE v.SYSTEM_CODE END AS SOURCE_SYSTEM
	FROM DW_PROD.HAH.FACT_VISIT v
	INNER JOIN DIMDATE dd
	ON dd.MONTH BETWEEN DATEADD( DAY, -90, v.SERVICE_DATE) AND v.SERVICE_DATE   -- considered active with visit in last 30 days
	WHERE v.SOURCE_SYSTEM_ID IN ('1','2','4')  -- including only PA & COASTAL records
		AND v.SERVICE_DATE <= CURRENT_DATE()
)
,

-- active PA & COASTAL field employees with attributes
PA_COASTAL_EMPLOYEE AS
(
	SELECT DISTINCT a.EMPLOYEE_KEY, e.EMPLOYEE_PID,	a.MONTH, e.DOB,
		'Field' AS WORKER_TYPE, e.EMPLOYEE_TYPE,
		CASE WHEN NVL( b.OFFICE_STATE_CODE, e.SUTA_STATE) IS NULL AND a.SOURCE_SYSTEM = 'SHC_ALTRUS' THEN 'SC'
			WHEN NVL( b.OFFICE_STATE_CODE, e.SUTA_STATE) IS NULL AND a.SOURCE_SYSTEM = 'SHC_SAVANNAH' THEN 'GA'
			WHEN NVL( b.OFFICE_STATE_CODE, e.SUTA_STATE) IS NULL THEN 'PA'
			ELSE NVL( b.OFFICE_STATE_CODE, e.SUTA_STATE) END AS STATE,
		a.PRIMARY_BRANCH_KEY, NVL( b.BRANCH_NAME, a.PRIMARY_BRANCH_NAME) AS PRIMARY_BRANCH_NAME,
		a.SOURCE_SYSTEM
	FROM PA_COASTAL_ACTIVE a
	LEFT OUTER JOIN DW_PROD.HAH.DIM_BRANCH b
	ON a.PRIMARY_BRANCH_KEY = b.BRANCH_KEY
	LEFT OUTER JOIN EMPLOYEE e
	ON a.EMPLOYEE_KEY = e.EMPLOYEE_KEY
)

-- put it all together
SELECT *
FROM (SELECT * FROM GP_EMPLOYEE UNION ALL SELECT * FROM PA_COASTAL_EMPLOYEE UNION ALL SELECT * FROM CORP_EMPLOYEE)
--WHERE SOURCE_SYSTEM NOT IN ('SHC_ALTRUS','SHC_SAVANNAH')   -- use to split up a file for use in Excel;
;