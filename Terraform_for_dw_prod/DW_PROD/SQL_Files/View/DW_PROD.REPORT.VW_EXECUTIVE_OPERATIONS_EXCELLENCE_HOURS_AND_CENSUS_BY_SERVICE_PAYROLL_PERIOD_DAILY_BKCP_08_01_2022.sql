create or replace view DW_PROD.REPORT.VW_EXECUTIVE_OPERATIONS_EXCELLENCE_HOURS_AND_CENSUS_BY_SERVICE_PAYROLL_PERIOD_DAILY_BKCP_08_01_2022(
	BRANCH_PAYROLL_PERIODS_KEY,
	PAYROLL_DATE,
	PAY_PERIOD_START_DATE,
	PAY_PERIOD_END_DATE,
	SERVICE_DATE,
	SERVICE_END_OF_WEEK,
	BRANCH_KEY,
	SUPERVISOR_KEY,
	CLIENT_KEY_DATA,
	CONTRACT_KEY,
	ORIGINAL_SOURCE_SYSTEM_ID,
	SOURCE_SYSTEM_ID,
	CLIENT_KEY,
	HOURS_SERVED_ALL,
	CLIENT_ACQUIRED_FLAG,
	CLIENT_ACQUISITION_NAME,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG,
	ETL_INFERRED_MEMBER_FLAG,
	DERIVED_FIRST_SERVICE_DATE,
	DERIVED_LAST_SERVICE_DATE
) as 
WITH DATA AS (
    SELECT 
      DISTINCT B.BRANCH_PAYROLL_PERIODS_KEY,
        IFF(COALESCE(CCSI_BRANCH.BRANCH_KEY,CCSI_ACQUIRED_CLIENT.CLIENT_KEY,MATRIXCARE_BRANCH.BRANCH_KEY,ALTAMAHA_CLIENT.CLIENT_KEY,PRAETORIAN_ACQUIRED_CLIENT.CLIENT_KEY,PREFERRED_CLIENT.CLIENT_KEY) IS NULL, FALSE, TRUE) AS CLIENT_ACQUIRED_FLAG,
      --IFF(COALESCE(CCSI_BRANCH.BRANCH_KEY,CCSI_ACQUIRED_CLIENT.CLIENT_KEY) IS NULL, FALSE, TRUE) AS CLIENT_ACQUIRED_FLAG,

        CASE WHEN COALESCE(CCSI_BRANCH.BRANCH_KEY,CCSI_ACQUIRED_CLIENT.CLIENT_KEY) IS NOT NULL THEN 'CCSI' 
        WHEN MATRIXCARE_BRANCH.BRANCH_KEY IS NOT NULL THEN 'ADAPTIVE' 
        WHEN ALTAMAHA_CLIENT.CLIENT_KEY IS NOT NULL THEN 'ALTAMAHA'
        WHEN PRAETORIAN_ACQUIRED_CLIENT.CLIENT_KEY IS NOT NULL THEN 'PRAETORIAN'
        WHEN PREFERRED_CLIENT.CLIENT_KEY IS NOT NULL THEN 'PREFERRED'
        ELSE NULL END AS CLIENT_ACQUISITION_NAME,
        A.*,
        CM.DERIVED_FIRST_SERVICE_DATE DERIVED_FIRST_SERVICE_DATE,
        CM.DERIVED_LAST_SERVICE_DATE DERIVED_LAST_SERVICE_DATE      
    FROM REPORT.HOURS_AND_CENSUS_BY_PAYROLL_DATE_DAILY A
    LEFT JOIN INTEGRATION.DIM_CLIENT_MERGED CM ON 
        A.CLIENT_KEY_DATA = CM.CLIENT_KEY
    LEFT JOIN REPORT.VW_DASHBOARD_CONTRACTS CT ON A.CONTRACT_KEY=CT.CONTRACT_KEY 
        AND (CT.INCLUDE_FOR_EXEC_OPS_HOURS=1 AND INCLUDE_FOR_EXEC_OPS_CLIENTS=1)
    LEFT JOIN INTEGRATION.FACT_BRANCH_PAYROLL_PERIODS_MERGED B ON A.BRANCH_KEY=B.ORIGINAL_BRANCH_KEY AND A.SERVICE_DATE>=B.PERIOD_START_DATE 
      AND A.SERVICE_DATE<=B.PERIOD_END_DATE
    LEFT OUTER JOIN (SELECT DISTINCT BRANCH_KEY FROM HAH.DIM_BRANCH WHERE SOURCE_SYSTEM_ID = 8) CCSI_BRANCH
                      ON CCSI_BRANCH.BRANCH_KEY = A.BRANCH_KEY
    LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED_MERGED WHERE NOTES = 'CCSI Acquired') CCSI_ACQUIRED_CLIENT
          ON CCSI_ACQUIRED_CLIENT.CLIENT_KEY = A.CLIENT_KEY AND A.SERVICE_DATE >= '2021-07-01'
         LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED_MERGED WHERE NOTES = 'Altamaha') ALTAMAHA_CLIENT
          ON ALTAMAHA_CLIENT.CLIENT_KEY = A.CLIENT_KEY
       LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED_MERGED WHERE NOTES = 'Praetorian') PRAETORIAN_ACQUIRED_CLIENT
          ON PRAETORIAN_ACQUIRED_CLIENT.CLIENT_KEY = A.CLIENT_KEY AND A.SERVICE_DATE >= '2022-01-01'
		  LEFT OUTER JOIN (SELECT BRANCH_KEY FROM HAH.DIM_BRANCH WHERE BRANCH_NAME like 'A__%' and SYSTEM_CODE = 'MATRIXCARE') MATRIXCARE_BRANCH
                      ON MATRIXCARE_BRANCH.BRANCH_KEY = A.BRANCH_KEY
       LEFT OUTER JOIN (SELECT DISTINCT CLIENT_KEY FROM HAH.FACT_CLIENT_ACQUIRED_MERGED WHERE NOTES = 'Preferred') PREFERRED_CLIENT
         ON PREFERRED_CLIENT.CLIENT_KEY = A.CLIENT_KEY 
    WHERE A.SERVICE_DATE BETWEEN DATEADD('WEEK',-79,CURRENT_DATE) AND CURRENT_DATE
)        
,DATE_DATA AS (
 SELECT DISTINCT A.CALENDAR_DATE AS CALENDAR_DATE,B.BRANCH_KEY AS BRANCH_KEY FROM HAH.DIM_DATE A
 LEFT JOIN INTEGRATION.FACT_BRANCH_PAYROLL_PERIODS_MERGED B ON A.CALENDAR_DATE BETWEEN B.PERIOD_START_DATE AND B.PERIOD_END_DATE
 WHERE A.CALENDAR_DATE BETWEEN DATEADD('WEEK',-79,CURRENT_DATE) AND CURRENT_DATE
)    
		 
SELECT A.BRANCH_PAYROLL_PERIODS_KEY,
    A.PAYROLL_DATE,
    A.PAY_PERIOD_START_DATE,
    A.PAY_PERIOD_END_DATE,
    A.SERVICE_DATE,
    A.SERVICE_END_OF_WEEK,
    A.BRANCH_KEY,
    A.SUPERVISOR_KEY,
    A.CLIENT_KEY_DATA,
    A.CONTRACT_KEY,
    A.ORIGINAL_SOURCE_SYSTEM_ID,
    A.SOURCE_SYSTEM_ID,
    A.CLIENT_KEY,
    A.HOURS_SERVED_ALL,
    A.CLIENT_ACQUIRED_FLAG,
    A.CLIENT_ACQUISITION_NAME,
    A.ETL_TASK_KEY,
    A.ETL_INSERTED_TASK_KEY,
    A.ETL_INSERTED_DATE,
    A.ETL_INSERTED_BY,
    A.ETL_LAST_UPDATED_DATE,
    A.ETL_LAST_UPDATED_BY,
    A.ETL_DELETED_FLAG,
    A.ETL_INFERRED_MEMBER_FLAG,
    A.DERIVED_FIRST_SERVICE_DATE DERIVED_FIRST_SERVICE_DATE,
    A.DERIVED_LAST_SERVICE_DATE DERIVED_LAST_SERVICE_DATE
FROM DATA A 
LEFT JOIN DATE_DATA B ON B.CALENDAR_DATE=DATEADD('DAY',-7,A.SERVICE_DATE) AND A.BRANCH_KEY=B.BRANCH_KEY
WHERE B.CALENDAR_DATE IS NOT NULL;