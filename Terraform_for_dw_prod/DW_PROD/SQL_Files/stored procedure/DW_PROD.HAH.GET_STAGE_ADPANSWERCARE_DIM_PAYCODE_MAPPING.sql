CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ADPANSWERCARE_DIM_PAYCODE_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN

--*****************************************************************************************************************************
-- NAME: ADPANSWERCARE_DIM_PAYCODE_MAPPING
--
-- PURPOSE: Creates one row for each PAYCODE CATEGORY according to ADP-ANSWERCARE
--
-- DEVELOPMENT LOG:
-- DATE				AUTHOR                					NOTES:
-- ----------		--------------------------------		-------------------------------------------------------------------
-- 18/10/2022		Aditya Shukla / Jigar Prajapati			Initial Development
--*****************************************************************************************************************************


INSERT OVERWRITE INTO STAGE.ADPANSWERCARE_DIM_PAYCODE_MAPPING

WITH USAGE_DATES AS 
(
	SELECT DISTINCT 
		PAYCODES,
		MIN(PAY_DATE::DATE) AS FIRST_USED_DATE,
		MAX(PAY_DATE::DATE) AS MOST_RECENT_USED_DATE,
		COUNT(DISTINCT FILE_NUMBER) AS NUMBER_EMPLOYEES_USED
	FROM DISC_PROD.ADP.ANSWERCARE_PAYROLL_DETAIL
	WHERE PAYCODES IS NOT NULL
	GROUP BY 1
)
SELECT DISTINCT
	MD5(18 || APD.PAYCODES || ''ANSWERCARE'') AS PAYCODE_MAPPING_KEY,
	18 AS SOURCE_SYSTEM_ID,
	COMPANY_CODE AS SYSTEM_CODE,
	''OH'' AS STATE_CODE,
	CASE 
		WHEN APD.PAYCODES LIKE ''VOLUNTARY_DEDUCTION___%'' 
		THEN SUBSTRING(REPLACE(APD.PAYCODES, ''VOLUNTARY_DEDUCTION___''), 0, CHARINDEX(''_'', REPLACE(APD.PAYCODES, ''VOLUNTARY_DEDUCTION___''))-1)
		WHEN APD.PAYCODES LIKE ''ADDITIONAL_EARNINGS____%''
		THEN SUBSTRING(REPLACE(APD.PAYCODES, ''ADDITIONAL_EARNINGS____''), 0, CHARINDEX(''_'', REPLACE(APD.PAYCODES, ''ADDITIONAL_EARNINGS____''))-1)
		WHEN APD.PAYCODES LIKE ''%___EMPLOYEE_TAX''
		THEN REPLACE(SUBSTRING(APD.PAYCODES, 0, CHARINDEX(''___'', APD.PAYCODES)-1), ''_'', '' '')
		WHEN APD.PAYCODES LIKE ''%_EARNINGS''
		THEN SUBSTRING(APD.PAYCODES, 0, CHARINDEX(''_'', APD.PAYCODES)-1)
	END AS PAY_CODE,
	TRIM(REPLACE(REPLACE(REPLACE(REPLACE(SUBSTRING(REPLACE(APD.PAYCODES, ''VOLUNTARY_DEDUCTION___''), CHARINDEX(''_'', REPLACE(APD.PAYCODES, ''VOLUNTARY_DEDUCTION___''))+1), ''____'', '' ''), ''___'', '' ''), ''__'', '' ''), ''_'', '' '')) AS PAY_CODE_DESCRIPTION,
	NULL AS PAY_CODE_TYPE,
	CASE 
		WHEN UPPER(APD.PAYCODES) LIKE ''%REIMB%'' THEN ''REIMBURSEMENT''
		WHEN UPPER(APD.PAYCODES) LIKE ''%GARNISH%'' THEN ''BENEFITS & DEDUCTIONS''
		WHEN UPPER(APD.PAYCODES) LIKE ''%REGULAR%'' THEN ''REGULAR PAY''
		WHEN UPPER(APD.PAYCODES) LIKE ''%TAX%'' THEN ''TAX''
		WHEN UPPER(APD.PAYCODES) LIKE ''%HOLID%'' THEN ''HOLIDAY''
		WHEN UPPER(APD.PAYCODES) LIKE ''%BONUS%'' THEN ''BONUS''
		WHEN UPPER(APD.PAYCODES) LIKE ''%EARNINGS%'' THEN ''EARNINGS''
		WHEN UPPER(APD.PAYCODES) LIKE ''%BANKRUPTCY%'' THEN ''BANKRUPTCY''
		WHEN UPPER(APD.PAYCODES) LIKE ''%SUPPORT%'' THEN ''SUPPORT''
	END AS PAY_CODE_CATEGORY,
	NULL AS FINANCE_CATEGORY,
	NULL AS REVENUE_CATEGORY,
	NULL AS REVENUE_SUBCATEGORY_CODE,
	NULL AS REVENUE_SUBCATEGORY_NAME,
	UD.FIRST_USED_DATE::DATE AS FIRST_USED_DATE,
	UD.MOST_RECENT_USED_DATE::DATE AS MOST_RECENT_USED_DATE,
	UD.NUMBER_EMPLOYEES_USED AS NUMBER_EMPLOYEES_USED,
	CASE 
		WHEN DATEADD(''YEAR'', 1, UD.MOST_RECENT_USED_DATE) >= CURRENT_DATE() 
		THEN TRUE
		ELSE FALSE
	END AS ACTIVE_FLAG,
	NULL AS ADMIN_PAY_RATE_FLAG,
	NULL AS FIELD_PAY_RATE_FLAG,
	NULL AS INCLUDE_SALARY_PAYRATE_CALC_FLAG,
	NULL AS INCLUDE_FULL_TIME_HOURS_CALC_FLAG,
		-1 AS ETL_TASK_KEY,
		-1 AS ETL_INSERTED_TASK_KEY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz AS ETL_INSERTED_DATE,
		CURRENT_USER AS ETL_INSERTED_BY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz AS ETL_LAST_UPDATED_DATE,
		CURRENT_USER AS ETL_LAST_UPDATED_BY,
		FALSE AS ETL_DELETED_FLAG
FROM DISC_PROD.ADP.ANSWERCARE_PAYROLL_DETAIL APD
LEFT JOIN USAGE_DATES UD
	ON UD.PAYCODES = APD.PAYCODES
WHERE APD.PAYCODES IS NOT NULL;

END;
';