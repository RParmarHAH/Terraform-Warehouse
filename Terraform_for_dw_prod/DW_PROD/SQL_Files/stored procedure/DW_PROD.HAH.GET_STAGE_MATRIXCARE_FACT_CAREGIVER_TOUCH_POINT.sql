CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_MATRIXCARE_FACT_CAREGIVER_TOUCH_POINT("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
                BEGIN
    --*****************************************************************************************************************************
-- NAME:  MATRIXCARE_FACT_CAREGIVER_TOUCH_POINT
--
-- PURPOSE: 
--
-- DEVELOPMENT LOG:
-- DATE         AUTHOR              NOTES:
-- --------     ------------------- -----------------------------------------------------------------------------------------------
-- 12/08/2023   Trushali Ramoliya    Initial 
-- 12/15/2023   DEEPEN GAJJAR        ADDED EMPLOYEE FIRST NAME AND LAST NAME
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO DW_PROD.STAGE.MATRIXCARE_FACT_CAREGIVER_TOUCH_POINT

WITH EMPLOYEE AS 
(
	SELECT * FROM
	(
		SELECT CAR_ID, MASTER_ID
		FROM DISC_DEDUPE_PROD.MATRIXCARE.EMPLOYEE_MASTER_LIST
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT CAR_ID, MASTER_ID
		FROM DISC_DEDUPE_PROD.MATRIXCARE.EMPLOYEE_MATCH_LIST
		WHERE CAR_ID NOT IN (SELECT CAR_ID FROM DISC_DEDUPE_PROD.MATRIXCARE.EMPLOYEE_MASTER_LIST ) 
	) )
SELECT DISTINCT 
 MD5( ''MATRIXCARE'' || ''-'' || A.ACT_ID || ''-'' || ''MATRIXCARE'')  AS INTERACTION_KEY,
7 AS SOURCE_SYSTEM_ID,
 ''MATRIXCARE'' AS SYSTEM_CODE,
 A.ACT_STARTTIME :: date  AS ACTIVITY_DATE,
 MD5( ''MATRIXCARE'' || ''-'' || CAR.MASTER_ID || ''-'' || ''MATRIXCARE'') AS EMPLOYEE_KEY,
 UPPER(CG.CAR_FIRSTNAME) AS EMPLOYEE_FIRST_NAME,
 UPPER(CG.CAR_LASTNAME) AS EMPLOYEE_LAST_NAME,
 MD5(''MATRIXCARE'' || ''-'' || BR.BR_ID || ''-'' || ''MATRIXCARE'') AS BRANCH_KEY,
  MD5( ''MATRIXCARE'' || ''-'' || TT.ACTTYPE_ID || ''-'' || ''MATRIXCARE'') AS ACTIVITY_KEY,
 A.ACT_NOTES AS ACTIVITY_NOTES,
 :STR_ETL_TASK_KEY  AS ETL_TASK_KEY,
        :STR_ETL_TASK_KEY  AS ETL_INSERTED_TASK_KEY,                            
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	CURRENT_USER as ETL_INSERTED_BY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	CURRENT_USER as ETL_LAST_UPDATED_BY,
	0 as ETL_DELETED_FLAG,
	0 AS ETL_INFERRED_MEMBER_FLAG
	FROM DISC_PROD.MATRIXCARE.STVHC_T_ACTIVITIES a
JOIN DISC_PROD.MATRIXCARE.STVHC_T_ACTIVITYCATEGORIES b ON a.ACT_ACTIVITYCATEGORYID = b.ACTCAT_ID 
JOIN DISC_PROD.MATRIXCARE.STVHC_T_ACTIVITYTYPES tt ON a.ACT_ACTIVITYTYPEID =tt.ACTTYPE_ID 
JOIN disc_PROD.MATRIXCARE.STVHC_T_ACTIVITYENTITIES ae ON ae.ACTENT_ACTIVITIESID =a.ACT_ID 
JOIN EMPLOYEE car ON car.CAR_ID =ae.ACTENT_RECORDID 
JOIN DISC_PROD.MATRIXCARE.STVHC_T_BRANCHES br ON br.BR_ID =a.ACT_BRANCHID 
JOIN DISC_PROD.MATRIXCARE.STVHC_T_ENTITIES e ON e.ENT_ID =ae.ACTENT_RECORDTYPE 
JOIN DISC_DEDUPE_PROD.MATRIXCARE.EMPLOYEE_MASTER_LIST CG ON CG.MASTER_ID = CAR.MASTER_ID
WHERE 
b.ACTCAT_NAME =''Communication''
AND e.ENT_NAME =''Caregiver''
AND TT.ACTTYPE_ID IN (''10165'',
''10166'',
''10167'',
''10168'',
''10169'',
''10170'');
;
 RETURN ''SUCCESS'';
    END;
    ';