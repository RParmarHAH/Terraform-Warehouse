CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_FACT_INTAKE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- NAME:  OSHAH_FACT_INTAKE
--
-- PURPOSE: Creates FACT INTAKE -- OSHAH
--
-- DEVELOPMENT LOG:
-- DATE			AUTHOR					NOTES:
-- --------		-------------------		---------------------------------------------------------------------------------------
-- 11/24/2022	    Darshan Gosai			Initial Development
-- 03/07/2022		Sanket Jain			changed stage table to parent one
-- 07/12/2023       Sandesh Gosavi         update code to use config flag
--*****************************************************************************************************************************

INSERT OVERWRITE INTO DW_PROD.STAGE.OSHAH_FACT_INTAKE
WITH CLIENT AS
(
	SELECT * FROM
	(
		SELECT PATIENTID AS CLIENT_NUMBER, MASTER_ID, AGENCYID, LASTNAME, FIRSTNAME, OFFICEID
		FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT PATIENTID AS CLIENT_NUMBER, MASTER_ID, AGENCYID, LASTNAME, FIRSTNAME, OFFICEID
		FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MATCH_LIST
		WHERE PATIENTID NOT IN (SELECT PATIENTID FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST) 
	)
)

,AUTH_BY_DAY AS
(
SELECT AUTHORIZATIONID 
		, PA.PATIENTID 
		, PA.SERVICECODEID 
		, DD.CALENDAR_DATE
		, DECODE(DAYNAME(DD.CALENDAR_DATE)
					, ''Sat'', PA.SATHOURS
			   		, ''Sun'', PA.SUNHOURS
			   		, ''Mon'', PA.MONHOURS
			   		, ''Tue'', PA.TUEHOURS
			   		, ''Wed'', PA.WEDHOURS
			   		, ''Thu'', PA.THUHOURS
			   		, ''Fri'', PA.FRIHOURS
			   	, 0) AS AUTH_HOURS_PER_DAY
		 	,IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED 
FROM 
DISC_PROD.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA

INNER JOIN DW_PROD.HAH.DIM_DATE DD
	ON DD.CALENDAR_DATE BETWEEN PA.FROMDATE AND PA.TODATE 

INNER JOIN DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC
	ON SC.SERVICECODEID = PA.SERVICECODEID 
WHERE PERIOD = ''Day''
)

,AUTH_BY_WEEK AS
(
SELECT PA.AUTHORIZATIONID 
		, PA.PATIENTID 
		, PA.SERVICECODEID 
		, DD.CALENDAR_DATE 
		, PA.MAXUNITSFORPERIOD/7.00 AS AUTH_HOURS_PER_DAY
		, IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED
FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
INNER JOIN DW_PROD.HAH.DIM_DATE DD
	ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE 
INNER JOIN DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC
	ON SC.SERVICECODEID = PA.SERVICECODEID 
WHERE PA.PERIOD = ''Week''
)

,AUTH_BY_MONTH AS
(
SELECT PA.AUTHORIZATIONID 
		, PA.PATIENTID 
		, PA.SERVICECODEID 
		, DD.CALENDAR_DATE 
		, PA.MAXUNITSFORPERIOD/(DAY(LAST_DAY(DD.CALENDAR_DATE))*1.00) AS AUTH_HOURS_PER_DAY
		, IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED 
FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
INNER JOIN DW_PROD.HAH.DIM_DATE DD
	ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE 
INNER JOIN DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC
	ON SC.SERVICECODEID = PA.SERVICECODEID 
WHERE PA.PERIOD = ''Monthly''
)

,AUTH_BY_PERIOD AS
(
SELECT PA.AUTHORIZATIONID 
		, PA.PATIENTID 
		, PA.SERVICECODEID 
		, DD.CALENDAR_DATE 
		, IFF(FROMDATE != TODATE, DATEDIFF(DAY, FROMDATE, TODATE)+1, 1) * 1.00 AS DAYS_IN_PERIOD
		, CASE WHEN DAYS_IN_PERIOD = 1
		   			THEN PA.MAXUNITSFORPERIOD
		   	   ELSE PA.MAXUNITSFORPERIOD/DAYS_IN_PERIOD
		  END AUTH_HOURS_PER_DAY
		, IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED
FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
INNER JOIN DW_PROD.HAH.DIM_DATE DD
	ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE 
INNER JOIN DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC
	ON SC.SERVICECODEID = PA.SERVICECODEID 
WHERE PERIOD = ''Entire Period''
)

, AUTH_OVERALL AS
(
	SELECT AUTHORIZATIONID, PATIENTID, SERVICECODEID, CALENDAR_DATE, HOURS_AUTHORIZED FROM AUTH_BY_DAY
	UNION
	SELECT AUTHORIZATIONID, PATIENTID, SERVICECODEID, CALENDAR_DATE, HOURS_AUTHORIZED FROM AUTH_BY_WEEK
	UNION
	SELECT AUTHORIZATIONID, PATIENTID, SERVICECODEID, CALENDAR_DATE, HOURS_AUTHORIZED FROM AUTH_BY_MONTH
	UNION
	SELECT AUTHORIZATIONID, PATIENTID, SERVICECODEID, CALENDAR_DATE, HOURS_AUTHORIZED FROM AUTH_BY_PERIOD
)

, AUTH_PER_MONTH AS
(
	SELECT AO.PATIENTID
			, AO.SERVICECODEID
			, DATE_TRUNC(''MONTH'', CALENDAR_DATE) AS AUTH_MONTH
			, MAX(PA.FROMDATE::DATE) AS REAUTHORIZED_DATE
			, SUM(HOURS_AUTHORIZED) AS HOURS_AUTHORIZED
	FROM AUTH_OVERALL AO
	INNER JOIN DISC_PROD.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
		ON PA.AUTHORIZATIONID = AO.AUTHORIZATIONID
	GROUP BY AO.PATIENTID, AO.SERVICECODEID, AUTH_MONTH
)

, AUTH_DATES AS
(
	SELECT DISTINCT
		PA.PATIENTID 
		, PA.SERVICECODEID 
		, FIRST_VALUE(AUTHORIZATIONNUMBER) 
			OVER(PARTITION BY PA.PATIENTID, PA.SERVICECODEID ORDER BY PA.FROMDATE DESC) AS AUTHNUMBER
	   , MAX(PA.FROMDATE)
	   		OVER(PARTITION BY PA.PATIENTID, PA.SERVICECODEID) AS LATEST_AUTH_BEGIN_DATE
	   , MAX(PA.TODATE) 
	   		OVER(PARTITION BY PA.PATIENTID, PA.SERVICECODEID) AS LATEST_AUTH_END_DATE
	FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA
)

,SUPERVISOR AS
(
SELECT CORD.PATIENTID, CORD.COORDINATORID, CORD.COORDINATORNAME
			, ROW_NUMBER() OVER(PARTITION BY CORD.AGENCYID, CORD.PATIENTID, CORD.COORDINATORSRNO ORDER BY CREATEDDATE DESC) RN
	FROM DISC_PROD.HHAEXCHANGEOSHAH.PROVIDERPATIENTCOORDINATORS CORD
		WHERE CORD.COORDINATORSRNO  = 1
)

,OSHAH_REVENUE_SEG AS
(
SELECT CONTRACTID,SERVICECODEID, REVENUE_CATEGORY, REVENUE_SUBCATEGORY_NAME, REVENUE_SUBCATEGORY_CODE 
	FROM DISC_PROD.HHAEXCHANGEOSHAH.VW_OSHAH_REVENUE
	GROUP BY CONTRACTID,SERVICECODEID, REVENUE_CATEGORY, REVENUE_SUBCATEGORY_NAME, REVENUE_SUBCATEGORY_CODE
)

,SERVICE_DATA AS
(
SELECT DISTINCT VR.PATIENTID AS PATIENTID
			, VISITS.PRIMARYSERVICECODEID AS SERVICECODEID 
			, MIN(VR.VISITDATE) AS BEGIN_SERVICE_DATE
			, MAX(VR.VISITDATE) AS END_SERVICE_DATE
			, NVL(DATEDIFF(DAY, MAX(VR.VISITDATE)::DATE, GETDATE()::DATE), 0) AS LAST_SERVICE_DAY_DIFF
	FROM 
	DISC_PROD.HHAEXCHANGEOSHAH.VISITINFO_REPL VISITS
	JOIN DISC_PROD.HHAEXCHANGEOSHAH.TBLVISITS_REPL VR
		ON VISITS.VISITID = VR.VISITID
			AND VISITS.AGENCYID = VR.AGENCYID
	
	INNER JOIN DISC_PROD.HHAEXCHANGEOSHAH.VISITS VS
		ON VS.VISITID = VR.VISITID 
		GROUP BY VR.PATIENTID, VISITS.PRIMARYSERVICECODEID 
)
, INTAKE_DATA AS 
(
SELECT DISTINCT MD5( ''OSHAH''
					|| ''-'' || PA.PATIENTID  
					|| ''-'' || APM.AUTH_MONTH
					|| ''-'' || NVL(SC.SERVICECODEID, -1) 
					|| ''-'' || ''OSHAH'') AS INTAKE_KEY
					
				, APM.AUTH_MONTH AS REPORT_DATE
				
				, MD5(''OSHAH'' || ''-'' || OFFICES.OFFICEID || ''-'' || ''HHAEXCHANGE'') AS BRANCH_KEY
				
				, MD5(CONCAT(''OSHAH'')|| ''-'' || CLIENT.MASTER_ID::NUMBER || ''-'' || ''HHAEXCHANGE'' ) AS CLIENT_KEY
								
		      ,MD5(''OSHAH'' || ''-'' || NVL(SC.CONTRACTID,-1)  || ''-'' || NVL(CR.CONTRACTRATEID,-1) || ''-'' || NVL(SC.SERVICECODEID,-1)|| ''-'' || ''HHAEXCHANGE'')
                  AS CONTRACT_KEY				
				
				, 17 AS SOURCE_SYSTEM_ID
				
				, APM.REAUTHORIZED_DATE AS REAUTHORIZED_DATE
				
				, AD.AUTHNUMBER AS PRE_AUTH_NUMBER
				
				, P.SERVICESTARTDATE AS BEGIN_SERVICE_DATE
				
				, IFF(SD.LAST_SERVICE_DAY_DIFF > 30, SD.END_SERVICE_DATE, NULL) AS END_SERVICE_DATE
				
				, AD.LATEST_AUTH_BEGIN_DATE::DATE AS LATEST_AUTH_BEGIN_DATE
				
				, AD.LATEST_AUTH_END_DATE::DATE AS LATEST_AUTH_END_DATE
				
				
				,UPPER(TRIM(OFFICES.OFFICENAME)) AS BRANCH_NAME
		      	
				, CR.RATE AS BILL_RATE
		      	
				, NVL(CLIENT.CLIENT_NUMBER, CLIENT.MASTER_ID) AS CLIENT_NUMBER
				
		      	, NVL(SC.CONTRACTID,-1) AS CONTRACT_CODE
		      	
				, CONCAT(''OSHAH - '',OFFICES.STATE) AS SYSTEM_CODE 
		      	
				, SUP.COORDINATORNAME AS CASE_MANAGER
		      	
				, APM.HOURS_AUTHORIZED AS HOURS_AUTHORIZED
		      	
				, APM.HOURS_AUTHORIZED AS HOURS_AUTHORIZED_NON_ADJUSTED
		        
				, :STR_ETL_TASK_KEY AS ETL_TASK_KEY
		       , :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY 
       	       , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
		      	, CURRENT_USER AS ETL_INSERTED_BY 
		      	, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
		      	, CURRENT_USER AS ETL_LAST_UPDATED_BY
		      	, 0 AS ETL_DELETED_FLAG
				
FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA

INNER JOIN DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC 
	ON SC.CONTRACTID = PA.CONTRACTID 
		AND SC.AGENCYID = PA.AGENCYID
		AND SC.SERVICECODEID = PA.SERVICECODEID

INNER JOIN AUTH_PER_MONTH APM
	ON APM.PATIENTID = PA.PATIENTID
		AND APM.SERVICECODEID = SC.SERVICECODEID
		
INNER JOIN CLIENT 
	ON CLIENT.CLIENT_NUMBER = PA.PATIENTID
	
INNER JOIN DISC_PROD.HHAEXCHANGEOSHAH.PATIENTS P
	ON P.PATIENTID = CLIENT.CLIENT_NUMBER
	
LEFT JOIN SERVICE_DATA SD
	ON SD.PATIENTID = PA.PATIENTID 
		AND SD.SERVICECODEID = PA.SERVICECODEID
LEFT JOIN AUTH_DATES AD
	ON AD.PATIENTID = PA.PATIENTID 
		AND AD.SERVICECODEID = PA.SERVICECODEID 
LEFT JOIN SUPERVISOR SUP
	ON SUP.PATIENTID = PA.PATIENTID 
		AND SUP.RN = 1

LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTRATES CR 
	ON CR.CONTRACTID = SC.CONTRACTID 
		AND CR.AGENCYID = PA.AGENCYID
		AND CR.SERVICECODEID = PA.SERVICECODEID
		AND CR.TODATE::DATE > GETDATE()::DATE 
		AND CR.FROMDATE::DATE <= GETDATE()::DATE
		
		
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL OFFICES
		ON OFFICES.OFFICEID = P.OFFICEID
WHERE OFFICES.STATE IN (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE)
)
SELECT INTAKE_KEY
		, REPORT_DATE
		, BRANCH_KEY
		, CLIENT_KEY
		, CONTRACT_KEY
		, SOURCE_SYSTEM_ID
		, REAUTHORIZED_DATE
		, PRE_AUTH_NUMBER
		, BEGIN_SERVICE_DATE
		, END_SERVICE_DATE
		, LATEST_AUTH_BEGIN_DATE
		, LATEST_AUTH_END_DATE
		, BRANCH_NAME
		, CLIENT_NUMBER 
		, CONTRACT_CODE
		, BILL_RATE
		, SYSTEM_CODE
		, CASE_MANAGER
		, HOURS_AUTHORIZED
		, HOURS_AUTHORIZED_NON_ADJUSTED
		, ETL_TASK_KEY
		, ETL_INSERTED_TASK_KEY 
       	, ETL_INSERTED_DATE
		, ETL_INSERTED_BY 
		, ETL_LAST_UPDATED_DATE
		, ETL_LAST_UPDATED_BY
		, ETL_DELETED_FLAG
		FROM INTAKE_DATA ;
RETURN ''SUCCESS'';
END;
';