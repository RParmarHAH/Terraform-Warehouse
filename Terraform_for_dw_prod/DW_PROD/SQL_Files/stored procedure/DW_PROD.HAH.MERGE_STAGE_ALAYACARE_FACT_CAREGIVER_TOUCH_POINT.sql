CREATE OR REPLACE PROCEDURE DW_PROD.HAH.MERGE_STAGE_ALAYACARE_FACT_CAREGIVER_TOUCH_POINT()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN
    MERGE INTO DW_PROD.HAH.FACT_CAREGIVER_TOUCH_POINT TGT 
USING DW_PROD.STAGE.ALAYACARE_FACT_CAREGIVER_TOUCH_POINT STAGE 
ON TGT.INTERACTION_KEY = STAGE.INTERACTION_KEY
WHEN MATCHED THEN 
UPDATE SET 
TGT.SOURCE_SYSTEM_ID=STAGE.SOURCE_SYSTEM_ID,
TGT.SYSTEM_CODE=STAGE.SYSTEM_CODE,
TGT.ACTIVITY_DATE=STAGE.ACTIVITY_DATE,
TGT.EMPLOYEE_KEY=STAGE.EMPLOYEE_KEY,
TGT.EMPLOYEE_FIRST_NAME = STAGE.EMPLOYEE_FIRST_NAME,
TGT.EMPLOYEE_LAST_NAME = STAGE.EMPLOYEE_LAST_NAME,
TGT.BRANCH_KEY=STAGE.BRANCH_KEY,
TGT.ACTIVITY_KEY=STAGE.ACTIVITY_KEY,
TGT.ACTIVITY_NOTES=STAGE.ACTIVITY_NOTES,
TGT.ETL_TASK_KEY=STAGE.ETL_TASK_KEY,
TGT.ETL_INSERTED_TASK_KEY=STAGE.ETL_INSERTED_TASK_KEY,
TGT.ETL_INSERTED_DATE=STAGE.ETL_INSERTED_DATE,
TGT.ETL_INSERTED_BY=STAGE.ETL_INSERTED_BY,
TGT.ETL_LAST_UPDATED_DATE=STAGE.ETL_LAST_UPDATED_DATE,
TGT.ETL_LAST_UPDATED_BY=STAGE.ETL_LAST_UPDATED_BY,
TGT.ETL_DELETED_FLAG=STAGE.ETL_DELETED_FLAG,
TGT.ETL_INFERRED_MEMBER_FLAG=STAGE.ETL_INFERRED_MEMBER_FLAG
WHEN NOT MATCHED THEN 
INSERT ( 
INTERACTION_KEY,
SOURCE_SYSTEM_ID,
SYSTEM_CODE,
ACTIVITY_DATE,
EMPLOYEE_KEY,
EMPLOYEE_FIRST_NAME,
EMPLOYEE_LAST_NAME,
BRANCH_KEY,
ACTIVITY_KEY,
ACTIVITY_NOTES,
ETL_TASK_KEY,
ETL_INSERTED_TASK_KEY,
ETL_INSERTED_DATE,
ETL_INSERTED_BY,
ETL_LAST_UPDATED_DATE,
ETL_LAST_UPDATED_BY,
ETL_DELETED_FLAG,
ETL_INFERRED_MEMBER_FLAG
) 
VALUES (
STAGE.INTERACTION_KEY,
STAGE.SOURCE_SYSTEM_ID,
STAGE.SYSTEM_CODE,
STAGE.ACTIVITY_DATE,
STAGE.EMPLOYEE_KEY,
STAGE.EMPLOYEE_FIRST_NAME,
STAGE.EMPLOYEE_LAST_NAME,
STAGE.BRANCH_KEY,
STAGE.ACTIVITY_KEY,
STAGE.ACTIVITY_NOTES,
STAGE.ETL_TASK_KEY,
STAGE.ETL_INSERTED_TASK_KEY,
STAGE.ETL_INSERTED_DATE,
STAGE.ETL_INSERTED_BY,
STAGE.ETL_LAST_UPDATED_DATE,
STAGE.ETL_LAST_UPDATED_BY,
STAGE.ETL_DELETED_FLAG,
STAGE.ETL_INFERRED_MEMBER_FLAG
);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
    ';