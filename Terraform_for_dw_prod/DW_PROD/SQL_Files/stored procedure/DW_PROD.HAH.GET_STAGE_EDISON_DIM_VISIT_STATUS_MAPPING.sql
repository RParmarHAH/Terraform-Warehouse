CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_EDISON_DIM_VISIT_STATUS_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN
    --*****************************************************************************************************************************
-- NAME:  GET_STAGE_EDISON_DIM_VISIT_STATUS_MAPPING
--
-- PURPOSE: Creates one row per status
--
-- PRODELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 13/09/22     Shraddha Sejpal      	Initial development
-- 18/08/23     Leo Joy/Harshala Kadam  Modified DERIVED STATUS	
-- 22/11/23     Harshala Kadam			Updated logic for visit_status
-- 01/19/24	   Shubham Khunare	     schedule/visit Status name correction
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.EDISON_DIM_VISIT_STATUS_MAPPING

WITH RESCHEDULED AS 
( 
	WITH DELETEDVISIT AS 
	( 
		SELECT PATIENTID,VISITDATE FROM DISC_PROD.HHAEXCHANGEEDISON.TBLVISITS_REPL
		WHERE DELETED=TRUE 
		GROUP BY PATIENTID ,VISITDATE 
	)
	SELECT *
	FROM DISC_PROD.HHAEXCHANGEEDISON.TBLVISITS_REPL VISIT 
	INNER JOIN DELETEDVISIT DT 
	ON VISIT.PATIENTID =DT.PATIENTID AND VISIT.VISITDATE=DT.VISITDATE
	WHERE DELETED =FALSE 
),
STATUS AS (
SELECT 
	17 AS SOURCE_SYSTEM_ID
    , ''EDISON'' AS SYSTEM_CODE,
    CASE  
	WHEN  RE.VISITID IS NOT NULL  AND  VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0''  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL )
	AND  VR.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) in(0,1,2) 
    THEN  ''ReScheduled In Review-Billed''
	WHEN  RE.VISITID IS NOT NULL AND VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
    AND VR."VISITENDTIME" IS NOT NULL AND VR.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) in(0,1,2) 
    THEN  ''ReScheduled Completed-Billed''
    WHEN  RE.VISITID IS NOT NULL AND VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL AND (UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE )
    THEN  ''ReScheduled Completed-Notbillable''
    WHEN  RE.VISITID IS NOT NULL  AND  VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0''  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL ) AND (VR.BILLED =0) 
    THEN  ''ReScheduled In Review Unbilled''
    WHEN  RE.VISITID IS NOT NULL AND VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL AND  VR.BILLED = 0
    THEN  ''ReScheduled Completed-Unbilled''
	WHEN VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 1  AND (UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE )
    THEN ''Cancelled Not billable'' 
	WHEN VR.ISMISSEDVISIT = 1 AND  VR.BILLED =1 AND VR.DELETED = TRUE
    THEN ''Cancelled Billed'' 
    WHEN  RE.VISITID IS NOT NULL  AND  VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0''  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL ) AND (UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE )
    THEN  ''ReScheduled In Review Notbillable''
    WHEN (VR.VISITDATE::DATE > GETDATE() AND RE.VISITID IS NULL )  AND VR.VISITDATE::DATE > GETDATE()AND (UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE )
    THEN ''Scheduled Future Notbillable''--yes
    WHEN  RE.VISITID IS NULL AND VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0''  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL ) AND (UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE )
    THEN ''Scheduled In Review Notbillable''
    WHEN   RE.VISITID IS NULL   AND VR.ISMISSEDVISIT = 0 AND  VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0''  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL ) AND VR.BILLED =1 
    THEN ''Scheduled In Review Billed''
    WHEN   RE.VISITID IS NULL AND VR.ISMISSEDVISIT = 0 AND VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL AND VR.BILLED =1
    THEN ''Scheduled Completed Billed''
    WHEN   RE.VISITID IS NULL AND VR.ISMISSEDVISIT = 0 AND VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL AND (UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE )
    THEN ''Scheduled Completed Not billable''
    WHEN VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL )
    THEN ''Completed In Review '' --yes
    WHEN VR.ISMISSEDVISIT = 1 AND  VR.BILLED =0 AND  VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0''  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL )
    THEN ''Cancelled In Review Unbilled''
	WHEN  RE.VISITID IS NULL AND VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0''  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL ) AND VR.BILLED =0 
    THEN ''Scheduled In Review Unbilled''
   	WHEN  RE.VISITID IS NULL AND VR.ISMISSEDVISIT = 0 AND VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL AND VR.BILLED = 0
    THEN ''Scheduled Completed UnBilled''
    WHEN  (VR.VISITDATE::DATE > GETDATE() AND RE.VISITID IS NULL)  AND  (VR.BILLED =0 )AND NVL(VR.ISMISSEDVISIT,0) =''0''
    THEN ''Scheduled Future Unbilled''
    WHEN (VR.VISITDATE::DATE > GETDATE() AND  RE.VISITID IS NOT NULL ) AND  (VR.BILLED =0 )AND NVL(VR.ISMISSEDVISIT,0) =''0''
    THEN ''Rescheduled Future Unbilled''
    WHEN (VR.VISITDATE::DATE > GETDATE() AND RE.VISITID IS NULL ) AND (VR.BILLED =0 )AND VR.DELETED=FALSE
    THEN ''Scheduled Unbilled''--yes
    WHEN VR.ISMISSEDVISIT = 1 AND VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0''  AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL )
    THEN ''Cancelled In Review''--yes
    WHEN VR.VISITDATE::DATE > GETDATE() AND VR.ISMISSEDVISIT = 1 AND  VR.BILLED =0 AND VR.DELETED = TRUE
    THEN ''Future Cancelled Unbilled''
	WHEN VR.ISMISSEDVISIT = 1 AND  VR.BILLED =0 AND VR.DELETED = TRUE
    THEN ''Cancelled Unbilled''
    WHEN (VR.ISMISSEDVISIT = 1 AND VR.VISITDATE::DATE <= GETDATE())
    THEN ''Cancelled''
    END AS DERIVED_DISC_STATUS
	, NULL AS DISC_SCHEDULE_STATUS
	, NULL AS DISC_VISIT_STATUS
	, NULL AS DISC_INVOICE_STATUS
	, NULL AS DISC_PAYROLL_STATUS,
  	CASE 
	WHEN VR.VISITDATE::DATE > GETDATE() AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = 0 AND NVL(VR.ISMISSEDVISIT,0)=0 AND RE.VISITID IS NULL THEN ''s02''
	WHEN RE.VISITID IS NULL  AND VR.ISMISSEDVISIT = 0 THEN ''s01''
	WHEN RE.VISITID IS NOT NULL THEN ''s03''
	WHEN  VR.ISMISSEDVISIT = 1  THEN ''s05''
	--WHEN RE.VISITID IS NULL THEN ''s01''
	END AS SCHEDULE_STATUS_CODE
    ,
    CASE 
	WHEN VR.VISITDATE::DATE > GETDATE() AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = 0 AND NVL(VR.ISMISSEDVISIT,0)=0 AND RE.VISITID IS NULL THEN ''Scheduled-Open''
	WHEN RE.VISITID IS NULL AND VR.ISMISSEDVISIT = 0 THEN ''Scheduled''
	WHEN RE.VISITID IS NOT NULL THEN ''Rescheduled''
	WHEN VR.ISMISSEDVISIT = 1  THEN ''Cancelled''
	--WHEN RE.VISITID IS NULL THEN ''Scheduled''
	END AS SCHEDULE_STATUS_NAME
    ,
    CASE 
	WHEN VR.VISITDATE::DATE > GETDATE() AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = 0 AND NVL(VR.ISMISSEDVISIT,0)=0 AND RE.VISITID IS NULL THEN ''Scheduled-No Payement Recieved''
	WHEN  RE.VISITID IS NULL AND VR.ISMISSEDVISIT = 0  THEN ''Scheduled Visit''
	
	WHEN RE.VISITID IS NOT NULL THEN ''ReScheduled''
	WHEN  VR.ISMISSEDVISIT = 1  THEN ''Cancelled''
	--WHEN RE.VISITID IS NULL THEN ''Scheduled Visit''
	END AS SCHEDULE_STATUS_DESCRIPTION
    ,
    CASE 
    WHEN VR.VISITDATE::DATE > GETDATE() THEN ''v01''
	WHEN VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0'' 
  	    AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL ) THEN ''v02''
	WHEN VR.ISMISSEDVISIT = 1 AND VR.VISITDATE::DATE <= GETDATE() THEN ''v03''
    WHEN VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL THEN  ''v04''	
    ELSE NULL 
    END AS VISIT_STATUS_CODE
    ,
    CASE 
	WHEN VR.VISITDATE::DATE > GETDATE() THEN ''Future''
	WHEN VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0'' 
  	    AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL ) THEN ''In Review''
	WHEN VR.ISMISSEDVISIT = 1 AND VR.VISITDATE::DATE <= GETDATE() THEN ''Did not happen''
	 WHEN VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL THEN ''Completed''
    ELSE NULL 
    END AS VISIT_STATUS_NAME
    ,
    CASE 
	WHEN VR.VISITDATE::DATE > GETDATE() THEN ''Future''
	WHEN VR.VISITDATE <=current_date AND VR.ISMISSEDVISIT =''0'' 
  	    AND (VR.VISITSTARTTIME IS NULL OR VR.VISITENDTIME  IS NULL ) THEN ''In Review''
	WHEN VR.ISMISSEDVISIT = 1 AND VR.VISITDATE::DATE <= GETDATE() THEN ''Did Not Happen''
	 WHEN VR.VISITDATE::DATE <= GETDATE() AND VR.ISMISSEDVISIT = 0 AND VR.VISITSTARTTIME IS NOT NULL
        AND VR."VISITENDTIME" IS NOT NULL THEN ''Completed''    ELSE NULL
    END AS VISIT_STATUS_DESCRIPTION
    ,
    CASE 
	WHEN UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE 
    THEN ''i01''
	WHEN VR.BILLED =0   THEN ''i02''
--	WHEN VR.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0)=0 THEN ''i03'' 
	WHEN VR.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) in(0,1,2) THEN ''i03'' 
	ELSE NULL 
    END AS INVOICE_STATUS_CODE
    ,
    CASE 
	WHEN UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE 
	THEN ''Not BIllable''
	WHEN VR.BILLED =0  THEN ''UnBIlled''
--	WHEN VR.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) THEN ''Billed''
	WHEN VR.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) in(0,1,2) THEN ''Billed'' 
    ELSE NULL 
    END AS INVOICE_STATUS_NAME
    ,
    CASE 
	WHEN UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VISITS.NONBILLABLE=TRUE 
	THEN ''Not BIllable''
	WHEN VR.BILLED =0  THEN ''UnBIlled'' 
--	WHEN VR.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) THEN ''Billed''
	WHEN VR.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) in(0,1,2) THEN ''Billed'' 
    ELSE NULL  
    END AS INVOICE_STATUS_DESCRIPTION
    , NULL AS PAYROLL_STATUS_CODE
    , NULL AS PAYROLL_STATUS_NAME
    , NULL AS PAYROLL_STATUS_DESCRIPTION
FROM DISC_PROD.HHAEXCHANGEEDISON.VISITINFO_REPL VISITS
JOIN DISC_PROD.HHAEXCHANGEEDISON.TBLVISITS_REPL VR 
	ON VISITS.VISITID = VR.VISITID AND VISITS.AGENCYID = VR.AGENCYID
--LEFT JOIN DISC_PROD.HHAEXCHANGEEDISON.VISITUNBILLEDDETAILS IV
--	ON IV.VISITID=VISITS.VISITID
LEFT JOIN RESCHEDULED RE 
	ON VISITS.VISITID=RE.VISITID
LEFT JOIN DISC_PROD.HHAEXCHANGEEDISON.SERVICECODES SC
    ON VISITS.PRIMARYSERVICECODEID=SC.SERVICECODEID
LEFT JOIN DISC_PROD.HHAEXCHANGEEDISON.TBLINVOICEDETAILS_REPL INVOICE 
	ON VISITS.VISITID = INVOICE.VISITID AND VISITS.PRIMARYSERVICECODEID = INVOICE.INVSERVICECODEID
WHERE VISITS.AGENCYID = 155
)
SELECT DISTINCT 
--MD5(''17'' || ''-'' || ''EDISON'' || ''-'' || NVL(DERIVED_DISC_STATUS,''S'')) AS VISIT_STATUS_KEY,
MD5(''17'' || ''-'' || ''EDISON'' || ''-'' || NVL(SCHEDULE_STATUS_NAME,''S'')||NVL(VISIT_STATUS_NAME,''S'')||NVL(INVOICE_STATUS_NAME,''S'')) AS VISIT_STATUS_KEY, 
STATUS.*,
     CASE WHEN DERIVED_DISC_STATUS IN (''ReScheduled Completed-Billed'',''Scheduled Completed Not billable'',''ReScheduled Completed-Unbilled'',''Scheduled Completed UnBilled'',''ReScheduled Completed-Notbillable'',''Completed Billed'',''ReScheduled Completed'',''ReScheduled Billed'',''Scheduled Completed Billed'')
	 THEN ''YES''
	 WHEN DERIVED_DISC_STATUS IN (''ReScheduled In Review Unbilled'',''Scheduled In Review Billed'',''Scheduled In Review Unbilled'',''Scheduled Future Unbilled'',''Cancelled Not billable'',''Cancelled Billed'',''Scheduled In Review Notbillable'',''ReScheduled In Review-Billed'',''Rescheduled Future Unbilled'',''Future Cancelled Unbilled'',''Scheduled In Review Billed'',''Scheduled Billed'',''Scheduled Future NotBilled'',''Scheduled NotBilled In Review'',''Scheduled NotBilled'',''Scheduled Future'',''ReScheduled Notbillable In Review'',''ReScheduled Notbillable'',''Cancelled In Review Unbilled'',''Cancelled Unbilled'',''Cancelled'') 
	 THEN ''NO'' 
	 ELSE ''UNKNOWN'' END AS CONFIRMED_FLAG,
     NULL AS CONSISTENT_FLAG FROM STATUS ORDER BY DERIVED_DISC_STATUS;
      ;
    SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

    return return_result;
END;
    ';