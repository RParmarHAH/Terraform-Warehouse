CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_TRUSTPOINTDATA_FACT_PAYROLL("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '

BEGIN

INSERT OVERWRITE INTO STAGE.TRUSTPOINTDATA_FACT_PAYROLL
(
	PAYROLL_KEY, REPORT_DATE, EMPLOYEE_KEY, BRANCH_KEY, SOURCE_SYSTEM_ID, PAYROLL_DATE, EMPLOYEE_ID,
	BRANCH_NAME, SYSTEM_CODE, PAY_PERIOD_START_DATE, PAY_PERIOD_END_DATE, CHECK_NUMBER, 
	PAY_HOURS, SERVICE_HOURS, OVERTIME_HOURS, NON_SERVICE_UNITS, SICK_HOURS, VACATION_HOURS, PAY_RATE, OVERTIME_RATE,
	GROSS_PAY_AMOUNT, SERVICE_PAY_AMOUNT, OVERTIME_PAY_AMOUNT, NON_SERVICE_PAY_AMOUNT,
	TAX_AMOUNT, NET_PAY_AMOUNT, OTHER_DEDUCTIONS_AMOUNT, UNION_DUES_AMOUNT, REINBURSMENT_AMOUNT,
	ETL_TASK_KEY, ETL_INSERTED_TASK_KEY, ETL_INSERTED_DATE, ETL_INSERTED_BY, 
	ETL_LAST_UPDATED_DATE, ETL_LAST_UPDATED_BY, ETL_DELETED_FLAG
)
WITH EMPLOYEE AS (
	SELECT DISTINCT 
		MASTER_ID, EMPLOYEE_NUMBER, COMPANY
	FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MASTER_LIST
	UNION
	SELECT DISTINCT 
		MASTER_ID, EMPLOYEE_NUMBER, COMPANY
	FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MATCH_LIST 
	WHERE EMPLOYEE_NUMBER NOT IN (SELECT DISTINCT EMPLOYEE_NUMBER FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MASTER_LIST)
	UNION
	SELECT DISTINCT
		MASTER_ID, ID AS EMPLOYEE_NUMBER, UPPER(TRIM(EMPLOYEE_EIN)) AS COMPANY
	FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MAPPING_MATCH_LIST
	WHERE ID NOT IN (SELECT EMPLOYEE_NUMBER FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MASTER_LIST UNION SELECT EMPLOYEE_NUMBER FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MATCH_LIST)
--	AND ID NOT IN (''HHA9964'',	''HHA9098'',	''HHA9691'',	''HHA8238'',	''HHA10106'',	''HHA8817'',	''HHA9763'',	''HHA10340'',	''HHA7911'',	''HHA9750'',	''HHA9502'',	''16066'',	''HHA9484'',	''HHA8546'',	''HHA9801'',	''HHA9087'',	''HHA10118'',	''HHA9942'',	''HHA10432'',	''HHA8385'',	''HHA8465'',	''HHA8215'',	''HHA10082'',	''HHA10104'',	''HHA9330'',	''HHA10283'',	''HHA9101'',	''HHA9204'',	''HHA9699'',	''HHA8811'',	''HHA8029'',	''HHA10080'',	''HHA9669'',	''HHA9951'',	''HHA10115'',	''HHA9700'',	''HHA9456'',	''HHA8819'',	''HHA8879'',	''HHA10388'',	''HHA8799'',	''HHA9884'',	''HHA7871'',	''HHA7984'',	''HHA8557'',	''HHA9822'',	''HHA10220'',	''HHA10196'',	''HHA9086'',	''HHA9949'',	''HHA8084'',	''HHA10256'',	''HHA8849'',	''HHA8615'',	''HHA9604'',	''HHA9666'',	''HHA9957'',	''HHA8263'',	''HHA10088'',	''HHA9425'',	''HHA8124'',	''HHA8547'',	''HHA10346'',	''HHA10030'',	''HHA9955'',	''HHA8784'',	''HHA7985'',	''HHA9310'',	''HHA8030'',	''HHA9843'',	''HHA9460'',	''HHA9457'',	''HHA9938'',	''HHA9320'',	''HHA9547'',	''HHA8004'',	''HHA7998'',	''HHA9678'',	''HHA9702'',	''HHA10215'',	''HHA9090'',	''HHA10089'',	''HHA9254'',	''HHA8471'',	''HHA8943'',	''HHA9200'',''HHA10207'', ''HHA10322'', ''HHA7755'', ''HHA9212'', ''HHA9984'', ''HHA2793'', ''HHA7616'', ''HHA3483'', ''HHA3503'', ''HHA3523'', ''HHA7553'', ''HHA7795'', ''106009'', ''17401'', ''HHA1609'', ''BROT14'', ''101178'', ''AC007334671'', ''HHA1309'', ''HHA3300'', ''HHA1747'', ''HHA2169'', ''HHA3627'', ''HHA2131'', ''HHA1756'', ''HHA1765'',	''HHA2642'',	''HHA1964'',	''HHA2157'',	''HHA1942'',	''HHA2798'',	''HHA1485'',	''HHA2256'',	''HHA2188'',	''HHA2661'',	''HHA2354'',	''HHA1760'',	''HHA1547'',	''HHA1885'',	''HHA2158'',	''HHA2251'',	''HHA1395'',	''HHA2069'',	''HHA1408'',	''HHA1241'',	''HHA2102'',	''HHA1230'',	''HHA2502'',	''HHA1308'',	''HHA2226'',	''HHA2460'',	''HHA1329'',	''HHA2166'',	''HHA1822'',	''HHA1950'',	''HHA2352'',	''HHA1766'',	''HHA2395'',	''HHA1561'',	''HHA1188'',	''HHA2210'',	''HHA1813'',	''HHA2179'',	''HHA1204'',	''HHA1050'',	''HHA1531'',	''HHA1535'',	''HHA1889'',	''HHA1772'',	''HHA1038'',	''HHA2673'',	''HHA1036'',	''HHA2675'',	''HHA1837'',	''HHA2212'',	''HHA1999'',	''HHA1319'',	''HHA1393'',	''HHA1989'',	''HHA2580'',	''HHA2382'',	''HHA2327'',	''HHA2310'',	''HHA1362'',	''HHA2674'',	''HHA2124'',	''HHA1174'',	''HHA2525'',	''HHA1302'',	''HHA1737'',	''HHA1512'',	''HHA1444'',	''HHA2718'',	''HHA1946'',	''HHA3290'',	''HHA1805'',	''HHA1318'',	''HHA2324'',	''HHA1901'',	''HHA1132'',	''HHA2778'',	''HHA2207'',	''HHA2663'',	''HHA1340'',	''HHA1196'',	''HHA1400'',	''HHA1483'',	''HHA3419'',	''HHA2134'',	''HHA2628'',	''HHA1162'',	''HHA2019'',	''HHA1755'',	''HHA1238'',	''HHA2004'',	''HHA1312'',	''HHA2190'',	''HHA1903'',	''HHA1650'',	''HHA2623'',	''HHA2255'',	''HHA1896'',	''HHA1249'',	''HHA1216'',	''HHA1967'',	''HHA3349'',	''HHA2120'',	''HHA1688'',	''HHA1876'',	''HHA2740'',	''HHA2571'',	''HHA2326'',	''HHA2201'',	''HHA2264'',	''HHA1305'',	''HHA2065'',	''HHA1343'',	''HHA1233'',	''HHA1041'',	''HHA2684'',	''HHA2453'',	''HHA2076'',	''HHA2775'',	''HHA1495'',	''HHA1739'',	''HHA1665'',	''HHA2209'',	''HHA2732'',	''HHA1821'',	''HHA2025'',	''HHA2500'',	''HHA2082'',	''HHA2569'',	''HHA2220'',	''HHA2219'',	''HHA1049'',	''HHA1432'',	''HHA1040'',	''HHA3421'',	''HHA2164'',	''HHA2391'',	''HHA1887'',	''HHA1074'',	''HHA2832'',	''HHA2584'',	''HHA2056'',	''HHA1554'',	''HHA2788'',	''HHA2715'',	''HHA2233'',	''HHA2132'',	''HHA2085'',	''HHA1208'',	''HHA1929'',	''HHA2143'',	''HHA2048'',	''HHA2498'',	''HHA1327'',	''HHA1756'',	''HHA2427'',	''HHA1084'',	''HHA1562'',	''HHA1291'',	''HHA1969'',	''HHA2297'',	''HHA2147'',	''HHA1273'',	''HHA2567'',	''HHA1521'',	''HHA1774'',	''HHA2138'',	''HHA1332'',	''HHA1778'',	''HHA2431'',	''HHA2546'',	''HHA1910'',	''HHA1841'',	''HHA2622'',	''HHA1994'',	''HHA2079'',	''HHA2187'',	''HHA1109'',	''HHA2434'',	''HHA1398'',	''HHA1317'',	''HHA1351'',	''HHA1342'',	''HHA1279'',	''HHA2203'',	''HHA1781'',	''HHA1771'',	''HHA1296'',	''HHA2249'',	''HHA2767'',	''HHA2000'',	''HHA1881'',	''HHA1368'',	''11959'',	''HHA1986'',	''HHA1935'',	''HHA2131'',	''HHA1338'',	''HHA1450'',	''HHA2672'',	''HHA1146'',	''HHA1429'',	''HHA2151'',	''HHA1984'',	''HHA1921'',	''HHA1545'',	''HHA2287'',	''HHA2043'',	''HHA2570'',	''HHA2253'',	''HHA1222'',	''HHA2279'',	''HHA1852'',	''HHA1957'',	''HHA2690'',	''HHA3408'',	''HHA1190'',	''HHA1286'',	''HHA1227'',	''HHA2770'',	''HHA2712'',	''HHA1948'',	''HHA1443'',	''HHA1858'',	''HHA1173'',	''HHA1859'',	''HHA2300'',	''HHA2595'',	''HHA1202'',	''HHA1299'',	''HHA1264'',	''HHA1277'',	''HHA1294'',	''HHA1819'',	''HHA2176'',	''HHA1637'',	''HHA2180'',	''HHA2280'',	''HHA1061'',	''HHA2217'',	''HHA1823'',	''HHA1414'',	''HHA2647'',	''HHA2293'',	''HHA1268'',	''HHA1507'',	''HHA2747'',	''HHA1870'',	''HHA2051'',	''HHA2378'',	''HHA2250'',	''HHA1484'',	''HHA1987'',	''HHA1217'',	''HHA1539'',	''HHA2625'',	''HHA2316'',	''HHA1258'',	''HHA2178'',	''HHA1282'',	''HHA2409'',	''HHA2230'',	''HHA2265'',	''HHA1456'',	''HHA2129'', ''13245'',	''14387'',	''96704'',	''HHA3294'',	''HHA3368'',	''HHA3363'',	''HHA1438'',	''14386'',	''HHA3439'',	''HHA2734'',	''102568'',	''HHA3305'',	''18245'',	''HHA3281'',	''90508'',	''HHA2528'',	''HHA1281'',	''HHA2413'',	''HHA2313'',	''HHA1399'',	''108881'',	''AC000006010'',	''90793'',	''HHA3337'',	''HHA2544'',	''14977'', ''HHA7801'') -- (''BROT14'', ''HHA2249'', ''HHA1609'', ''HHA1309'', ''HHA1747'', ''HHA2169'', ''HHA3300'', ''13245'', ''90793'', ''14977'', ''AC000006010'', ''18245'', ''90508'', ''96704'', ''102568'', ''14386'', ''101178'', ''HHA3439'', ''108881'', ''HHA1281'', ''AC007334671'')
), PAYROLL AS (
	SELECT distinct PAYROLL.PAYROLL_DATE AS REPORT_DATE, 
			COALESCE(PAYROLL.EMPLOYEE_ID::STRING, TRIM(PAYROLL.EMPLOYEE_ID)) AS DERIVED_EMPLOYEE_ID, -- Try to use a consistent int version (i.e. no preceding 0), but if alphanumeric then use the value)
		    MD5(TRIM(PAYROLL.Company) || ''-'' || TRIM(coalesce(DUP_EMP.MASTER_ID, trim(PAYROLL.EMPLOYEE_ID) || ''-''||trim(PAYROLL.COMPANY))) || ''-'' || ''1900-01-01'' || ''-'' || ''TRUSTPOINTDATA'') AS EMPLOYEE_KEY,--should be same as dim_employee logic
		COALESCE(BRANCH.BRANCH_KEY, md5(PAYROLL.COMPANY || ''-'' || ''Unknown'' || ''-'' ||  ''TRUSTPOINTDATA'')) AS BRANCH_KEY,
		6 AS SOURCE_SYSTEM_ID,
		PAYROLL.PAYROLL_DATE,
	    PAYROLL.EMPLOYEE_ID AS EMPLOYEE_ID, 
		TRIM(UPPER(COALESCE(BRANCH.BRANCH_NAME, ''Unknown''))) AS BRANCH_NAME,
		PAYROLL.COMPANY AS SYSTEM_CODE,
		PAYROLL.PAY_PERIOD_START_DATE,
		PAYROLL.PAY_PERIOD_END_DATE,
		PAYROLL.CHECK_NUMBER,
		SUM(PAYROLL.PAY_HOURS) AS PAY_HOURS,
		SUM(PAYROLL.SERVICE_HOURS) AS SERVICE_HOURS,
		SUM(PAYROLL.OVERTIME_HOURS) AS OVERTIME_HOURS,
		PAYROLL.NON_SERVICE_UNITS,
		PAYROLL.SICK_HOURS,
		SUM(PAYROLL.VACATION_HOURS) AS VACATION_HOURS,
		CASE WHEN PAYROLL.PAY_RATE = 0 OR PAYROLL.PAY_RATE IS NULL
			THEN PAYROLL.SERVICE_PAY_AMOUNT / CASE WHEN PAYROLL.SERVICE_HOURS = 0 THEN NULL ELSE PAYROLL.SERVICE_HOURS END
		ELSE PAYROLL.PAY_RATE
		END AS PAY_RATE,
		PAYROLL.OVERTIME_RATE,
		PAYROLL.GROSS_PAY_AMOUNT,
		SUM(PAYROLL.SERVICE_PAY_AMOUNT) AS SERVICE_PAY_AMOUNT,
		SUM(PAYROLL.OVERTIME_PAY_AMOUNT) AS OVERTIME_PAY_AMOUNT,
		SUM(PAYROLL.NON_SERVICE_PAY_AMOUNT) AS NON_SERVICE_PAY_AMOUNT,
		PAYROLL.TAX_AMOUNT,
		PAYROLL.NET_PAY_AMOUNT,
		SUM(PAYROLL.OTHER_DEDUCTIONS_AMOUNT) AS OTHER_DEDUCTIONS_AMOUNT,
		PAYROLL.UNION_DUES_AMOUNT,
		PAYROLL.REIMBURSEMENT_AMOUNT AS REINBURSMENT_AMOUNT,
		GREATEST(COALESCE(PAYROLL.ETL_LAST_UPDATED_DATE, ''1/1/1900''), COALESCE(BRANCH.ETL_LAST_UPDATED_DATE, ''1/1/1900'')) AS ETL_LAST_UPDATED_DATE
	FROM DISC_PROD.TRUSTPOINTDATA.PAYROLL AS PAYROLL
	LEFT JOIN DISC_PROD.TRUSTPOINTDATA.EMPLOYEES EMP
		ON EMP.EMPLOYEE_NUMBER = PAYROLL.EMPLOYEE_ID
		AND EMP.COMPANY = PAYROLL.COMPANY
	LEFT JOIN EMPLOYEE AS DUP_EMP 
		ON COALESCE(PAYROLL.EMPLOYEE_ID::STRING, TRIM(PAYROLL.EMPLOYEE_ID)) = DUP_EMP.EMPLOYEE_NUMBER 
		AND PAYROLL.COMPANY = DUP_EMP.COMPANY
	LEFT JOIN HAH.DIM_BRANCH AS BRANCH
		ON BRANCH.SOURCE_SYSTEM_ID = 6 
        AND 
		(UPPER(TRIM(BRANCH.BRANCH_NAME)) = CASE WHEN PAYROLL.BRANCH_NAME = ''Excel - Chinatown'' AND PAYROLL.COMPANY = ''EXCEL'' THEN ''CHINATOWN PA'' ELSE UPPER(TRIM(PAYROLL.BRANCH_NAME)) END
		OR 
		UPPER(TRIM(SUBSTRING(PAYROLL.BRANCH_NAME, CHARINDEX(''-'', PAYROLL.BRANCH_NAME) + 1))) = UPPER(TRIM(BRANCH.BRANCH_NAME))
		OR
		((EMP.EMPLOYEE_OFFICE_NUMBER::VARCHAR = BRANCH.OFFICE_NUMBER::VARCHAR
		OR EMP.EMPLOYEE_OFFICE_NUMBER::VARCHAR = BRANCH.OFFICE_CODE::VARCHAR)
		AND BRANCH.BRANCH_NAME = PAYROLL.BRANCH_NAME)
--		OR
--			CASE WHEN PAYROLL.COMPANY IN (''ANSWERCARE'')
--				THEN TRIM(UPPER(PAYROLL.BRANCH_NAME))
--			ELSE
--					REPLACE(REPLACE(REPLACE(
--						TRIM(UPPER(REGEXP_REPLACE(REPLACE(PAYROLL.BRANCH_NAME, PAYROLL.SYSTEM_CODE), ''-|~|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\?|/| '', ''''))),
--						''CHINATOWNPA'', ''CHINATOWN''),''ST MARYS'',''ST MARYS CAMDEN''),''POOLER'',''SAVANNAHPOOLER'')
--			END
--			=
--			CASE WHEN PAYROLL.COMPANY IN (''ANSWERCARE'')
--				THEN TRIM(UPPER(BRANCH.BRANCH_NAME))
--			ELSE
--					REPLACE (
--						TRIM(UPPER(REGEXP_REPLACE(BRANCH.BRANCH_NAME,  ''-|~||/| '', ''''))),
--						''CHINATOWNPA'', ''CHINATOWN'')
--			END
		)
         AND BRANCH.SYSTEM_CODE=PAYROLL.COMPANY
	LEFT JOIN HAH.DIM_EMPLOYEE AS EMPLOYEE
		ON EMPLOYEE.SOURCE_SYSTEM_ID = 6 AND EMPLOYEE.EMPLOYEE_ID = COALESCE(PAYROLL.EMPLOYEE_ID::STRING, TRIM(PAYROLL.EMPLOYEE_ID))
        AND PAYROLL.COMPANY=EMPLOYEE.SYSTEM_CODE
	GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, /*13, 14, 15,*/ 16, 17, /*18,*/ 19, 20, 21, /*22, 23, 24,*/ 25, 26, /*27,*/ 28, 29, 30
	)
SELECT distinct MD5(CAST(PAYROLL.PAYROLL_DATE AS VARCHAR) || ''-'' || PAYROLL.CHECK_NUMBER || ''-'' || PAYROLL.SYSTEM_CODE|| ''-'' ||''TRUSTPOINTDATA'') AS PAYROLL_KEY,
		PAYROLL.REPORT_DATE,
		PAYROLL.EMPLOYEE_KEY,
		PAYROLL.BRANCH_KEY,
		PAYROLL.SOURCE_SYSTEM_ID,
		PAYROLL.PAYROLL_DATE,
		PAYROLL.EMPLOYEE_ID,
		PAYROLL.BRANCH_NAME,
		PAYROLL.SYSTEM_CODE,
		PAYROLL.PAY_PERIOD_START_DATE,
		PAYROLL.PAY_PERIOD_END_DATE,
		PAYROLL.CHECK_NUMBER,
		PAYROLL.PAY_HOURS,
		PAYROLL.SERVICE_HOURS,
		PAYROLL.OVERTIME_HOURS,
		PAYROLL.NON_SERVICE_UNITS,
		PAYROLL.SICK_HOURS,
		PAYROLL.VACATION_HOURS,
		PAYROLL.PAY_RATE,
		PAYROLL.OVERTIME_RATE,
		PAYROLL.GROSS_PAY_AMOUNT,
		PAYROLL.SERVICE_PAY_AMOUNT,
		PAYROLL.OVERTIME_PAY_AMOUNT,
		PAYROLL.NON_SERVICE_PAY_AMOUNT,
		PAYROLL.TAX_AMOUNT,
		PAYROLL.NET_PAY_AMOUNT,
		PAYROLL.OTHER_DEDUCTIONS_AMOUNT,
		PAYROLL.UNION_DUES_AMOUNT,
		PAYROLL.REINBURSMENT_AMOUNT,
		-- ETL Fields
		:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
		:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,        
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
		CURRENT_USER as ETL_INSERTED_BY ,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE,
		CURRENT_USER as ETL_LAST_UPDATED_BY,
		0 as ETL_DELETED_FLAG
	FROM PAYROLL AS PAYROLL
WHERE PAYROLL.SYSTEM_CODE IN (''PRIME'', ''PRIMEMIDWAY'',''PRIMEHHA'', ''E3'', ''COASTAL'', ''EXCEL'', ''ALTRUS'', ''ANSWERCARE'', ''HAHMI'', ''HAHDELAWARE'', ''CARECOORDINATION'')
AND PAYROLL.EMPLOYEE_ID NOT ILIKE ''%Do not use%'';
RETURN ''SUCCESS'';

END;
';