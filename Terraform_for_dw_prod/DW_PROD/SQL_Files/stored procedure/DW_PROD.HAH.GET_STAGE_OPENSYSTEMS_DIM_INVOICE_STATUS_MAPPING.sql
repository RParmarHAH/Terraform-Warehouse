CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OPENSYSTEMS_DIM_INVOICE_STATUS_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 21/04/23    Pinkal Panchal        Initial Development
-- 12/09/23    Pradeep Thippani      Change in logic of DERIVED_INVOICE_STATUS and added BILLING CTE for RCM
--*****************************************************************************************************************************

INSERT OVERWRITE INTO DW_PROD.STAGE.OPENSYSTEMS_DIM_INVOICE_STATUS_MAPPING
WITH  BILLING AS (
    SELECT
           HED.INVOICEHEADERID
         , MAX(BV.DEPOSITDATE) AS FINAL_PAID_DATE
         , SUM(DET.BILLEDAMOUNT) AS INVOICE_BILLED_AMOUNT
         , SUM(BV.PAIDAMOUNT) AS PAID_AMOUNT
         , SUM(BV.WRITEOFF) AS WRITEOFFAMOUNT
         , SUM(BV.ADJUSTMENT+BV.TTADJUSTMENT+BV.OTHERADJUSTMENT) AS ADJUSTMENTS
         , SUM(BV.CREDITS) AS CREDITS
    FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.VISITS V
    INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.TBLINVOICEDETAILS_REPL DET ON DET.VISITID = V.VISITID
    AND DET.PATIENTID = V.PATIENTID
    INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.TBLINVOICEHEADER_REPL HED ON HED.INVOICEHEADERID = DET.INVOICEHEADERID
    AND HED.PATIENTID = DET.PATIENTID
    LEFT JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.BILLING_PAIDVISITS_REPL BV ON BV.VISITID = V.VISITID
    AND BV.PATIENTID = V.PATIENTID
    LEFT JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PAYMENTS PT ON BV.VISITID = PT.VISITID
    AND BV.PATIENTID = PT.PATIENTID
    GROUP BY HED.INVOICEHEADERID
)--Added Cte on 12/09/2023
SELECT DISTINCT
	17 AS SOURCE_SYSTEM_ID,
	CONCAT(''OPENSYSTEMS - '', TRIM(OFFICE.STATE)) AS SYSTEM_CODE,
    CASE WHEN (NVL(INV.INVOICEAMOUNT, 0)-NVL(BNG.PAID_AMOUNT, 0)) <= 0 THEN ''PAID''
         WHEN NVL(BNG.PAID_AMOUNT, 0) >0  AND (NVL(INV.INVOICEAMOUNT, 0)-NVL(BNG.PAID_AMOUNT, 0)) > 0 THEN ''PARTIAL PAY''
    ELSE ''BILLED'' END AS DERIVED_INVOICE_STATUS,
--Changes made on 12/09/23 for RCM
--	CASE WHEN INV.PAYMENTSTATUS = 0 THEN ''BILLED''
--		WHEN INV.PAYMENTSTATUS = 1 THEN ''PAID''
--		WHEN INV.PAYMENTSTATUS = 2 THEN ''PARTIAL PAY''
--	ELSE ''UNKNOWN'' END AS DERIVED_INVOICE_STATUS,
	MD5(SOURCE_SYSTEM_ID || ''-'' || DERIVED_INVOICE_STATUS || ''-'' || SYSTEM_CODE) AS INVOICE_STATUS_KEY
	,
       ---- ETL FIELDS
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
    :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,                    
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	CURRENT_USER as ETL_INSERTED_BY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	CURRENT_USER as ETL_LAST_UPDATED_BY
FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.TBLINVOICEHEADER_REPL INV
INNER JOIN BILLING BNG ON INV.INVOICEHEADERID = BNG.INVOICEHEADERID --Changes made on 12/09/23 for RCM
INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.OFFICE_OFFICES_REPL OFFICE ON INV.OFFICEID = OFFICE.OFFICEID
;
RETURN ''SUCCESS'';
END;
';