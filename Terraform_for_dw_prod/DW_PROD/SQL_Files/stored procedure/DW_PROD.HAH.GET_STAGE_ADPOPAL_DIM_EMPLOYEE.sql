CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ADPOPAL_DIM_EMPLOYEE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN

--*****************************************************************************************************************************
-- NAME: ADPOPAL_DIM_EMPLOYEE
--
-- PURPOSE: Creates one row for each EMPLOYEE according to ADP-OPAL
--
-- DEVELOPMENT LOG:
-- DATE				AUTHOR                					NOTES:
-- ----------		--------------------------------		-------------------------------------------------------------------
-- 27/12/2022		Aditya Shukla							Initial Development
-- 10/11/2023		Shikhar Saxena							Updated employee ethnicity logic and added HISPANIC_OR_LATINO column
-- 13/12/2023		Saurav Purohit							Added ACQUIRED_SYSTEM field
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.ADPOPAL_DIM_EMPLOYEE

WITH EMPLOYEE_CHECK_DATE AS
(
	SELECT DISTINCT
		COMPANY_CODE,
		FILE_NUMBER,
		MIN(PAY_DATE::DATE) AS FIRST_CHECK_DATE,
		MAX(PAY_DATE::DATE) AS LAST_CHECK_DATE
	FROM DISC_PROD.ADP.OPALPAYROLL
	GROUP BY 1, 2
), RATE AS (
	SELECT 
		ROW_NUMBER() OVER (PARTITION BY TRIM(COMPANY_CODE||FILE_NUMBER) ORDER BY PAY_DATE::DATE DESC) AS RANK,
		COMPANY_CODE, FILE_NUMBER AS ID,
		CASE WHEN REPLACE(REPLACE(RATE, '',''), ''$'') <> 0 AND UPPER(RATE_TYPE) = ''HOURLY''
			THEN ROUND(REPLACE(REPLACE(RATE, '',''), ''$'') * 40 * 52, 2)
			ELSE NULL
		END AS SALARY, 
		CASE WHEN REPLACE(REPLACE(RATE, '',''), ''$'') = 0 
			THEN NULL 
			ELSE REPLACE(REPLACE(RATE, '',''), ''$'')
		END AS PAY_RATE
	FROM DISC_PROD.ADP.OPALPAYROLL PAY
	QUALIFY RANK = 1
)
SELECT DISTINCT 
--master_id,
	MD5(18 || PAYROLL_COMPANY_CODE || MASTER_ID || ''OPAL'') AS EMPLOYEE_KEY,
	EML.FILE_NUMBER AS EMPLOYEE_ID,
	''ADP-OPAL-'' || PAYROLL_COMPANY_CODE AS SYSTEM_CODE,
	18 AS SOURCE_SYSTEM_ID,
	HEX_ENCODE(REPLACE(TAX_ID_SSN, ''-'')) AS EMPLOYEE_PID,
	TRY_TO_NUMBER(EML.FILE_NUMBER) AS EMPLOYEE_NUMBER,
	CASE WHEN CAST( BIRTH_DATE AS DATE) >= CAST(''1901-01-01'' AS DATE) AND CAST(BIRTH_DATE AS DATE) <= DATEADD( YEAR, -12, CURRENT_DATE) 
		THEN CAST(BIRTH_DATE AS DATE)
		ELSE NULL 
	END AS EMPLOYEE_DOB,
	DATE_OF_DEATH::DATE AS EMPLOYEE_DATE_OF_DEATH,
	CASE WHEN HIRE_DATE >= CAST( ''1960-01-01'' AS DATE) AND HIRE_DATE <= DATEADD( YEAR, +1, CURRENT_DATE)
		THEN HIRE_DATE::DATE
		ELSE NULL END AS EMPLOYEE_HIRE_DATE,
	REHIRE_DATE::DATE AS EMPLOYEE_REHIRE_DATE,
	NULL AS EMPLOYEE_BENEFIT_START_DATE,
	CD.FIRST_CHECK_DATE AS EMPLOYEE_FIRST_CHECK_DATE,
	CD.LAST_CHECK_DATE AS EMPLOYEE_LAST_CHECK_DATE,
	TERMINATION_DATE::DATE AS EMPLOYEE_LAST_WORKED_DATE, -- VARIFY
	TERMINATION_DATE::DATE AS EMPLOYEE_TERMINATE_DATE,
	TERMINATION_REASON_DESCRIPTION AS REASON_TO_TERMINATE,
	CASE WHEN POSITION_STATUS  = ''Active'' THEN TRUE
		ELSE FALSE 
	END AS ACTIVE_EMPLOYEE_FLAG,
	TRUE AS ABLE_TO_REHIRE_FLAG,
	NULL AS EMPLOYEE_PREFIX,
	TRIM(UPPER(LEGAL_FIRST_NAME)) AS EMPLOYEE_FIRST_NAME,
	TRIM(UPPER(LEGAL_MIDDLE_NAME)) AS EMPLOYEE_MIDDLE_NAME,
	TRIM(UPPER(LEGAL_LAST_NAME)) AS EMPLOYEE_LAST_NAME,
	NULL AS EMPLOYEE_SUFFIX,
	TRIM(LEGAL_PREFERRED_ADDRESS_ADDRESS_LINE_1) AS EMPLOYEE_ADDRESS1,
	TRIM(LEGAL_PREFERRED_ADDRESS_ADDRESS_LINE_2) AS EMPLOYEE_ADDRESS2,
	LEGAL_PREFERRED_ADDRESS_CITY AS EMPLOYEE_CITY,
	LEGAL_PREFERRED_ADDRESS_STATE_TERRITORY_CODE AS EMPLOYEE_STATE_CODE,
	LEGAL_PREFERRED_ADDRESS_ZIP_POSTAL_CODE AS EMPLOYEE_ZIP,
	NULL AS EMPLOYEE_HOME_PHONE,
	NULL AS EMPLOYEE_CELL_PHONE,
	NULL AS EMPLOYEE_WORK_PHONE,
	PERSONAL_CONTACT_PERSONAL_EMAIL AS EMPLOYEE_PERSONAL_EMAIL,
	WORK_CONTACT_WORK_EMAIL AS EMPLOYEE_WORK_EMAIL,
	NULL AS LINKED_IN_PROFILE_URL,
	CASE WHEN GENDER_SELF_ID = ''Man / Male'' THEN ''MALE''
		WHEN GENDER_SELF_ID = ''Woman / Female'' THEN ''FEMALE''
		ELSE NULLIF(GENDER_SELF_ID, '''') 
	END AS EMPLOYEE_GENDER,
	IFF(ETHNICITY ILIKE ANY (''%HISPANIC%'',''%LATINO%''),NULL ,TRIM(UPPER(ETHNICITY))) AS EMPLOYEE_ETHNICITY,
	IFF(UPPER(TRIM(ETHNICITY)) IN (''HISPANIC'',''LATINO'',''HISPANIC OR LATINO''), TRUE, FALSE) AS HISPANIC_OR_LATINO,
	NULL AS EMPLOYEE_LANGUAGE,
	MARITAL_STATUS_DESCRIPTION AS EMPLOYEE_MARITAL_STATUS,
	WORKER_CATEGORY_DESCRIPTION AS EMPLOYEE_TYPE,
	CASE WHEN UPPER(TRIM(PAYROLL_COMPANY_CODE)) = ''9WA'' THEN ''ADMIN''
		WHEN PAYROLL_COMPANY_CODE IN (''ESH'', ''82Y'', ''JYX'') THEN ''FIELD''
	END AS EMPLOYEE_CATEGORY,
	NULL AS EXEMPT_FLAG,
	JOB_TITLE_CODE AS JOB_TITLE,
	JOB_TITLE_DESCRIPTION AS JOB_DESCRIPTION,
	NULL AS CLASS_ID,
	NULL AS WORKERS_COMP,
	EML.FILE_NUMBER AS PAYROLL_ID,
	NULL AS PERCENT_401K_DEDUCTION,
	NULL AS AMOUNT_401K_DEDUCTION,
	NULL AS JAZZHR_APPLICANT_ID,
	NULL AS JAZZHR_USER_ID,
	NULL AS JAZZHR_CONTACT_ID,
	WORK_ADDRESS_STATE_TERRITORY_CODE AS WORK_STATE,
	WORK_ADDRESS_STATE_TERRITORY_CODE AS SUTA_STATE,
	NULL AS EMPLOYEE_DEPARTMENT,
	BRANCH.OFFICE_CODE AS EMPLOYEE_OFFICE_CODE,
	BRANCH.BRANCH_KEY AS PRIMARY_BRANCH_KEY,
	BRANCH.OFFICE_STATE_CODE AS PRIMARY_BRANCH_STATE,
	BRANCH.BRANCH_NAME AS PRIMARY_BRANCH_NAME,
	BRANCH.SYSTEM_CODE AS PRIMARY_BRANCH_SYSTEM_CODE,
	NULL AS CASE_MANAGER_FLAG,
	NULL AS SUPERVISOR_FLAG,
	NULL AS COORDINATOR_FLAG,
	NULL AS LINKED_ID,
	HEX_ENCODE(RATE.SALARY) AS SALARY,
	HEX_ENCODE(RATE.PAY_RATE) AS PAY_RATE,
	IFF(HIRE_DATE IS NULL, IFF(CD.FIRST_CHECK_DATE IS NULL, ''1900-01-01'', CD.FIRST_CHECK_DATE), HIRE_DATE) AS EFFECTIVE_FROM_DATE,
	IFF(TERMINATION_DATE IS NULL, IFF(CD.LAST_CHECK_DATE IS NULL, ''1900-01-01'', CD.LAST_CHECK_DATE), TERMINATION_DATE) AS EFFECTIVE_TO_DATE,
	NULL AS MDM_DIM_EMPLOYEE_KEY,
		:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
		:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
		current_date() AS ETL_INSERTED_DATE,
		current_user() AS ETL_INSERTED_BY,
		current_date() AS ETL_LAST_UPDATED_DATE,
		current_user() AS ETL_LAST_UPDATED_BY,
		FALSE ETL_DELETED_FLAG,
		FALSE ETL_INFERRED_MEMBER_FLAG,
		''OPENSYSTEMS'' AS ACQUIRED_SYSTEM
FROM DISC_DEDUPE_PROD.ADP.OPAL_EMPLOYEE_MASTER_LIST EML
LEFT JOIN DW_PROD.HAH.DIM_BRANCH BRANCH
	ON BRANCH.OFFICE_NUMBER = EML.HOME_DEPARTMENT_CODE::NUMBER
	AND BRANCH.SYSTEM_CODE ILIKE ''%ADP-OPAL%''
LEFT JOIN EMPLOYEE_CHECK_DATE CD 
	ON CD.FILE_NUMBER = EML.FILE_NUMBER
	AND CD.COMPANY_CODE = EML.PAYROLL_COMPANY_CODE
LEFT JOIN RATE
	ON RATE.COMPANY_CODE = EML.PAYROLL_COMPANY_CODE AND RATE.ID = EML.FILE_NUMBER;

RETURN ''SUCESS'';

END;
';