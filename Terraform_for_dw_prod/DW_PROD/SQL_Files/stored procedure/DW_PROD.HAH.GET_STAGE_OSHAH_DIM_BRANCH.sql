CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_DIM_BRANCH("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
COMMENT='user-defined procedure'
EXECUTE AS OWNER
AS '

begin
--*****************************************************************************************************************************
-- NAME:  OSHAH DIM Branch
--
-- PURPOSE: Populates Stage Dim Branch for OSHAH 
--			
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 11/22/22    Pankti Fadia           Initial version
-- 05/29/23	   Shikhar Saxena		  Changed the logic to add SOURCE_SYSTEM_TYPE field
-- 07/12/23    Sandesh Gosavi         update code to use config flag
-- 08/25/23    Mirisha                updated REGION_NAME field for MS
-- 09/01/23    Jainam Shah            UPDATED DETAILED_OFFICE_NAME AND PARENT_BRANCH_NAME Logic
-- 02/01/24	   Shikhar Saxena		  Updated the logic for OFFICE_ZIP
--*****************************************************************************************************************************
INSERT OVERWRITE INTO "STAGE".OSHAH_DIM_BRANCH
WITH OSHAH_DATA AS (
		SELECT 
        MD5(''OSHAH'' || ''-'' || OFFICES.OFFICEID || ''-'' || ''HHAEXCHANGE'') AS BRANCH_KEY,
		UPPER(TRIM(OFFICES.OFFICENAME)) AS BRANCH_NAME,
		CONCAT(''OSHAH - '',OFFICES.STATE) AS SYSTEM_CODE,
		17 AS SOURCE_SYSTEM_ID,
		OFFICES.OFFICEID AS OFFICE_NUMBER, 
		OFFICES.OFFICECODE AS OFFICE_CODE,
		UPPER(TRIM(OFFICES.OFFICENAME)) AS OFFICE_NAME,
		CASE 
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''DE'' AND UPPER(TRIM(OFFICES.CITY)) = ''WILMINGTON''
			THEN ''DE – NORTH''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''WILLIAMSPORT''
			THEN ''PA - CENTRAL''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''LANCASTER''
			THEN ''PA - CENTRAL''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''HARRISBURG''
			THEN ''PA - CENTRAL''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''ALLENTOWN''
			THEN ''PA - NORTH EAST''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''SCRANTON''
			THEN ''PA - NORTH EAST''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''ERIE''
			THEN ''PA - NORTH WEST''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''WARREN''
			THEN ''PA - NORTH WEST''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND (UPPER(TRIM(OFFICES.CITY)) = ''DU BOIS''
			             OR UPPER(TRIM(OFFICES.CITY)) = ''DUBOIS'')
			THEN ''PA - NORTH WEST''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''NEW CASTLE''
			THEN ''PA - NORTH WEST''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''PHILADELPHIA''
			THEN ''PA - PHILADELPHIA''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''READING''
			THEN ''PA - SOUTH EAST''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''HORSHAM''
			THEN ''PA - SOUTH EAST''
			WHEN  UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''PITTSBURGH''
			THEN ''PA - SOUTH WEST''
			WHEN UPPER(TRIM(OFFICES.STATE)) = ''PA'' AND UPPER(TRIM(OFFICES.CITY)) = ''JOHNSTOWN''
			THEN ''PA - SOUTH WEST''
			ELSE UPPER(OL.OFFICELEVELNAME)   --ADDED
		END AS REGION_NAME,
		COALESCE(NULLIF(OFFICES.AGENCYZIPCODE,''''),OFFICES.ZIPCODE) AS OFFICE_ZIP,
		UPPER(TRIM(OFFICES.ADDRESS1)) AS OFFICE_ADDRESS1,
		UPPER(TRIM(OFFICES.ADDRESS2)) AS OFFICE_ADDRESS2,
		UPPER(TRIM(OFFICES.CITY)) AS OFFICE_CITY,
		OFFICES.PHONE AS OFFICE_PHONE,
		OFFICES.PHONE2 AS OFFICE_FAX,
		UPPER(TRIM(OFFICES.STATE)) AS STATE, 
		OFFICES.ACTIVE AS OFFICE_ACTIVE
        FROM "DISC_PROD"."HHAEXCHANGEOSHAH"."OFFICE_OFFICES_REPL" AS OFFICES
        LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICELEVELS_REPL OL ON OL.OFFICELEVELID = OFFICES.OFFICELEVELID --ADDED
        WHERE OFFICES.STATE IN (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE)
        ),      
     FOR_Branch_Service_Line AS (
   	 SELECT V.OFFICEID,VOR.REVENUE_SUBCATEGORY_CODE ,count(*) AS cnt,
   	 ROW_NUMBER() OVER(PARTITION BY V.OFFICEID ORDER BY cnt DESC) RN
   	 FROM DISC_PROD.HHAEXCHANGEOSHAH.vISITS v
      JOIN DISC_PROD.HHAEXCHANGEOSHAH.VW_OSHAH_REVENUE VOR ON vor.SERVICECODE = v.PRIMARYSERVICECODE
   	  GROUP BY 1,2 QUALIFY RN = 1
),
--NO RISKCONNECT_HIERARCHY mapping as of now
RISKCONNECT_HIERARCHY AS (
		SELECT * FROM "DISC_PROD"."STAGE"."RISKCONNECT_HIERARCHY"),
--NO HR_OFFICE_MAPPING mapping as of now
HR_OFFICE_MAPPING AS (
		SELECT * FROM "DISC_PROD"."STAGE"."HR_OFFICE_MAPPING")		
SELECT OSHAH_OFFICES.BRANCH_KEY AS BRANCH_KEY,
		OSHAH_OFFICES.BRANCH_NAME AS BRANCH_NAME,
		OSHAH_OFFICES.SYSTEM_CODE AS SYSTEM_CODE,
		OSHAH_OFFICES.SOURCE_SYSTEM_ID AS SOURCE_SYSTEM_ID,
		SOURCE_SYSTEM.SOURCE_SYSTEM_TYPE,
		OSHAH_OFFICES.OFFICE_NUMBER AS OFFICE_NUMBER,
		OSHAH_OFFICES.OFFICE_CODE AS OFFICE_CODE,
		OSHAH_OFFICES.OFFICE_NAME AS OFFICE_NAME,
		OSHAH_OFFICES.OFFICE_NAME AS OFFICE_NAME_ALT,
		OSHAH_OFFICES.OFFICE_NAME AS DEPARTMENT_NAME,
		FB.REVENUE_SUBCATEGORY_CODE  AS BRANCH_SERVICE_LINE,
		TRUE AS PARENT_FLAG,
		OSHAH_OFFICES.BRANCH_KEY AS PARENT_BRANCH_KEY,
		OSHAH_OFFICES.OFFICE_NUMBER AS PARENT_OFFICE_NUMBER,
		OSHAH_OFFICES.OFFICE_CODE AS PARENT_OFFICE_CODE,
		OSHAH_OFFICES.STATE || '' - '' || OSHAH_OFFICES.BRANCH_NAME || '' (''|| OSHAH_OFFICES.OFFICE_CODE|| '')'' AS PARENT_BRANCH_NAME,
		OSHAH_OFFICES.OFFICE_ADDRESS1 AS OFFICE_ADDRESS1,
		OSHAH_OFFICES.OFFICE_ADDRESS2 AS OFFICE_ADDRESS2,
		UPPER(TRIM(OSHAH_OFFICES.OFFICE_CITY)) AS OFFICE_CITY,
		OSHAH_OFFICES.STATE AS OFFICE_STATE_CODE,
		OSHAH_OFFICES.OFFICE_ZIP AS OFFICE_ZIP,
		OSHAH_OFFICES.OFFICE_PHONE AS OFFICE_PHONE,
		OSHAH_OFFICES.OFFICE_PHONE AS OFFICE_TOLL_FREE_PHONE,
		OSHAH_OFFICES.OFFICE_FAX AS OFFICE_FAX,
		OSHAH_OFFICES.STATE || '' - '' || OSHAH_OFFICES.BRANCH_NAME || '' ('' || OSHAH_OFFICES.OFFICE_CODE|| '')'' AS DETAILED_OFFICE_NAME,	
		NULL AS REGION_NUMBER,
		OSHAH_OFFICES.REGION_NAME,
    	NULL AS REGION_MANAGER,
		NULL AS REGION_MANAGER_EMPLOYEE_KEY,
		NULL AS SUBREGION_NAME,
		NULL AS Primary_Branch_Manager_Name,
		NULL AS PRIMARY_BRANCH_EMAIL,
		NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
		NULL AS Secondary_Branch_Manager_Name,
		NULL AS SECONDARY_BRANCH_EMAIL,
		NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
		RISKCONNECT.NODE_KEY AS RISKCONNECT_NODE_KEY,
		RISKCONNECT.NODE_NAME AS RISKCONNECT_NAME,
		HR.HR_OFFICE_NUMBER AS HR_OFFICE_NUMBER,
		HR.HR_OFFICE_NAME AS HR_OFFICE_NAME,
		TO_BOOLEAN(OSHAH_OFFICES.OFFICE_ACTIVE) AS ACTIVE_FLAG,
		TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
		TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
        :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
		:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
		CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
	CURRENT_USER AS ETL_INSERTED_BY,
	CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
	CURRENT_USER AS ETL_LAST_UPDATED_BY,
	FALSE AS ETL_DELETED_FLAG,
	FALSE AS ETL_INFERRED_MEMBER_FLAG
	
	FROM OSHAH_DATA AS OSHAH_OFFICES
		
	LEFT JOIN FOR_Branch_Service_Line FB
   	  ON OSHAH_OFFICES.OFFICE_NUMBER = FB.OFFICEID	
		
	LEFT JOIN RISKCONNECT_HIERARCHY AS RISKCONNECT
		ON RISKCONNECT.PARENT_LEVEL = 2 AND RISKCONNECT.STATE = OSHAH_OFFICES.STATE
		AND TRY_CAST(RISKCONNECT.OFFICE_NUMBER AS INTEGER) = OSHAH_OFFICES.OFFICE_NUMBER
	LEFT  JOIN HR_OFFICE_MAPPING AS HR
		ON TRIM(HR.OFFICE_CODE) = TRIM(OSHAH_OFFICES.OFFICE_CODE) AND TRIM(HR.STATE) = OSHAH_OFFICES.STATE
	LEFT JOIN HAH.DIM_SOURCE_SYSTEM AS SOURCE_SYSTEM ON OSHAH_OFFICES.SOURCE_SYSTEM_ID = SOURCE_SYSTEM.SOURCE_SYSTEM_ID
		UNION ALL
		SELECT DISTINCT MD5(''OSHAH'' || ''-'' || -1 || ''-'' || ''HHAEXCHANGE'') AS BRANCH_KEY,
		''UNKNOWN'' AS BRANCH_NAME,
		''OSHAH - PA'' AS SYSTEM_CODE,
		17 AS SOURCE_SYSTEM_ID,
		''AMS'' AS SOURCE_SYSTEM_TYPE,
		-1 AS OFFICE_NUMBER,
		''-1'' AS OFFICE_CODE,
		''UNKNOWN'' AS OFFICE_NAME,
		''UNKNOWN'' AS OFFICE_NAME_ALT,
		''UNKNOWN'' AS DEPARTMENT_NAME,
		''HC'' AS BRANCH_SERVICE_LINE,
		TRUE AS PARENT_FLAG,
		MD5(''OSHAH'' || ''-'' || -1 || ''-'' || ''HHAEXCHANGE'') AS PARENT_BRANCH_KEY,
		-1 AS PARENT_OFFICE_NUMBER, 
		''-1'' AS PARENT_OFFICE_CODE,
		concat(''PA'' || '' - '' || ''UNKNOWN'' || '' (-1)'') AS PARENT_BRANCH_NAME,
		''UNKNOWN'' AS OFFICE_ADDRESS1,
		''UNKNOWN'' AS OFFICE_ADDRESS2,
		''UNKNOWN'' AS OFFICE_CITY,
		''PA'' AS OFFICE_STATE_CODE,
	    ''UNKNOWN'' AS OFFICE_ZIP,
		''UNKNOWN'' AS OFFICE_PHONE,
		''UNKNOWN'' AS OFFICE_TOLL_FREE_PHONE,
		''UNKNOWN'' AS OFFICE_FAX,
		concat(''PA'' || '' - '' || ''UNKNOWN'' || '' (-1)'') AS DETAILED_OFFICE_NAME,
		 NULL AS  REGION_NUMBER,
		''UNKNOWN'' AS REGION_NAME,
    	NULL  AS REGION_MANAGER,
		NULL AS REGION_MANAGER_EMPLOYEE_KEY,
		NULL AS SUBREGION_NAME,
		NULL AS Primary_Branch_Manager_Name,
		NULL AS PRIMARY_BRANCH_EMAIL,
		NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
		NULL AS Secondary_Branch_Manager_Name,
		NULL AS SECONDARY_BRANCH_EMAIL,
		NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
		NULL AS RISKCONNECT_NODE_KEY,
		NULL AS RISKCONNECT_NAME,
		NULL AS HR_OFFICE_NUMBER,
		NULL AS HR_OFFICE_NAME,
		TRUE AS ACTIVE_FLAG,
		TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
		TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
        :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
		:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
		CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
	CURRENT_USER AS ETL_INSERTED_BY,
	CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
	CURRENT_USER AS ETL_LAST_UPDATED_BY,
	FALSE AS ETL_DELETED_FLAG,
	FALSE AS ETL_INFERRED_MEMBER_FLAG;
	RETURN ''SUCCESS'';
	end;
    ';