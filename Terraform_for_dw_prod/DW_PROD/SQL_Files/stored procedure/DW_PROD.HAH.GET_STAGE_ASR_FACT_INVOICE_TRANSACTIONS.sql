CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ASR_FACT_INVOICE_TRANSACTIONS("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- NAME:  ASR_FACT_INVOICE_TRANSACTIONS
--
-- DEVELOPMENT LOG:
-- DATE            AUTHOR                      NOTES:
-- --------     -------------------  -----------------------------------------------------------------------------------------------
-- 31/01/24     Pinkal Panchal        Initial development
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.ASR_FACT_INVOICE_TRANSACTIONS
WITH CLIENT AS
(
    SELECT * FROM
    (
        SELECT MASTER_ID, CUSTOMERID
        FROM DISC_DEDUPE_PROD.ASR.CLIENT_MASTER_LIST
    )
    UNION
    SELECT * FROM
    (
        SELECT DISTINCT MASTER_ID, CUSTOMERID
        FROM DISC_DEDUPE_PROD.ASR.CLIENT_MATCH_LIST
        WHERE CLIENTID NOT IN (SELECT CLIENTID FROM DISC_DEDUPE_PROD.ASR.CLIENT_MASTER_LIST)
    )
)
, EMPLOYEE AS
(
    SELECT * FROM
    (
        SELECT MASTER_ID, EMPLOYEEID
        FROM DISC_DEDUPE_PROD.ASR.EMPLOYEE_MASTER_LIST
    )
    UNION
    SELECT * FROM
    (
        SELECT DISTINCT MASTER_ID, EMPLOYEEID
        FROM DISC_DEDUPE_PROD.ASR.EMPLOYEE_MATCH_LIST
        WHERE EMPLOYEEID NOT IN (SELECT EMPLOYEEID FROM DISC_DEDUPE_PROD.ASR.EMPLOYEE_MASTER_LIST)
    )
)
SELECT DISTINCT 
MD5(''PRIME'' || ''-'' || PB.PAYMENTID  ||''-'' || ''ASR'') AS TRANSACTION_KEY
,PB.PAYMENTID ::VARCHAR  AS TRANSACTION_NUMBER
,MD5(''PRIME'' || ''-'' || PB.BILLINGTRANSACTIONID || ''-'' || IFNULL(TRIM(COALESCE(EMP.MASTER_ID,EMP.EMPLOYEEID)),''UNKNOWN'') || ''-'' || IFNULL(TRIM(COALESCE(CLI.MASTER_ID,CLI.CUSTOMERID)),''UNKNOWN'') || ''-'' || ''ASR'') AS REVENUE_KEY,
MD5(''PRIME'' || ''-'' || NVL(PB.SERVICEVISITACTUALID, ''Unknown'')  || ''-'' || ''ASR'') AS VISIT_KEY,
MD5(''PRIME'' || ''-'' || NVL(TO_VARCHAR(CS.REIMBURSEMENT_STATUS_NAME), ''Unknown'') || ''-'' || ''ASR'') TRANSACTION_TYPE_KEY
,PB.REIMBAMOUNT  AS AMOUNT
,NULL AS TRANSACTION_CREATED,
NULL AS TRANSACTION_POSTED,
TO_DATE(PB.PAIDDATE,''MM/DD/YYYY HH12:MI:SS AM'') AS TRANSACTION_DATE,
NULL AS FINAL_TRANSACTION_DATE,
PB.CHECKNUMBER  AS CHECK_NUMBER,
NULL   AS CHECK_DATE,
TO_DATE(PB.DEPOSITDATE,''MM/DD/YYYY HH12:MI:SS AM'')  AS DEPOSIT_DATE,
NULL AS POSTED_DATE,
''PRIME'' AS SYSTEM_CODE,
13 AS SOURCE_SYSTEM_ID,
-1 AS ETL_TASK_KEY,
-1 AS ETL_INSERTED_TASK_KEY,                      
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE
,CURRENT_USER as ETL_INSERTED_BY
,convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE
,CURRENT_USER as ETL_LAST_UPDATED_BY
,0 as ETL_DELETED_FLAG
FROM DISC_PROD.ASR.ASR_PAYMENTSRECEIVED PB
LEFT JOIN DISC_PROD.ASR.ASR_RECEIVABLES  RB
ON RB.BILLINGTRANSACTIONID =PB.BILLINGTRANSACTIONID
LEFT JOIN DISC_PROD.ASR.ASR_CLAIMSTATUSES CS
ON PB.CLAIMSTATUS =CS.REIMBURSEMENT_STATUS_ID
LEFT JOIN
	CLIENT CLI ON RB.CUSTOMERID = CLI.CUSTOMERID
LEFT JOIN
	EMPLOYEE EMP ON RB.EMPLOYEEID = EMP.EMPLOYEEID
    
;   
RETURN ''SUCCESS'';
END;
';