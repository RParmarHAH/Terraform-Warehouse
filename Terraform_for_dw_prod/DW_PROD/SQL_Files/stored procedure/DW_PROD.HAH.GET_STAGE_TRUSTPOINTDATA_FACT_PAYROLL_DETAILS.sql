CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_TRUSTPOINTDATA_FACT_PAYROLL_DETAILS("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '

BEGIN

--******************************************************************************************************************************************
-- NAME: TRUSTPOINTDATA_FACT_PAYROLL_DETAIL
--
-- PURPOSE: Creates one row per pay code per pay check per employee
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -------------------------------------------------------------------------------------------------------        
-- 21/03/22    Aditya Shukla		 Initial development
-- 23/11/03    Meet Dalwadi          Added filter on employee_id to remove value like ''Do not use''
--******************************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.TRUSTPOINTDATA_FACT_PAYROLL_DETAILS

WITH EMPLOYEE AS
(
	SELECT DISTINCT 
		MASTER_ID, EMPLOYEE_NUMBER, COMPANY
	FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MASTER_LIST
	UNION
	SELECT DISTINCT 
		MASTER_ID, EMPLOYEE_NUMBER, COMPANY
	FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MATCH_LIST 
	WHERE EMPLOYEE_NUMBER NOT IN (SELECT DISTINCT EMPLOYEE_NUMBER FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MASTER_LIST)
	UNION
	SELECT DISTINCT
		MASTER_ID, ID AS EMPLOYEE_NUMBER, UPPER(TRIM(EMPLOYEE_EIN)) AS COMPANY
	FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MAPPING_MATCH_LIST
	WHERE ID NOT IN (SELECT EMPLOYEE_NUMBER FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MASTER_LIST UNION SELECT EMPLOYEE_NUMBER FROM DISC_DEDUPE_PROD.TRUSTPOINTDATA.EMPLOYEE_MATCH_LIST)
--	AND ID NOT IN (''HHA9964'',	''HHA9098'',	''HHA9691'',	''HHA8238'',	''HHA10106'',	''HHA8817'',	''HHA9763'',	''HHA10340'',	''HHA7911'',	''HHA9750'',	''HHA9502'',	''16066'',	''HHA9484'',	''HHA8546'',	''HHA9801'',	''HHA9087'',	''HHA10118'',	''HHA9942'',	''HHA10432'',	''HHA8385'',	''HHA8465'',	''HHA8215'',	''HHA10082'',	''HHA10104'',	''HHA9330'',	''HHA10283'',	''HHA9101'',	''HHA9204'',	''HHA9699'',	''HHA8811'',	''HHA8029'',	''HHA10080'',	''HHA9669'',	''HHA9951'',	''HHA10115'',	''HHA9700'',	''HHA9456'',	''HHA8819'',	''HHA8879'',	''HHA10388'',	''HHA8799'',	''HHA9884'',	''HHA7871'',	''HHA7984'',	''HHA8557'',	''HHA9822'',	''HHA10220'',	''HHA10196'',	''HHA9086'',	''HHA9949'',	''HHA8084'',	''HHA10256'',	''HHA8849'',	''HHA8615'',	''HHA9604'',	''HHA9666'',	''HHA9957'',	''HHA8263'',	''HHA10088'',	''HHA9425'',	''HHA8124'',	''HHA8547'',	''HHA10346'',	''HHA10030'',	''HHA9955'',	''HHA8784'',	''HHA7985'',	''HHA9310'',	''HHA8030'',	''HHA9843'',	''HHA9460'',	''HHA9457'',	''HHA9938'',	''HHA9320'',	''HHA9547'',	''HHA8004'',	''HHA7998'',	''HHA9678'',	''HHA9702'',	''HHA10215'',	''HHA9090'',	''HHA10089'',	''HHA9254'',	''HHA8471'',	''HHA8943'',	''HHA9200'',''HHA10207'', ''HHA10322'', ''HHA7755'', ''HHA9212'', ''HHA9984'', ''HHA2793'', ''HHA7616'', ''HHA3483'', ''HHA3503'', ''HHA3523'', ''HHA7553'', ''HHA7795'', ''106009'', ''17401'', ''HHA1609'', ''BROT14'', ''101178'', ''AC007334671'', ''HHA1309'', ''HHA3300'', ''HHA1747'', ''HHA2169'', ''HHA3627'', ''HHA2131'', ''HHA1756'', ''HHA1765'',	''HHA2642'',	''HHA1964'',	''HHA2157'',	''HHA1942'',	''HHA2798'',	''HHA1485'',	''HHA2256'',	''HHA2188'',	''HHA2661'',	''HHA2354'',	''HHA1760'',	''HHA1547'',	''HHA1885'',	''HHA2158'',	''HHA2251'',	''HHA1395'',	''HHA2069'',	''HHA1408'',	''HHA1241'',	''HHA2102'',	''HHA1230'',	''HHA2502'',	''HHA1308'',	''HHA2226'',	''HHA2460'',	''HHA1329'',	''HHA2166'',	''HHA1822'',	''HHA1950'',	''HHA2352'',	''HHA1766'',	''HHA2395'',	''HHA1561'',	''HHA1188'',	''HHA2210'',	''HHA1813'',	''HHA2179'',	''HHA1204'',	''HHA1050'',	''HHA1531'',	''HHA1535'',	''HHA1889'',	''HHA1772'',	''HHA1038'',	''HHA2673'',	''HHA1036'',	''HHA2675'',	''HHA1837'',	''HHA2212'',	''HHA1999'',	''HHA1319'',	''HHA1393'',	''HHA1989'',	''HHA2580'',	''HHA2382'',	''HHA2327'',	''HHA2310'',	''HHA1362'',	''HHA2674'',	''HHA2124'',	''HHA1174'',	''HHA2525'',	''HHA1302'',	''HHA1737'',	''HHA1512'',	''HHA1444'',	''HHA2718'',	''HHA1946'',	''HHA3290'',	''HHA1805'',	''HHA1318'',	''HHA2324'',	''HHA1901'',	''HHA1132'',	''HHA2778'',	''HHA2207'',	''HHA2663'',	''HHA1340'',	''HHA1196'',	''HHA1400'',	''HHA1483'',	''HHA3419'',	''HHA2134'',	''HHA2628'',	''HHA1162'',	''HHA2019'',	''HHA1755'',	''HHA1238'',	''HHA2004'',	''HHA1312'',	''HHA2190'',	''HHA1903'',	''HHA1650'',	''HHA2623'',	''HHA2255'',	''HHA1896'',	''HHA1249'',	''HHA1216'',	''HHA1967'',	''HHA3349'',	''HHA2120'',	''HHA1688'',	''HHA1876'',	''HHA2740'',	''HHA2571'',	''HHA2326'',	''HHA2201'',	''HHA2264'',	''HHA1305'',	''HHA2065'',	''HHA1343'',	''HHA1233'',	''HHA1041'',	''HHA2684'',	''HHA2453'',	''HHA2076'',	''HHA2775'',	''HHA1495'',	''HHA1739'',	''HHA1665'',	''HHA2209'',	''HHA2732'',	''HHA1821'',	''HHA2025'',	''HHA2500'',	''HHA2082'',	''HHA2569'',	''HHA2220'',	''HHA2219'',	''HHA1049'',	''HHA1432'',	''HHA1040'',	''HHA3421'',	''HHA2164'',	''HHA2391'',	''HHA1887'',	''HHA1074'',	''HHA2832'',	''HHA2584'',	''HHA2056'',	''HHA1554'',	''HHA2788'',	''HHA2715'',	''HHA2233'',	''HHA2132'',	''HHA2085'',	''HHA1208'',	''HHA1929'',	''HHA2143'',	''HHA2048'',	''HHA2498'',	''HHA1327'',	''HHA1756'',	''HHA2427'',	''HHA1084'',	''HHA1562'',	''HHA1291'',	''HHA1969'',	''HHA2297'',	''HHA2147'',	''HHA1273'',	''HHA2567'',	''HHA1521'',	''HHA1774'',	''HHA2138'',	''HHA1332'',	''HHA1778'',	''HHA2431'',	''HHA2546'',	''HHA1910'',	''HHA1841'',	''HHA2622'',	''HHA1994'',	''HHA2079'',	''HHA2187'',	''HHA1109'',	''HHA2434'',	''HHA1398'',	''HHA1317'',	''HHA1351'',	''HHA1342'',	''HHA1279'',	''HHA2203'',	''HHA1781'',	''HHA1771'',	''HHA1296'',	''HHA2249'',	''HHA2767'',	''HHA2000'',	''HHA1881'',	''HHA1368'',	''11959'',	''HHA1986'',	''HHA1935'',	''HHA2131'',	''HHA1338'',	''HHA1450'',	''HHA2672'',	''HHA1146'',	''HHA1429'',	''HHA2151'',	''HHA1984'',	''HHA1921'',	''HHA1545'',	''HHA2287'',	''HHA2043'',	''HHA2570'',	''HHA2253'',	''HHA1222'',	''HHA2279'',	''HHA1852'',	''HHA1957'',	''HHA2690'',	''HHA3408'',	''HHA1190'',	''HHA1286'',	''HHA1227'',	''HHA2770'',	''HHA2712'',	''HHA1948'',	''HHA1443'',	''HHA1858'',	''HHA1173'',	''HHA1859'',	''HHA2300'',	''HHA2595'',	''HHA1202'',	''HHA1299'',	''HHA1264'',	''HHA1277'',	''HHA1294'',	''HHA1819'',	''HHA2176'',	''HHA1637'',	''HHA2180'',	''HHA2280'',	''HHA1061'',	''HHA2217'',	''HHA1823'',	''HHA1414'',	''HHA2647'',	''HHA2293'',	''HHA1268'',	''HHA1507'',	''HHA2747'',	''HHA1870'',	''HHA2051'',	''HHA2378'',	''HHA2250'',	''HHA1484'',	''HHA1987'',	''HHA1217'',	''HHA1539'',	''HHA2625'',	''HHA2316'',	''HHA1258'',	''HHA2178'',	''HHA1282'',	''HHA2409'',	''HHA2230'',	''HHA2265'',	''HHA1456'',	''HHA2129'', ''13245'',	''14387'',	''96704'',	''HHA3294'',	''HHA3368'',	''HHA3363'',	''HHA1438'',	''14386'',	''HHA3439'',	''HHA2734'',	''102568'',	''HHA3305'',	''18245'',	''HHA3281'',	''90508'',	''HHA2528'',	''HHA1281'',	''HHA2413'',	''HHA2313'',	''HHA1399'',	''108881'',	''AC000006010'',	''90793'',	''HHA3337'',	''HHA2544'',	''14977'', ''HHA7801'') -- (''BROT14'', ''HHA2249'', ''HHA1609'', ''HHA1309'', ''HHA1747'', ''HHA2169'', ''HHA3300'', ''13245'', ''90793'', ''14977'', ''AC000006010'', ''18245'', ''90508'', ''96704'', ''102568'', ''14386'', ''101178'', ''HHA3439'', ''108881'', ''HHA1281'', ''AC007334671'')
),  --SELECT * FROM EMPLOYEE;,
AMOUNT_RATE AS
(
    SELECT DISTINCT EMPLOYEE_ID,
                    PAYROLL_DATE::DATE AS PAYROLL_DATE,
                    UPPER(TRIM(EDT_CODE)) AS EDT_CODE,
                    SUM(PAY_HOURS) AS PAY_HOURS,
                    SUM(PAY_RATE) AS PAY_RATE,
                    SUM(PAY_AMOUNT) AS PAY_AMOUNT
    FROM DISC_PROD.TRUSTPOINTDATA.PAYROLL_DETAILS
    WHERE PAY_AMOUNT <> 0
    GROUP BY 1,2,3
),
UNIT_TYPE AS
(
	SELECT DISTINCT
		PAYCODE_MAPPING_KEY,
		CASE WHEN PAY_CODE_CATEGORY IN (''Reimbursement'') THEN ''R''
			 WHEN PAY_CODE_CATEGORY IN (''Daily'') THEN ''D''
			 WHEN PAY_CODE_CATEGORY IN (''Travel Time & Mileage'') THEN ''M''
			 ELSE ''H'' END
			 AS UNIT_TYPE_CODE,
		CASE WHEN PAY_CODE_CATEGORY IN (''Reimbursement'', ''Daily'') THEN PAY_CODE_CATEGORY
			 WHEN PAY_CODE_CATEGORY IN (''Travel Time & Mileage'') THEN ''Mileage''
			 ELSE ''Hourly'' END
			AS UNIT_TYPE_DESCRIPTION
	FROM HAH.DIM_PAYCODE_MAPPING
	WHERE SOURCE_SYSTEM_ID = 6
)
SELECT DISTINCT
	MD5(''6'' || PD.ID || PD.PAYROLL_DATE || PD.COMPANY || PD.CHECK_NUMBER || UPPER(TRIM(RECORD_TYPE)) || PD.EDT_CODE || PD.PAY_CODE || ''-'' || ''TRUSTPOINTDAYA'') AS PAYROLL_DETAIL_KEY,
	MD5(CAST(PD.PAYROLL_DATE AS VARCHAR) || ''-'' || PD.CHECK_NUMBER || ''-'' || PD.COMPANY || ''-'' || ''TRUSTPOINTDATA'') AS PAYROLL_KEY,
	PD.PAYROLL_DATE::DATE AS REPORT_DATE,
	MD5(TRIM(PD.COMPANY) || ''-'' || TRIM(COALESCE(EMP.MASTER_ID, PD.EMPLOYEE_ID)) || ''-'' || ''1900-01-01'' || ''-'' || ''TRUSTPOINTDATA'') AS EMPLOYEE_KEY,
	COALESCE(BRANCH.BRANCH_KEY, MD5(PD.COMPANY || ''-'' || ''UNKNOWN'' || ''TRUSTPOINT'')) AS BRANCH_KEY,
	6 AS SOURCE_SYSTEM_ID,
	PD.PAYROLL_DATE::DATE AS PAYROLL_DATE,
	TRIM(COALESCE(EMP.EMPLOYEE_NUMBER, PD.EMPLOYEE_ID)) AS EMPLOYEE_ID,
	PD.BRANCH_NAME AS BRANCH_NAME,
	PD.SYSTEM_CODE AS SYSTEM_CODE,
	PD.PAY_PERIOD_START_DATE::DATE AS PAY_PERIOD_START_DATE,
	PD.PAY_PERIOD_END_DATE::DATE AS PAY_PERIOD_END_DATE,
	PD.CHECK_NUMBER AS CHECK_NUMBER,
	UPPER(TRIM(PD.EDT_CODE)) AS PAY_CODE,
	UPPER(TRIM(PD.PAY_CODE)) AS PAY_CODE_DESCRIPTION,
	UPPER(TRIM(RECORD_TYPE)) AS PAY_CODE_TYPE,
	NULL AS PAY_CODE_TYPE_DESCRIPTION,
	PCM.PAY_CODE_CATEGORY AS PAY_CODE_CATEGORY,
	AR.PAY_HOURS AS NUMBER_OF_UNITS,
	UT.UNIT_TYPE_CODE AS UNIT_TYPE_CODE,
	UT.UNIT_TYPE_DESCRIPTION AS UNIT_TYPE_DESCRIPTION,
	AR.PAY_RATE AS RATE,                   
	AR.PAY_AMOUNT AS AMOUNT,
		:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
		:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
		CURRENT_USER as ETL_INSERTED_BY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
		CURRENT_USER as ETL_LAST_UPDATED_BY,
		0 as ETL_DELETED_FLAG
FROM DISC_PROD.TRUSTPOINTDATA.PAYROLL_DETAILS PD
LEFT JOIN HAH.DIM_BRANCH AS BRANCH
	ON BRANCH.SOURCE_SYSTEM_ID = 6
    AND REPLACE(REPLACE(REPLACE(
		TRIM(UPPER(REGEXP_REPLACE(REPLACE(PD.BRANCH_NAME, PD.SYSTEM_CODE), ''-|~|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\?|/| '', ''''))),
			''CHINATOWNPA'', ''CHINATOWN''),''ST MARYS'',''ST MARYS CAMDEN''),''POOLER'',''SAVANNAHPOOLER'')
		= 
		REPLACE (TRIM(UPPER(REGEXP_REPLACE(BRANCH.BRANCH_NAME,  ''-|~|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\?|/| '', ''''))),
					''CHINATOWNPA'', ''CHINATOWN'')
		AND BRANCH.SYSTEM_CODE=PD.COMPANY
LEFT JOIN EMPLOYEE EMP
	ON EMP.EMPLOYEE_NUMBER = PD.EMPLOYEE_ID 
	AND EMP.COMPANY = PD.COMPANY
LEFT JOIN DW_PROD.HAH.DIM_PAYCODE_MAPPING PCM
	ON PCM.PAYCODE_MAPPING_KEY = MD5(''6'' || PD.COMPANY|| PD.PAY_CODE || PD.EDT_CODE || RECORD_TYPE || ''-'' || ''TRUSTPOINTDATA'')
AND TRIM(UPPER(PCM.PAY_CODE_DESCRIPTION)) = TRIM(UPPER(PD.PAY_CODE))
LEFT JOIN UNIT_TYPE UT
	ON UT.PAYCODE_MAPPING_KEY = PCM.PAYCODE_MAPPING_KEY
LEFT JOIN AMOUNT_RATE AS ar
    ON PD.EMPLOYEE_ID = ar.EMPLOYEE_ID AND PD.PAYROLL_DATE::DATE = ar.PAYROLL_DATE AND UPPER(TRIM(PD.EDT_CODE)) = ar.EDT_CODE
WHERE TRIM(COALESCE(EMP.EMPLOYEE_NUMBER, PD.EMPLOYEE_ID)) NOT ILIKE ''%Do not use%'';
RETURN ''SUCCESS'';

END;
';