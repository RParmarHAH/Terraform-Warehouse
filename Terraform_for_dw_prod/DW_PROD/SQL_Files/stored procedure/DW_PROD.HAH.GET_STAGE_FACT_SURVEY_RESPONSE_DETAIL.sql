CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_FACT_SURVEY_RESPONSE_DETAIL("SURVEY_ID" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    SQL VARCHAR;
BEGIN
	DELETE FROM DW_PROD.STAGE.FACT_SURVEY_RESPONSE_DETAIL WHERE SURVEY_ID=:SURVEY_ID;
	
	WITH MAPPING_COLUMN AS
(select * 
from DW_PROD.HAH.FACT_SURVEY_COLUMN_MAPPING
pivot(MIN(SOURCE_COLUMN_NAME) for destination_column_name in 
(''SURVEY_ID'', ''RECORD_ID'',''CLIENT_KEY'',''EMPLOYEE_KEY'',''BRANCH_KEY'',''STATUS'',''PROGRESS'',''COMPLETED_FLAG'',''RECORDED_DATE'',''START_DATE'',''END_DATE'',''DURATION_IN_SECONDS'',''LANGUAGE'',''LATITUDE'',''LONGITUDE'',''IP_ADDRESS'',''EXTERNAL_REFERENCE'',''DISTRIBUTION_CHANNEL'',''PARTNER_KEY'',''RESPONSE_ID''))
as p
WHERE SURVEY_ID=:SURVEY_ID)
SELECT 
''INSERT INTO DW_PROD.STAGE.FACT_SURVEY_RESPONSE_DETAIL
WITH HEADER AS 
	(SELECT 
	f.value:''||"''RESPONSE_ID''"||''::STRING AS RESPONSE_ID,
	SR.SURVEY_ID AS SURVEY_ID,
	f.value AS value_a
	FROM DISC_PROD.QUALTRICS_SURVEYS.QUALTRICS_SURVEY_RESPONSE SR, table(flatten(SURVEY_JSON:responses)) f
	WHERE SURVEY_ID=''''''||:SURVEY_ID||'''''''' 
	||IFF("''CLIENT_KEY''" IS NOT NULL,''\\n\\tAND f.value:values.''||"''CLIENT_KEY''"||''::STRING IS NOT NULL'','''')||'')
,RESPONSES AS 
	(SELECT 
	HEADER.RESPONSE_ID,
	REPLACE(f.KEY,''''#'''','''''''') AS QUESTION_ID, 
	IFF(SUBSTRING(f.value::STRING,1,1)=''''['''',f.value[0],f.value::STRING) AS ANSWER 
	FROM HEADER,table(flatten(value_a:values))f)
	,QUESTIONS_ANSWERS AS 
	(SELECT R.*,FSQ.SURVEY_QUESTION_KEY,FSQ.QUESTION_TEXT FROM RESPONSES R
	JOIN DW_PROD.HAH.FACT_SURVEY_QUESTION FSQ ON R.QUESTION_ID=FSQ.QUESTION_ID AND FSQ.IS_ACTIVE AND FSQ.SURVEY_ID=''''''||:SURVEY_ID||'''''')
,LABLES AS 
	(SELECT
	HEADER.RESPONSE_ID,
	REPLACE(f.KEY,''''#'''','''''''') AS QUESTION_ID, 
	f.value::STRING AS ANSWER 
	FROM HEADER,table(flatten(value_a:labels))f
	WHERE SUBSTRING(f.value::STRING,1,1)<>''''[''''
	UNION
	SELECT
	HEADER.RESPONSE_ID,
	REPLACE(f.KEY,''''#'''','''''''') AS QUESTION_ID, 
	LISTAGG(f2.value,'''','''') AS ANSWER
	FROM HEADER,table(flatten(value_a:labels))f,table(flatten(f.value))f2
	GROUP BY RESPONSE_ID,QUESTION_ID
	)
SELECT 
	MD5(H.SURVEY_ID||'''' - ''''||H.RESPONSE_ID||'''' - ''''||QA.QUESTION_ID||'''' - ''''||QA.QUESTION_TEXT) AS SURVEY_RESPONSE_DETAIL_KEY,
	MD5(H.SURVEY_ID) AS SURVEY_KEY,
	H.SURVEY_ID,
	26 AS SOURCE_SYSTEM_ID,
	''''Qualtrics'''' AS SYSTEM_CODE,
	MD5(H.SURVEY_ID||'''' - ''''||H.RESPONSE_ID) AS SURVEY_RESPONSE_HEADER_KEY,
	QA.SURVEY_QUESTION_KEY,
	QA.QUESTION_ID,
	COALESCE(L.ANSWER,QA.ANSWER) AS ANSWER,
	-1 AS ETL_TASK_KEY,
	-1 AS ETL_INSERTED_TASK_KEY,
	CURRENT_TIMESTAMP ::TIMESTAMP_NTZ(9) AS ETL_INSERTED_DATE,
	CURRENT_USER() AS ETL_INSERTED_BY,
	CURRENT_TIMESTAMP ::TIMESTAMP_NTZ(9) AS ETL_LAST_UPDATED_DATE,
	CURRENT_USER() AS ETL_LAST_UPDATED_BY,
	FALSE AS ETL_DELETED_FLAG
	FROM HEADER H
	JOIN QUESTIONS_ANSWERS QA ON H.RESPONSE_ID=QA.RESPONSE_ID
	LEFT JOIN LABLES L ON H.RESPONSE_ID=L.RESPONSE_ID AND QA.QUESTION_ID=L.QUESTION_ID;''
INTO :SQL
FROM MAPPING_COLUMN;

execute immediate SQL;
return ''Succeeded.'';

END;
';