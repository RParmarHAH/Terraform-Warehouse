CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_DIM_VISIT_EXCEPTION("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '

BEGIN
--*****************************************************************************************************************************
-- NAME:  OSHAH_DIM_VISIT_EXCEPTION
--
-- PURPOSE: Creates one row per exception according to OSHAH
--
-- DEVELOPMENT LOG:
-- DATE			AUTHOR							NOTES:
-- --------		-------------------				-------------------------------------------------------------------------------
-- 6/26/2023	Naresha Bhat/ Abhishek Sunil	Initial Development
-- 7/04/2023    Sandesh Gosavi                  update code to use config flag
-- 8/17/2023    Mirisha                         Updated logic for MS 
-- 9/22/2023	Diya Mistry                     Added CATEGORY_KEY field        
--*****************************************************************************************************************************
INSERT OVERWRITE INTO DW_PROD.STAGE.OSHAH_DIM_VISIT_EXCEPTION
WITH EXCEPTIONS AS 
(
	SELECT 
		DISTINCT
		ED.EXCEPTIONCODE  AS EXCEPTIONCODE,
		''OSHAH - '' || OFFICE.STATE AS SYSTEM_CODE,
		ED."STATUS"
	FROM 
		DISC_PROD.HHAEXCHANGEOSHAH.EXCEPTIONDETAILS ED
	LEFT OUTER JOIN
		/*(SELECT DISTINCT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL WHERE STATE IN (''PA'',''DE'')) OFFICE
		WHERE OFFICE.STATE IN (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE)*/
		(SELECT DISTINCT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL) OFFICE
			WHERE OFFICE.STATE IN (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE)
)
SELECT
	MD5(SYSTEM_CODE || ''-'' || EXC.EXCEPTIONCODE || ''-'' || ''HHAEXCHANGE'') AS EXCEPTION_KEY,
	17 AS SOURCE_SYSTEM_ID,
	SYSTEM_CODE AS SYSTEM_CODE,
	UPPER(EXC.EXCEPTIONCODE) AS EXCEPTION_CODE,
	UPPER(EXC.STATUS) AS EXCEPTION_DESC,
	NULL AS EXCEPTION_CATEGORY,
	MD5(UPPER(EXC.STATUS)) AS CATEGORY_KEY,
	:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
	:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
	CURRENT_USER AS ETL_INSERTED_BY ,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
	CURRENT_USER AS ETL_LAST_UPDATED_BY,
	FALSE AS ETL_DELETED_FLAG
FROM
	EXCEPTIONS EXC
GROUP BY
	EXC.SYSTEM_CODE, EXC.EXCEPTIONCODE , EXCEPTION_DESC,MD5(UPPER(EXC.STATUS))
ORDER BY 
	EXC.EXCEPTIONCODE,EXC.SYSTEM_CODE;
RETURN ''SUCCESS'';
END;
  

';