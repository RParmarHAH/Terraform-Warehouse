CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_FACT_PARTNER_CONTRACT_SERVICE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN

--*****************************************************************************************************************************
-- NAME:  OSHAH FACT PARTNER CONTRACT SERVICE
--
-- PURPOSE: Populates Stage OSHAH  FACT PARTNER CONTRACT SERVICE
--
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 03/24/23     Pankti Fadia          Initial version
-- 07/05/23   	Sandesh Gosavi        Update code to use config flag
-- 08/17/23     Mirisha               Updated logic for MS
-- 12/25/23		Shraddha Sejpal		  Added State
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.OSHAH_FACT_PARTNER_CONTRACT_SERVICE
WITH CLIENT AS(
	SELECT * FROM (	SELECT PATIENTID,MASTER_ID,AGENCYID,LASTNAME,FIRSTNAME,OFFICEID--,ADMISSIONID --,OFFICEID
					FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST )
	UNION
	SELECT * FROM (	SELECT DISTINCT PATIENTID,MASTER_ID,AGENCYID,LASTNAME,FIRSTNAME,OFFICEID--,ADMISSIONID --,OFFICEID
					FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MATCH_LIST	WHERE PATIENTID NOT IN (
					SELECT PATIENTID FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST))
	)
,  STATES AS (
--SELECT DISTINCT S.SERVICECODEID  ,C.STATE  FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES S
--JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTS C
--ON  S.CONTRACTID = C.CONTRACTID
--UNION ALL
SELECT DISTINCT S.SERVICECODEID  ,C.STATE  FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES S
JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTS C
ON  S.CONTRACTID = C.LINKEDCONTRACTPAYERID
UNION ALL
SELECT DISTINCT S.SERVICECODEID  ,OFF.STATE  FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES S
JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYER_REPL PR ON IFNULL(PR.CONTRACTID,PR.PAYERID) = S.ContractID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYEROFFICES PO ON PR.PAYERID= PO.PAYERID 
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL OFF ON OFF.OFFICEID = PO.OFFICEID ) 	
SELECT DISTINCT MD5(''OSHAH'' || ''-'' || 
		IFNULL(S.AGENCYID, -1) || ''-'' ||
		IFNULL(PR.PAYERID, -1) || ''-'' ||
		IFNULL(S.CONTRACTID, -1) || ''-'' ||
		IFNULL(S.SERVICECODEID, -1) || ''-'' ||
		IFNULL(S.VISITTYPE, ''-1'') || ''-'' ||
		IFNULL(S.RATETYPETEXT, ''-1'') || ''-'' ||
		''HHAEXCHANGE'') AS PARTNER_CONTRACT_SERVICE_KEY,
		''17'' AS SOURCE_SYSTEM_ID,
		--CONCAT(''OSHAH - '',CASE WHEN PAYERNAME ILIKE ANY (''%DE'',''%DC Medicaid%'',''%Highmark Health Options%'') THEN ''DE''  ELSE ''PA'' END) AS SYSTEM_CODE,
		CONCAT(''OSHAH - '',STATES.STATE) AS SYSTEM_CODE,
		STATES.STATE AS STATE
		,MD5(''OSHAH'' || ''-'' || COALESCE(PR.PAYERID,S.CONTRACTID) || ''-'' || COALESCE(PR.CONTRACTID,PR.PAYERID,S.CONTRACTID) || ''-'' || ''HHAEXCHANGE'') AS PARTNER_CONTRACT_KEY,
		COALESCE (PR.PAYERID,S.CONTRACTID) AS PARTNER_CODE,
		COALESCE (PR.PAYERNAME,S.CONTRACTNAME) AS PARTNER_NAME,
		S.CONTRACTID AS CONTRACT_CODE,
		S.CONTRACTNAME AS CONTRACT_NAME,
		MD5(''OSHAH'' || ''-'' || S.SERVICECODEID || ''-'' || ''HHAEXCHANGE'') AS SERVICE_KEY,
		S.SERVICECODEID AS SERVICECODE,
		S.SERVICECODE AS SERVICENAME,
	    MD5(''OSHAH'' || ''-'' || S.SERVICECODEID || ''-'' || ''HHAEXCHANGE'') AS BILLING_KEY,
		S.SERVICECODE AS BILLING_CODE,
		S.CONTRACTNAME AS BILL_NAME,
		--IFF(UPPER(S.SERVICECODE) LIKE ''%BILLABLE%'',0,1):: BOOLEAN AS BILLABLE_FLAG,
        CASE WHEN UPPER(S.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')THEN ''FALSE''
		       WHEN UPPER(VI.NONBILLABLE) = ''FALSE'' THEN UPPER(''TRUE'' :: BOOLEAN)
		       WHEN UPPER(VI.NONBILLABLE) = ''TRUE'' THEN UPPER(''FALSE'' :: BOOLEAN)
		       ELSE UPPER(VI.NONBILLABLE :: BOOLEAN)
		  END :: BOOLEAN AS BILLABLE_FLAG    ,  
		S.RATETYPETEXT AS BILL_TYPE,
		IFF(BILL_TYPE=''Hourly'',CASE
			WHEN CR.UNITS = 1 THEN ''Hourly''
			WHEN CR.UNITS = 2 THEN ''Half Hours''
			WHEN CR.UNITS = 4 THEN ''Quarter Hours''
			ELSE NULL
		END,NULL) AS BILL_UOM,
		S.RATETYPETEXT AS SCHEDULE_TYPE,
		S.RATETYPETEXT AS  SCHEDULE_UOM,
		IFF(UPPER(S.SERVICECODE) LIKE ''%BILLABLE%'',0,1):: BOOLEAN AS AUTHORIZATION_REQUIRED_FLAG,
		TRUE::BOOLEAN AS PAYABLE_FLAG,                        
		FALSE::BOOLEAN AS EXPENSE_FLAG,                      
		IFF(UPPER(VI.INCLUDEMILEAGEEXPENSE :: BOOLEAN) IS NULL,UPPER(FALSE :: BOOLEAN),UPPER(VI.INCLUDEMILEAGEEXPENSE :: BOOLEAN)):: BOOLEAN AS MILEAGE_FLAG,
		:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
		:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP) :: timestamp_ntz as ETL_INSERTED_DATE,
		CURRENT_USER as ETL_INSERTED_BY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP) :: timestamp_ntz as ETL_LAST_UPDATED_DATE,
		CURRENT_USER as ETL_LAST_UPDATED_BY,
		0:: BOOLEAN as ETL_DELETED_FLAG
FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES S
/*LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.PATIENTAUTHORIZATION PA 
    ON S.CONTRACTID = PA.CONTRACTID
	AND S.SERVICECODEID = PA.SERVICECODEID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTS C 
	ON 	S.CONTRACTID = C.CONTRACTID*/						-- NOT needed
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYER_REPL PR 
	ON IFNULL(PR.CONTRACTID, PR.PAYERID) = S.CONTRACTID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.VisitInfo_REPL VI
 		ON S.SERVICECODEID = VI.PRIMARYSERVICECODEID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTRATES CR ON
		s.SERVICECODEID = CR.SERVICECODEID
		AND CR.AGENCYID = S.AGENCYID
		AND CR.SERVICECODEID = S.SERVICECODEID
		AND CR.TODATE :: DATE > GETDATE()
		AND CR.FROMDATE :: DATE <= GETDATE()
LEFT JOIN STATES ON S.SERVICECODEID = STATES.SERVICECODEID
WHERE STATES.STATE IN  (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE);
RETURN ''SUCCESS'';
end;
';