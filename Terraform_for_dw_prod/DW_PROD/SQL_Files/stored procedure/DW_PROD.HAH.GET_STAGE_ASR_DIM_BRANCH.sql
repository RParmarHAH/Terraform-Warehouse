CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ASR_DIM_BRANCH("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
                BEGIN
--*****************************************************************************************************************************
-- NAME:  ASR_DIM_BRANCH
--
-- PURPOSE: Creates one row per branch according to ASR
--
-- DEVELOPMENT LOG:
-- DATE			AUTHOR					NOTES:
-- --------		-------------------		---------------------------------------------------------------------------------------
-- 12/29/2021	Jay Prajapati			Initial Development
-- 04/04/2022	Abhishek Sunil			Revised logic
-- 05/04/2022	Abhishek Sunil			Leveraged BRANCH_MAPPING to get clubbed branches
-- 05/29/2023	Shikhar Saxena			Changed the logic to add SOURCE_SYSTEM_TYPE field
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.ASR_DIM_BRANCH
WITH BRANCH AS(
SELECT DISTINCT
	MD5(''PRIME'' || ''-'' || TRIM(BM.NEW_LOCATION_ID) || ''-'' || ''ASR'') AS BRANCH_KEY,
	TRIM(BM.NEW_LOCATION_NAME) AS BRANCH_NAME,
	''PRIME'' AS SYSTEM_CODE,
	13 AS SOURCE_SYSTEM_ID,
	TRIM(BM.NEW_LOCATION_ID)::NUMBER AS OFFICE_NUMBER,
	TRIM(BM.NEW_LOCATION_ID) AS OFFICE_CODE, -- Added LOCATION ID AS OF now
	BM.NEW_LOCATION_NAME AS OFFICE_NAME,
	BM.NEW_LOCATION_NAME AS OFFICE_NAME_ALT,
	BM.NEW_LOCATION_NAME AS DEPARTMENT_NAME,
	NULL AS BRANCH_SERVICE_LINE,
	TRUE AS PARENT_FLAG,
	MD5(''PRIME'' || ''-'' || TRIM(BM.NEW_LOCATION_ID) || ''-'' || ''ASR'') AS PARENT_BRANCH_KEY,
	TRIM(BM.NEW_LOCATION_ID) AS PARENT_OFFICE_NUMBER,
	TRIM(BM.NEW_LOCATION_ID) AS PARENT_OFFICE_CODE,
	''OH'' || '' - '' ||  UPPER(TRIM(BM.NEW_LOCATION_NAME)) || '' ('' || TRIM(BM.NEW_LOCATION_ID) || '')'' AS PARENT_BRANCH_NAME,
	NULL AS OFFICE_ADDRESS1,
	NULL AS OFFICE_ADDRESS2,
	NULL AS OFFICE_CITY,
	''OH'' AS OFFICE_STATE_CODE,
	NULL AS OFFICE_ZIP,
	NULL AS OFFICE_PHONE,
	NULL AS OFFICE_TOLL_FREE_PHONE,
	NULL AS OFFICE_FAX,
	''OH'' || '' - '' ||  UPPER(TRIM(BM.NEW_LOCATION_NAME)) || '' ('' || TRIM(BM.NEW_LOCATION_ID) || '')'' AS DETAILED_OFFICE_NAME,
	NULL AS REGION_NUMBER,
	NULL AS REGION_NAME,
	NULL AS REGION_MANAGER,
	NULL AS REGION_MANAGER_EMPLOYEE_KEY,
	NULL AS SUBREGION_NAME,
	NULL AS PRIMARY_BRANCH_MANAGER_NAME,
	NULL AS PRIMARY_BRANCH_EMAIL, --TRIM(L.NOTIFICATIONEMAIL) AS PRIMARY_BRANCH_EMAIL,
	NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	NULL AS SECONDARY_BRANCH_MANAGER_NAME,
	NULL AS SECONDARY_BRANCH_EMAIL,
	NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
	NULL AS RISKCONNECT_NODE_KEY,
	NULL AS RISKCONNECT_NAME,
    NULL AS HR_OFFICE_NUMBER,
    NULL AS HR_OFFICE_NAME,
    IFF(UPPER(TRIM(L.LOCATIONNAME)) LIKE ''DRIVERS%'' OR UPPER(TRIM(L.LOCATIONNAME)) = ''FLORIDA'',FALSE, TRUE) AS ACTIVE_FLAG,
    TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
	TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
        :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
                        
	CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
	CURRENT_USER AS ETL_INSERTED_BY,
	CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
	CURRENT_USER AS ETL_LAST_UPDATED_BY,
	FALSE AS ETL_DELETED_FLAG,
	FALSE AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_PROD.ASR.ASR_LOCATIONS L
LEFT JOIN DISC_PROD.ASR.BRANCH_MAPPING BM ON L.LOCATIONID = BM.OLD_LOCATION_ID 
WHERE BM.IS_ASR_BRANCH  = TRUE -- IS NOT WITH PRIME Anymore
ORDER BY OFFICE_NUMBER
)
SELECT BRANCH.BRANCH_KEY,
BRANCH.BRANCH_NAME,
BRANCH.SYSTEM_CODE,
BRANCH.SOURCE_SYSTEM_ID,
SOURCE_SYSTEM.SOURCE_SYSTEM_TYPE,
BRANCH.OFFICE_NUMBER,
BRANCH.OFFICE_CODE,
BRANCH.OFFICE_NAME,
BRANCH.OFFICE_NAME_ALT,
BRANCH.DEPARTMENT_NAME,
BRANCH.BRANCH_SERVICE_LINE,
BRANCH.PARENT_FLAG,
BRANCH.PARENT_BRANCH_KEY,
BRANCH.PARENT_OFFICE_NUMBER,
BRANCH.PARENT_OFFICE_CODE,
BRANCH.PARENT_BRANCH_NAME,
BRANCH.OFFICE_ADDRESS1,
BRANCH.OFFICE_ADDRESS2,
BRANCH.OFFICE_CITY,
BRANCH.OFFICE_STATE_CODE,
BRANCH.OFFICE_ZIP,
BRANCH.OFFICE_PHONE,
BRANCH.OFFICE_TOLL_FREE_PHONE,
BRANCH.OFFICE_FAX,
BRANCH.DETAILED_OFFICE_NAME,
BRANCH.REGION_NUMBER,
BRANCH.REGION_NAME,
BRANCH.REGION_MANAGER,
BRANCH.REGION_MANAGER_EMPLOYEE_KEY,
BRANCH.SUBREGION_NAME,
BRANCH.PRIMARY_BRANCH_MANAGER_NAME,
BRANCH.PRIMARY_BRANCH_EMAIL,
BRANCH.PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
BRANCH.SECONDARY_BRANCH_MANAGER_NAME,
BRANCH.SECONDARY_BRANCH_EMAIL,
BRANCH.SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
BRANCH.RISKCONNECT_NODE_KEY,
BRANCH.RISKCONNECT_NAME,
BRANCH.HR_OFFICE_NUMBER,
BRANCH.HR_OFFICE_NAME,
BRANCH.ACTIVE_FLAG,
BRANCH.EFFECTIVE_FROM_DATE,
BRANCH.EFFECTIVE_TO_DATE,
BRANCH.ETL_TASK_KEY,
BRANCH.ETL_INSERTED_TASK_KEY,
BRANCH.ETL_INSERTED_DATE,
BRANCH.ETL_INSERTED_BY,
BRANCH.ETL_LAST_UPDATED_DATE,
BRANCH.ETL_LAST_UPDATED_BY,
BRANCH.ETL_DELETED_FLAG,
BRANCH.ETL_INFERRED_MEMBER_FLAG
FROM BRANCH AS BRANCH
LEFT JOIN HAH.DIM_SOURCE_SYSTEM AS SOURCE_SYSTEM
ON BRANCH.SOURCE_SYSTEM_ID = SOURCE_SYSTEM.SOURCE_SYSTEM_ID
--UNION 
--SELECT * FROM DW_PROD.HAH.DIM_ORPHAN_BRANCH  ---- ADDED ORPHAN BRANCHES FOR IDDOX - 506
--WHERE SOURCE_SYSTEM_ID = 13
;
;
    RETURN ''SUCCESS'';
    END;
    ';