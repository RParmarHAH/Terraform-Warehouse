CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OPENSYSTEMS_FACT_INTAKE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN 
--*****************************************************************************************************************************
-- NAME:  OPENSYSTEMS FACT INTAKE
--
-- PURPOSE: Populates Stage INTAKE for OPEN SYSTEMS 
--			
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 29/11/22    Sanket Jain           Initial version
--***************************************************************************************************************************
INSERT OVERWRITE INTO DW_PROD.STAGE.OPENSYSTEMS_FACT_INTAKE
WITH CLIENT AS
(
    SELECT * FROM
    (
   	 SELECT PATIENTID AS CLIENT_NUMBER, MASTER_ID, TO_NUMBER(AGENCYID) AS AGENCYID, LASTNAME, FIRSTNAME, OFFICEID
   	 FROM DISC_DEDUPE_PROD.HHAEXCHANGEOPENSYSTEMS.CLIENT_MASTER_LIST
    )
    UNION
    SELECT * FROM
    (
   	 SELECT DISTINCT PATIENTID AS CLIENT_NUMBER, MASTER_ID, TO_NUMBER(AGENCYID) AS AGENCYID, LASTNAME, FIRSTNAME, OFFICEID
   	 FROM DISC_DEDUPE_PROD.HHAEXCHANGEOPENSYSTEMS.CLIENT_MATCH_LIST
   	 WHERE PATIENTID NOT IN (SELECT PATIENTID FROM DISC_DEDUPE_PROD.HHAEXCHANGEOPENSYSTEMS.CLIENT_MASTER_LIST)
    )
), AUTH_BY_DAY AS
(
SELECT AUTHORIZATIONID
   	 , PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , DD.CALENDAR_DATE
   	 , DECODE(DAYNAME(DD.CALENDAR_DATE)
   				 , ''Sat'', PA.SATHOURS
   		   		 , ''Sun'', PA.SUNHOURS
   		   		 , ''Mon'', PA.MONHOURS
   		   		 , ''Tue'', PA.TUEHOURS
   		   		 , ''Wed'', PA.WEDHOURS
   		   		 , ''Thu'', PA.THUHOURS
   		   		 , ''Fri'', PA.FRIHOURS
   		   	 , 0) AS AUTH_HOURS_PER_DAY
	 , IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED 
FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PATIENTAUTHORIZATION  PA
INNER JOIN DW_PROD.HAH.DIM_DATE DD
    ON DD.CALENDAR_DATE BETWEEN PA.FROMDATE AND PA.TODATE
INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.SERVICECODES SC
    ON SC.SERVICECODEID = PA.SERVICECODEID
WHERE PERIOD = ''Day''
), AUTH_BY_WEEK AS
(
SELECT PA.AUTHORIZATIONID
   	 , PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , DD.CALENDAR_DATE
   	 , PA.MAXUNITSFORPERIOD/7.00 AS AUTH_HOURS_PER_DAY
   	 , IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED 
FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PATIENTAUTHORIZATION PA
INNER JOIN DW_PROD.HAH.DIM_DATE DD
    ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE
INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.SERVICECODES SC
    ON SC.SERVICECODEID = PA.SERVICECODEID
WHERE PA.PERIOD = ''Week''
), AUTH_BY_MONTH AS
(
SELECT PA.AUTHORIZATIONID
   	 , PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , DD.CALENDAR_DATE
   	 , PA.MAXUNITSFORPERIOD/(DAY(LAST_DAY(DD.CALENDAR_DATE))*1.00) AS AUTH_HOURS_PER_DAY
   	 , IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED 
FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PATIENTAUTHORIZATION PA
INNER JOIN DW_PROD.HAH.DIM_DATE DD
    ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE
INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.SERVICECODES SC
    ON SC.SERVICECODEID = PA.SERVICECODEID
WHERE PA.PERIOD = ''Monthly''
), AUTH_BY_PERIOD AS
(
SELECT PA.AUTHORIZATIONID
   	 , PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , DD.CALENDAR_DATE
   	 , IFF(FROMDATE != TODATE, DATEDIFF(DAY, FROMDATE, TODATE)+1, 1) * 1.00 AS DAYS_IN_PERIOD
   	 , CASE WHEN DAYS_IN_PERIOD = 1
   	   			 THEN PA.MAXUNITSFORPERIOD
   	   		ELSE PA.MAXUNITSFORPERIOD/DAYS_IN_PERIOD
   	   END AUTH_HOURS_PER_DAY
   	 , IFF(AUTH_HOURS_PER_DAY >24, 24, AUTH_HOURS_PER_DAY) AS HOURS_AUTHORIZED 
FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PATIENTAUTHORIZATION PA
INNER JOIN DW_PROD.HAH.DIM_DATE DD
    ON DD.CALENDAR_DATE::DATE BETWEEN PA.FROMDATE::DATE AND PA.TODATE::DATE
INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.SERVICECODES SC
    ON SC.SERVICECODEID = PA.SERVICECODEID
WHERE PERIOD = ''Entire Period''
), AUTH_OVERALL AS
(
    SELECT AUTHORIZATIONID, PATIENTID, SERVICECODEID, CALENDAR_DATE, HOURS_AUTHORIZED FROM AUTH_BY_DAY
    UNION
    SELECT AUTHORIZATIONID, PATIENTID, SERVICECODEID, CALENDAR_DATE, HOURS_AUTHORIZED FROM AUTH_BY_WEEK
    UNION
    SELECT AUTHORIZATIONID, PATIENTID, SERVICECODEID, CALENDAR_DATE, HOURS_AUTHORIZED FROM AUTH_BY_MONTH
    UNION
    SELECT AUTHORIZATIONID, PATIENTID, SERVICECODEID, CALENDAR_DATE, HOURS_AUTHORIZED FROM AUTH_BY_PERIOD
), AUTH_PER_MONTH AS
(
    SELECT AO.PATIENTID
   		 , AO.SERVICECODEID
   		 , DATE_TRUNC(''MONTH'', CALENDAR_DATE) AS AUTH_MONTH
   		 , MAX(PA.FROMDATE::DATE) AS REAUTHORIZED_DATE
   		 , SUM(HOURS_AUTHORIZED) AS HOURS_AUTHORIZED
    FROM AUTH_OVERALL AO
    INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PATIENTAUTHORIZATION PA
   	 ON PA.AUTHORIZATIONID = AO.AUTHORIZATIONID
    GROUP BY AO.PATIENTID, AO.SERVICECODEID, AUTH_MONTH
), AUTH_DATES AS
(
    SELECT DISTINCT
   	 PA.PATIENTID
   	 , PA.SERVICECODEID
   	 , FIRST_VALUE(AUTHORIZATIONNUMBER)
   		 OVER(PARTITION BY PA.PATIENTID, PA.SERVICECODEID ORDER BY PA.FROMDATE DESC) AS AUTHNUMBER
   	, MAX(PA.FROMDATE)
      		 OVER(PARTITION BY PA.PATIENTID, PA.SERVICECODEID) AS LATEST_AUTH_BEGIN_DATE
   	, MAX(PA.TODATE)
      		 OVER(PARTITION BY PA.PATIENTID, PA.SERVICECODEID) AS LATEST_AUTH_END_DATE
    FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PATIENTAUTHORIZATION PA
), SUPERVISOR AS
(
    SELECT CORD.PATIENTID, CORD.COORDINATORID, CORD.COORDINATORNAME
   		 , ROW_NUMBER() OVER(PARTITION BY CORD.AGENCYID, CORD.PATIENTID, CORD.COORDINATORSRNO ORDER BY CREATEDDATE DESC) RN
    FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PROVIDERPATIENTCOORDINATORS CORD
    WHERE CORD.COORDINATORSRNO  = 1
), OPENSYSTEMS_REVENUE_SEG AS
(
    select * FROM  DISC_PROD.HHAEXCHANGEOPENSYSTEMS.VW_OPENSYSTEMS_REVENUE
), SERVICE_DATA AS
(
    SELECT DISTINCT VR.PATIENTID AS PATIENTID
   		 , VISITS.PRIMARYSERVICECODEID AS SERVICECODEID
   		 , MIN(VR.VISITDATE) AS BEGIN_SERVICE_DATE
   		 , MAX(VR.VISITDATE) AS END_SERVICE_DATE
   		 , NVL(DATEDIFF(DAY, MAX(VR.VISITDATE)::DATE, GETDATE()::DATE), 0) AS LAST_SERVICE_DAY_DIFF
    FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.VISITINFO_REPL VISITS
    JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.TBLVISITS_REPL VR
   	 ON VISITS.VISITID = VR.VISITID
   		 AND VISITS.AGENCYID = VR.AGENCYID
    INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.VISITS VS
   	 ON VS.VISITID = VR.VISITID
    GROUP BY VR.PATIENTID, VISITS.PRIMARYSERVICECODEID
), OPENSYSTEMS_CONTRACTRATES AS
(
    SELECT CR.CONTRACTRATEID
   	 , CR.RATE
   	 , CR.CONTRACTID
   	 , CR.AGENCYID
   	 , CR.SERVICECODEID
   	 , CR.UNITS
    FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.CONTRACTRATES CR
    WHERE TODATE :: DATE > GETDATE()
   		 AND FROMDATE :: DATE <= GETDATE()
    QUALIFY ROW_NUMBER()
   		   OVER(PARTITION BY CR.CONTRACTID, CR.SERVICECODEID
   			      ORDER BY CR.RATE DESC, CR.MODIFIEDDATE DESC) = 1
)
SELECT DISTINCT MD5( ''OPENSYSTEMS'' || ''-'' || PA.PATIENTID || ''-'' || APM.AUTH_MONTH || ''-'' || NVL(SC.SERVICECODEID, -1) || ''-'' || ''HHAEXCHANGE'') AS INTAKE_KEY
   			 , APM.AUTH_MONTH AS REPORT_DATE
   			 , MD5(''OPENSYSTEMS''
   			      || ''-'' || O.OFFICEID
   			      || ''-'' || ''HHAEXCHANGE'') AS BRANCH_KEY
   			 , MD5(''OPENSYSTEMS''
   				 || ''-'' || CLIENT.MASTER_ID
   				 || ''-'' || ''HHAEXCHANGE'') AS CLIENT_KEY
   			 , MD5(''OPENSYSTEMS''
   				 || ''-'' || SC.CONTRACTID
   				 || ''-'' || NVL(CR.CONTRACTRATEID,-1)
   				 || ''-'' || NVL(SC.SERVICECODEID,-1)|| ''-'' || ''HHAEXCHANGE'') AS CONTRACT_KEY
   			 , 17 AS SOURCE_SYSTEM_ID
   			 , APM.REAUTHORIZED_DATE AS REAUTHORIZED_DATE
   			 , AD.AUTHNUMBER AS PRE_AUTH_NUMBER
   			 , P.SERVICESTARTDATE AS BEGIN_SERVICE_DATE
   			 , IFF(SD.LAST_SERVICE_DAY_DIFF > 30, SD.END_SERVICE_DATE, NULL) AS END_SERVICE_DATE
   			 , AD.LATEST_AUTH_BEGIN_DATE::DATE AS LATEST_AUTH_BEGIN_DATE
   			 , AD.LATEST_AUTH_END_DATE::DATE AS LATEST_AUTH_END_DATE
   			 , UPPER(O.OFFICENAME) AS BRANCH_NAME
   			 , NVL(CLIENT.CLIENT_NUMBER, CLIENT.MASTER_ID) AS CLIENT_NUMBER
   			 , NVL(SC.CONTRACTID,NULL) AS CONTRACT_CODE
   	  		 , CR.RATE AS BILL_RATE
   	  		 , CONCAT(''OPENSYSTEMS - '',O.STATE) AS SYSTEM_CODE
   	  		 , UPPER(SUP.COORDINATORNAME) AS CASE_MANAGER
   	  		 , APM.HOURS_AUTHORIZED AS HOURS_AUTHORIZED
   	  		 , APM.HOURS_AUTHORIZED AS HOURS_AUTHORIZED_NON_ADJUSTED
   	     	 , :STR_ETL_TASK_KEY AS ETL_TASK_KEY
   	     	 , :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
   			 , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
   	  		 , CURRENT_USER AS ETL_INSERTED_BY
   	  		 , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
   	  		 , CURRENT_USER AS ETL_LAST_UPDATED_BY
   	  		 , 0 AS ETL_DELETED_FLAG
FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PATIENTAUTHORIZATION PA
INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.SERVICECODES SC
    ON SC.CONTRACTID = PA.CONTRACTID
   	 AND SC.AGENCYID = PA.AGENCYID
   	 AND SC.SERVICECODEID = PA.SERVICECODEID
INNER JOIN AUTH_PER_MONTH APM
    ON APM.PATIENTID = PA.PATIENTID
   	 AND APM.SERVICECODEID = SC.SERVICECODEID
INNER JOIN CLIENT
    ON CLIENT.CLIENT_NUMBER = PA.PATIENTID
INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PATIENTS P
    ON P.PATIENTID = CLIENT.CLIENT_NUMBER
INNER JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.OFFICE_OFFICES_REPL O
    ON O.OFFICEID = P.OFFICEID
LEFT JOIN SERVICE_DATA SD
    ON SD.PATIENTID = PA.PATIENTID
   	 AND SD.SERVICECODEID = PA.SERVICECODEID
LEFT JOIN AUTH_DATES AD
    ON AD.PATIENTID = PA.PATIENTID
   	 AND AD.SERVICECODEID = PA.SERVICECODEID
LEFT JOIN SUPERVISOR SUP
    ON SUP.PATIENTID = PA.PATIENTID
   	 AND SUP.RN = 1
LEFT JOIN OPENSYSTEMS_REVENUE_SEG ES
    ON ES.CONTRACTID = SC.CONTRACTID
	AND ES.SERVICECODEID = SC.SERVICECODEID
LEFT JOIN OPENSYSTEMS_CONTRACTRATES CR
    ON CR.CONTRACTID = SC.CONTRACTID
   	 AND CR.SERVICECODEID = PA.SERVICECODEID
LEFT JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.CONTRACTS C
    ON PA.CONTRACTID = C.CONTRACTID
LEFT JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.PAYER_REPL  PR
    ON IFNULL(PR.CONTRACTID,PR.PAYERID) = SC.CONTRACTID;
RETURN ''SUCCESS'';
end;
';