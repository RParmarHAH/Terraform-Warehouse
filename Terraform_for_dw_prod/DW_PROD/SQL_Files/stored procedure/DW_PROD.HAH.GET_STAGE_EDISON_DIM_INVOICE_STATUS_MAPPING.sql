CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_EDISON_DIM_INVOICE_STATUS_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 20/03/23    Pinkal Panchal        Initial PRODelopment
-- 12/09/23    Preeti Sharma         INVOICE_STATUS_MAPPING LOGIC CHANGES AND ADDED CTE FOR RCM
--*****************************************************************************************************************************

INSERT OVERWRITE INTO DW_PROD.STAGE.EDISON_DIM_INVOICE_STATUS_MAPPING
WITH BILLING_SUMMARY AS
(
	SELECT INV_HEAD.INVOICEHEADERID
		, SUM(BPV.PAIDAMOUNT) AS AMOUNT_COLLECTED
		, SUM(NVL(BPV.ADJUSTMENT, 0) + NVL(BPV.TTADJUSTMENT, 0) + NVL(BPV.WRITEOFF, 0) + NVL(BPV.OTHERADJUSTMENT, 0)) AS AMOUNT_ADJUSTED
		, SUM(BPV.WRITEOFF) AS AMOUNT_WRITEOFF
	FROM DISC_PROD.HHAEXCHANGEEDISON.BILLING_PAIDVISITS_REPL BPV
	INNER JOIN DISC_PROD.HHAEXCHANGEEDISON.TBLINVOICEDETAILS_REPL INV_DET
		ON INV_DET.VISITID = BPV.VISITID 
			AND INV_DET.PAYERID = BPV.PAYERID
			AND INV_DET.AGENCYID = BPV.AGENCYID 
	INNER JOIN DISC_PROD.HHAEXCHANGEEDISON.TBLINVOICEHEADER_REPL INV_HEAD
		ON INV_HEAD.INVOICEHEADERID = INV_DET.INVOICEHEADERID
			AND INV_HEAD.AGENCYID = INV_DET.AGENCYID 
	WHERE INV_HEAD .AGENCYID  = 155
	GROUP BY INV_HEAD.INVOICEHEADERID 
), PAYMENTS_SUMMARY AS
(
	SELECT INV_HEAD.INVOICEHEADERID
		, SUM(PYM.PAIDAMOUNT) AS AMOUNT_COLLECTED
		, SUM(NVL(PYM.ADJUSTMENT, 0) + NVL(PYM.TTADJUSTMENT, 0) + NVL(PYM.WRITEOFF, 0) + NVL(PYM.OTHERADJUSTMENT, 0)) AS AMOUNT_ADJUSTED
		, SUM(PYM.WRITEOFF) AS AMOUNT_WRITEOFF
		, MAX(PYM.PAIDDATE) AS PAIDDATE
	FROM DISC_PROD.HHAEXCHANGEEDISON.PAYMENTS PYM
	INNER JOIN DISC_PROD.HHAEXCHANGEEDISON.TBLINVOICEDETAILS_REPL INV_DET
		ON INV_DET.VISITID = PYM.VISITID 
			AND INV_DET.INVOICEDETAILID = PYM.INVOICEDETAILID 
			AND INV_DET.AGENCYID = PYM.AGENCYID 
	INNER JOIN DISC_PROD.HHAEXCHANGEEDISON.TBLINVOICEHEADER_REPL INV_HEAD
		ON INV_HEAD.INVOICEHEADERID = INV_DET.INVOICEHEADERID
			AND INV_HEAD.AGENCYID = INV_DET.AGENCYID 
	WHERE INV_HEAD .AGENCYID  = 155
	GROUP BY INV_HEAD.INVOICEHEADERID 
), INVOICE_SUMMARY AS
(
	SELECT DISTINCT INV_HEAD.INVOICEHEADERID AS INVOICEHEADERID
			, INV_HEAD.INVOICEAMOUNT AS INV_AMOUNT_BILLED
			, NVL(BS.AMOUNT_ADJUSTED, PS.AMOUNT_ADJUSTED) AS INV_AMOUNT_ADJUSTED
			, COALESCE(BS.AMOUNT_COLLECTED, PS.AMOUNT_COLLECTED, 0) + NVL(INV_AMOUNT_ADJUSTED, 0) AS INV_AMOUNT_COLLECTED -- HHA Considering any adjusment OR Write off in paid amount
			, INV_AMOUNT_BILLED - INV_AMOUNT_COLLECTED AS INV_AMOUNT_OUTSTANDING
			, NVL(BS.AMOUNT_WRITEOFF, PS.AMOUNT_WRITEOFF) AS INV_AMOUNT_WRITEOFF
			, NULL AS WRITEOFF_NOTES
			, PS.PAIDDATE AS FINAL_PAYMENT_DATE
			, COUNT(DISTINCT INV_DET.PATIENTID) OVER (PARTITION BY INV_HEAD.INVOICEHEADERID) AS NUMBER_OF_CLIENTS
	FROM DISC_PROD.HHAEXCHANGEEDISON.TBLINVOICEHEADER_REPL INV_HEAD
	INNER JOIN DISC_PROD.HHAEXCHANGEEDISON.TBLINVOICEDETAILS_REPL INV_DET
		ON INV_DET.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID 
			AND INV_DET.AGENCYID = INV_HEAD.AGENCYID 
	LEFT JOIN BILLING_SUMMARY BS
		ON BS.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID 
	LEFT JOIN PAYMENTS_SUMMARY PS
		ON PS.INVOICEHEADERID = INV_HEAD.INVOICEHEADERID 
	WHERE INV_HEAD.AGENCYID = 155
)
SELECT DISTINCT
	17 AS SOURCE_SYSTEM_ID,
	''EDISON'' AS SYSTEM_CODE,
--	CASE WHEN INV.PAYMENTSTATUS = 0 THEN ''BILLED''
--		WHEN INV.PAYMENTSTATUS = 1 THEN ''PAID''
--		WHEN INV.PAYMENTSTATUS = 2 THEN ''PARTIAL PAY''
--ELSE ''UNKNOWN'' END AS DERIVED_INVOICE_STATUS,
-- Changes made on 12/09/2023 for RCM
	CASE WHEN INVOICE_SUMMARY.INV_AMOUNT_OUTSTANDING <= 0 THEN ''PAID''
        WHEN INVOICE_SUMMARY.INV_AMOUNT_OUTSTANDING> 0 AND INVOICE_SUMMARY.INV_AMOUNT_COLLECTED> 0 THEN ''PARTIAL PAY''
        ELSE ''BILLED'' END AS DERIVED_INVOICE_STATUS,
	MD5(SOURCE_SYSTEM_ID || ''-'' || DERIVED_INVOICE_STATUS || ''-'' || SYSTEM_CODE) AS INVOICE_STATUS_KEY
	,
       ---- ETL FIELDS
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
    :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,                    
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	CURRENT_USER as ETL_INSERTED_BY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	CURRENT_USER as ETL_LAST_UPDATED_BY
FROM DISC_PROD.HHAEXCHANGEEDISON.TBLINVOICEHEADER_REPL INV
LEFT JOIN INVOICE_SUMMARY -- Added on 12/09/2023 for RCM
	ON INVOICE_SUMMARY.INVOICEHEADERID = INV.INVOICEHEADERID 
--GROUP BY SOURCE_SYSTEM_ID,SYSTEM_CODE,DERIVED_INVOICE_STATUS,INVOICE_STATUS_KEY,
--ETL_TASK_KEY,ETL_INSERTED_TASK_KEY,ETL_INSERTED_DATE,ETL_INSERTED_BY,ETL_LAST_UPDATED_DATE,ETL_LAST_UPDATED_BY
;
RETURN ''SUCCESS'';
END;
';