CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_PREFERRED_DIM_BRANCH("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
                BEGIN
--*****************************************************************************************************************************
-- NAME:  HHAEXCHANGEPREFERRED_DIM_BRANCH
--
-- PURPOSE: Creates one row per branch according to HHAEXCHANGEPREFERRED 
--
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 04/20/22     Sam Huff              Initial development
-- 05/29/23 	Shikhar Saxena		  Changed the logic to add SOURCE_SYSTEM_TYPE field
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.PREFERRED_DIM_BRANCH 
WITH HHAEXCHANGEPREFERRED_DATA AS (
	SELECT MD5(''PREFERRED'' || ''-'' || ''PREFERRED CORPORATE OFFICE'' || ''-'' || ''PREFERRED'') AS BRANCH_KEY,
		''PREFERRED CORPORATE OFFICE'' AS BRANCH_NAME,
		''PREFERRED CORPORATE OFFICE'' AS OFFICE_NAME,
		''NY'' AS STATE,
		''PREFERRED'' AS SYSTEM_CODE,
		17 AS SOURCE_SYSTEM_ID,
		-1 AS OFFICE_CODE,
		11204 AS OFFICE_ZIP,
		''2357 60th Street'' AS OFFICE_ADDRESS1,
		NULL AS OFFICE_ADDRESS2,
		''Brooklyn'' AS OFFICE_CITY,
		''7188418000'' AS OFFICE_PHONE,
        -1 AS HAH_OFFICE_CODE, -- will need to be updated after manual data entry into hr_office_mapping and KMRegions
        -1 AS HAH_OFFICE_NUMBER -- will need to be updated after manual data entry into hr_office_mapping and KMRegions
), RISKCONNECT_HIERARCHY AS (
	SELECT * FROM DISC_PROD.STAGE.RISKCONNECT_HIERARCHY
), HR_OFFICE_MAPPING AS (
	SELECT * FROM DISC_PROD.STAGE.HR_OFFICE_MAPPING
), HAH_OFFICES AS (
	SELECT UPPER(TRIM(OFFICES.STATE)) AS STATE,
		TRY_CAST(OFFICES.OFFICENUMBER AS INT) AS OFFICE_NUMBER,
		OFFICES.OFFICENAME AS OFFICE_NAME,
		CASE WHEN OFFICES.OFFICENAME LIKE ''%DD%'' THEN ''DD''
			WHEN OFFICES.OFFICENAME LIKE ''%ADS%'' THEN ''ADS''
		END AS BRANCH_SERVICE_LINE,
		OFFICES.TOLLFREE AS OFFICE_TOLL_FREE_PHONE,
		OFFICES.FAX AS OFFICE_FAX,
		TRIM( OFFICES.Email) AS Primary_Branch_Email,
		CAST(NULL AS VARCHAR(10)) AS Secondary_Branch_Email,
		OFFICES.OFFICEMANAGER AS OFFICEMANAGER1, --check default coordinator id
		CAST(NULL AS VARCHAR(10)) AS OFFICEMANAGER2,
		OFFICES.DATECREATED AS DATE_CREATED,
		OFFICES.ETL_LAST_UPDATED_DATE
	FROM DISC_PROD.HAHUSERS.LOGIN_OFFICE AS OFFICES
    WHERE TRY_CAST(OFFICES.OFFICENUMBER AS INT) IS NOT NULL
) 
SELECT HHAEXCHANGEPREFERRED_OFFICES.BRANCH_KEY, 
        HHAEXCHANGEPREFERRED_OFFICES.BRANCH_NAME, 
        HHAEXCHANGEPREFERRED_OFFICES.SYSTEM_CODE, 
        HHAEXCHANGEPREFERRED_OFFICES.SOURCE_SYSTEM_ID,
		SOURCE_SYSTEM.SOURCE_SYSTEM_TYPE,
		HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_NUMBER AS OFFICE_NUMBER, 
        HHAEXCHANGEPREFERRED_OFFICES.OFFICE_CODE, 
		HHAEXCHANGEPREFERRED_OFFICES.OFFICE_NAME, 
        HHAEXCHANGEPREFERRED_OFFICES.OFFICE_NAME AS OFFICE_NAME_ALT,
		NULL AS DEPARTMENT_NAME,
        NULL AS BRANCH_SERVICE_LINE,
		TRUE AS PARENT_FLAG,
		HHAEXCHANGEPREFERRED_OFFICES.BRANCH_KEY AS PARENT_BRANCH_KEY,
		HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_NUMBER AS PARENT_OFFICE_NUMBER,
		HHAEXCHANGEPREFERRED_OFFICES.OFFICE_CODE AS PARENT_OFFICE_CODE,
		HHAEXCHANGEPREFERRED_OFFICES.STATE || '' - '' || HHAEXCHANGEPREFERRED_OFFICES.BRANCH_NAME || '' ('' || NVL(HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_NUMBER, -1) || ''-PRDB)'' AS PARENT_BRANCH_NAME,
		HHAEXCHANGEPREFERRED_OFFICES.OFFICE_ADDRESS1,
		HHAEXCHANGEPREFERRED_OFFICES.OFFICE_ADDRESS2,
		HHAEXCHANGEPREFERRED_OFFICES.OFFICE_CITY,
		COALESCE(HAH_OFFICES.STATE, HHAEXCHANGEPREFERRED_OFFICES.STATE) AS OFFICE_STATE_CODE,
		HHAEXCHANGEPREFERRED_OFFICES.OFFICE_ZIP,
		HHAEXCHANGEPREFERRED_OFFICES.OFFICE_PHONE,
		HAH_OFFICES.OFFICE_TOLL_FREE_PHONE,
		HAH_OFFICES.OFFICE_FAX,
		HHAEXCHANGEPREFERRED_OFFICES.STATE || '' - '' || HHAEXCHANGEPREFERRED_OFFICES.BRANCH_NAME || '' ('' || NVL(HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_NUMBER, -1) || ''-PRDB)'' AS DETAILED_OFFICE_NAME,	
		--//--	No NY Data in KMRegions
		REGIONS.REGIONNUMBER AS REGION_NUMBER,
		UPPER(TRIM(REGIONS.NAME)) AS REGION_NAME,
		UPPER(TRIM(REGIONS.MANAGER)) AS REGION_MANAGER,
		NULL AS REGION_MANAGER_EMPLOYEE_KEY,
		NULL AS SUBREGION_NAME,
		--//--	No NY Data in KMRegions
		--/-- No NY data in HAHUSERS.LoginOffices
		UPPER(TRIM(HAH_OFFICES.OfficeManager1)) AS Primary_Branch_Manager_Name,
		TRIM(HAH_OFFICES.PRIMARY_BRANCH_EMAIL) AS PRIMARY_BRANCH_EMAIL,
		NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
		UPPER(TRIM(HAH_OFFICES.OfficeManager2)) AS Secondary_Branch_Manager_Name,
		TRIM(HAH_OFFICES.SECONDARY_BRANCH_EMAIL) AS SECONDARY_BRANCH_EMAIL,
		NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
		--/-- No NY data in HAHUSERS.LoginOffices
		--/--  No NY data in Riskconnect
		RISKCONNECT.NODE_KEY AS RISKCONNECT_NODE_KEY,
		RISKCONNECT.NODE_NAME AS RISKCONNECT_NAME,
		--/--  No NY data in Riskconnect
		--/--  No NY data in Mercer
		NULL AS HR_OFFICE_NUMBER,
		NULL AS HR_OFFICE_NAME,
		TRUE AS ACTIVE_FLAG,
		TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
		TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
        :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
                        
    CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
    CURRENT_USER AS ETL_INSERTED_BY,
    CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_UPDATED_DATE,
    CURRENT_USER AS ETL_LAST_UPDATED_BY,
    0 AS ETL_DELETED_FLAG,
    0 AS ETL_INFERRED_MEMBER_FLAG
	FROM HHAEXCHANGEPREFERRED_DATA AS HHAEXCHANGEPREFERRED_OFFICES
    LEFT JOIN HAH_OFFICES AS HAH_OFFICES
		ON HAH_OFFICES.STATE = HHAEXCHANGEPREFERRED_OFFICES.STATE AND HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_NUMBER = HAH_OFFICES.OFFICE_NUMBER
    LEFT JOIN HAH.DIM_STATE AS STATES 
		ON STATES.STATE_ISO_CODE = HHAEXCHANGEPREFERRED_OFFICES.STATE
	--//--  Need RiskConnect Data Refresh  
    LEFT OUTER JOIN RISKCONNECT_HIERARCHY AS RISKCONNECT
		ON RISKCONNECT.STATE = HHAEXCHANGEPREFERRED_OFFICES.STATE
			--AND RISKCONNECT.PARENT_LEVEL = 2
			--AND TRIM(RISKCONNECT.OFFICE_CODE) = IFF(TRIM(HHAEXCHANGEPREFERRED_OFFICES.STATE) <> ''SC'', TRIM(HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_CODE), HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_NUMBER::STRING)
	--//--  Need Mercer Data Refresh
    LEFT OUTER JOIN HR_OFFICE_MAPPING AS HR
		ON TRIM(HR.OFFICE_CODE) = TRIM(HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_CODE) AND TRIM(HR.STATE) = HHAEXCHANGEPREFERRED_OFFICES.STATE 
    LEFT JOIN DISC_PROD.HAH_REPORTING.KEYMETOFFICES AS REGION_OFFICES
		ON TRIM(REGION_OFFICES.OFFICESTATE) = HHAEXCHANGEPREFERRED_OFFICES.STATE AND TRY_CAST(REGION_OFFICES.OFFICENUMBER AS INT) = HHAEXCHANGEPREFERRED_OFFICES.HAH_OFFICE_NUMBER 
	--//--  Needs KMRegions Data Refresh 
    LEFT JOIN DISC_PROD.BI_REPOSITORY.KMREGIONS AS REGIONS
		ON (REGION_OFFICES.REGIONNUMBER IS NULL AND 
			CASE WHEN UPPER(STATES.STATE_NAME) = ''GEORGIA'' THEN ''GEORGIA/SOUTH CAROLINA''
				WHEN UPPER(STATES.STATE_NAME) = ''SOUTH CAROLINA'' THEN ''GEORGIA/SOUTH CAROLINA''
				WHEN UPPER(STATES.STATE_NAME) = ''MICHIGAN'' THEN ''DD/MICHIG@Poonit Mistry Kinda stumped on what Im pretty sure is that last piece of the puzzle with the get AN''
				WHEN UPPER(STATES.STATE_NAME) = ''KANSAS'' THEN ''MISSOURI'' 
				WHEN UPPER(STATES.STATE_NAME) = ''IOWA'' THEN ''ILLINOIS - NORTH'' 
				WHEN UPPER(STATES.STATE_NAME) = ''MISSISSIPPI'' THEN ''MISSISSIPPI/TENNESSEE''
				WHEN UPPER(STATES.STATE_NAME) = ''TENNESSEE'' THEN ''MISSISSIPPI/TENNESSEE''
				ELSE UPPER(STATES.STATE_NAME) END = REGIONS.NAME) 
	LEFT JOIN DW_PROD.HAH.DIM_SOURCE_SYSTEM AS SOURCE_SYSTEM ON SOURCE_SYSTEM.SOURCE_SYSTEM_ID = HHAEXCHANGEPREFERRED_OFFICES.SOURCE_SYSTEM_ID
 
;
    RETURN ''SUCCESS'';
    END;
    ';