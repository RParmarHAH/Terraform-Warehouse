CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_QUICKBOOKS_DIM_PAYCODE_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '

BEGIN

--*****************************************************************************************************************************
-- NAME: QUICKBOOKS_DIM_PAYCODE_MAPPING
--
-- PURPOSE: Creates one row per PAYCODE according to QuickBooks
--
-- DEVELOPMENT LOG:
-- DATE			AUTHOR				NOTES:
-- ---------	----------------	-------------------------------------------------------------------------------------------    
-- 03/17/23		Aditya Shukla		Initial Development
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.QUICKBOOKS_DIM_PAYCODE_MAPPING
 
WITH USAGE_DATES AS (
	SELECT DISTINCT 
		COMPANY,
		PAYCODES,
		MIN(PAYROLL_DATE::DATE) AS FIRST_USED_DATE,
		MAX(PAYROLL_DATE::DATE) AS LAST_USED_DATE,
		COUNT(DISTINCT NAME) AS NUMBER_EMPLOYEES
	FROM (
		SELECT DISTINCT COMPANY, PAYCODES, NAME, COALESCE(CHK_DATE, TYPE) AS PAYROLL_DATE FROM DISC_PROD.ADP.QB_PAYROLL_DETAILS
		UNION
		SELECT DISTINCT COMPANY, PAYCODES, NAME, DATE AS PAYROLL_DATE FROM DISC_PROD.ADP.QB_PAYROLL_DETAILS_MIDWAY_2020
		)
	GROUP BY 1, 2
)
SELECT DISTINCT
	MD5(''QuickBooks'' || PAY.COMPANY || PAY.PAYCODES || 31) AS PAYCODE_MAPPING_KEY,
	31 AS SOURCE_SYSTEM_ID,
	''QB - '' || PAY.COMPANY AS SYSTEM_CODE,
	''OH'' AS STATE_CODE,
	CASE WHEN PAY.PAYCODES = ''EMPLOYEE_AFTERTAX_DEDUCTIONS_MANSFIELD_MUNICIPAL_COURT_CASE_2019CVF02359'' THEN ''AFTERTAX MANSFIELD MUNICIPAL COURT''
		WHEN PAY.PAYCODES = ''EMPLOYEE_AFTERTAX_DEDUCTIONS_TABLET_DATA_OVER_USAGE'' THEN ''AFTERTAX DEDUCTIONS DATA OVER USAGE''
		ELSE REPLACE(PAY.PAYCODES, ''_'', '' '') 
	END AS PAY_CODE,
	NULL AS PAY_CODE_DESCRIPTION,
	NULL AS PAY_CODE_TYPE,
	CASE WHEN PAY.PAYCODES LIKE ''%BONUS%'' OR PAY.PAYCODES LIKE ''%INCENT%'' THEN ''Bonus''
		WHEN PAY.PAYCODES LIKE ''%VAC%'' OR PAY.PAYCODES LIKE ''%PTO%'' OR PAY.PAYCODES LIKE ''%BEREAV%'' THEN ''PTO''
        WHEN PAY.PAYCODES LIKE ''%HOLID%''  OR PAY.PAYCODES LIKE ''%GEN%HOL%'' THEN ''Holiday''
        WHEN PAY.PAYCODES LIKE ''%INSERV%'' OR PAY.PAYCODES LIKE ''%TRAIN%'' OR PAY.PAYCODES LIKE ''%TRNG%'' THEN ''Training''
        WHEN PAY.PAYCODES LIKE ''%SICK%'' THEN ''Sick''
        WHEN PAY.PAYCODES LIKE ''%ON%CALL%'' OR PAY.PAYCODES LIKE ''%OCP%'' THEN ''On-Call''
        WHEN PAY.PAYCODES LIKE ''%ASSES%'' THEN ''Assessment''
        WHEN PAY.PAYCODES LIKE ''%SUPERV%'' THEN ''Supervisor''
        WHEN PAY.PAYCODES LIKE ''%NO%BILL%'' OR PAY.PAYCODES LIKE ''%NO%CHARGE%'' OR PAY.PAYCODES LIKE ''%NO%SHOW%'' THEN ''No Bill & No Show & No Charge''
        WHEN PAY.PAYCODES LIKE ''%UNION%'' OR PAY.PAYCODES LIKE ''%DUE%'' THEN ''Union''
        WHEN PAY.PAYCODES LIKE ''%DAILY%'' OR PAY.PAYCODES LIKE ''%DAY%'' THEN ''Daily''
        WHEN PAY.PAYCODES LIKE ''%OVER%TIME%'' OR PAY.PAYCODES LIKE ''%OTM%'' OR PAY.PAYCODES LIKE ''%OT'' THEN ''Overtime''
        WHEN PAY.PAYCODES LIKE ''%TRAVEL%TIME%'' OR PAY.PAYCODES LIKE ''%TTI%'' OR PAY.PAYCODES LIKE ''%TVL%'' OR PAY.PAYCODES LIKE ''%MILE%'' THEN ''Travel Time & Mileage''
        WHEN PAY.PAYCODES LIKE ''%HEALTH%INS%'' OR PAY.PAYCODES LIKE ''%DENTAL%'' OR PAY.PAYCODES LIKE ''%VISION%'' OR PAY.PAYCODES LIKE ''%DISABILITY%'' OR PAY.PAYCODES LIKE ''%AD&D%'' OR PAY.PAYCODES LIKE ''%LIFE%INS%'' OR PAY.PAYCODES LIKE ''%VOL%LIFE%'' OR PAY.PAYCODES LIKE ''%MEDIC%INS%'' OR PAY.PAYCODES LIKE ''%FSA%'' OR PAY.PAYCODES LIKE ''%HSA%'' OR PAY.PAYCODES LIKE ''%UNITED%HEALTH%'' OR PAY.PAYCODES LIKE ''%FLEX%SPEND%'' OR PAY.PAYCODES LIKE ''%MIN%ESSENT%'' OR PAY.PAYCODES LIKE ''%401%K%'' OR PAY.PAYCODES LIKE ''%LIMIT%MEDIC%'' OR PAY.PAYCODES LIKE ''%VOL%ACCID%'' OR PAY.PAYCODES = ''STD'' OR PAY.PAYCODES = ''LTD'' OR PAY.PAYCODES = ''MEDICAL'' OR PAY.PAYCODES LIKE ''%MEDICAL%PRE%TAX%'' OR PAY.PAYCODES LIKE ''%CRITIC%I%'' OR PAY.PAYCODES LIKE ''%DEDUCT%'' OR PAY.PAYCODES LIKE ''%GARNISH%'' OR PAY.PAYCODES LIKE ''%ACCIDENT%'' OR PAY.PAYCODES LIKE ''%LOAN%'' OR PAY.PAYCODES LIKE ''%SCRUBS%'' OR PAY.PAYCODES LIKE ''%ID%REPLACE%'' OR PAY.PAYCODES LIKE ''%REPLACE%KEY%''  OR PAY.PAYCODES LIKE ''%KEY%REPLACE%'' OR PAY.PAYCODES LIKE ''%HOSP%INDEM%'' OR PAY.PAYCODES LIKE ''%DED%ADV%'' OR PAY.PAYCODES LIKE ''%BACKGROUND%'' THEN ''Benefits & Deductions''
        WHEN PAY.PAYCODES LIKE ''%ADJ%'' OR PAY.PAYCODES LIKE ''%SETTLE%'' OR PAY.PAYCODES LIKE ''%REFUND%'' OR PAY.PAYCODES LIKE ''%RETRO%'' OR PAY.PAYCODES LIKE ''%PREMIUM%'' OR PAY.PAYCODES LIKE ''%COVID%'' OR PAY.PAYCODES LIKE ''%SEVER%'' OR PAY.PAYCODES LIKE ''%ADVANCE%'' OR PAY.PAYCODES LIKE ''%RECOVER%'' OR PAY.PAYCODES LIKE ''%ASSIGN%'' OR PAY.PAYCODES LIKE ''%EARN%INCOME%'' OR PAY.PAYCODES LIKE ''%GEN%EIC%'' OR PAY.PAYCODES LIKE ''%DEFER%COMP%'' /* OR CAST( dtl.IsHistory AS BOOLEAN) */ THEN ''Adjustment''
        WHEN PAY.PAYCODES LIKE ''%MCO%'' OR PAY.PAYCODES LIKE ''%DORS%'' OR PAY.PAYCODES LIKE ''%IDOA%'' OR PAY.PAYCODES LIKE ''%DCFS%'' OR PAY.PAYCODES LIKE ''% SK %'' OR PAY.PAYCODES LIKE ''% RN %'' OR PAY.PAYCODES LIKE ''%RESPITE%'' OR PAY.PAYCODES LIKE ''%HOME%'' OR PAY.PAYCODES LIKE ''%TRANS%'' OR PAY.PAYCODES LIKE ''%SERVICE%'' OR PAY.PAYCODES LIKE ''%DD%SVC%'' OR PAY.PAYCODES LIKE ''%DD%HOUSE%'' THEN ''Regular Pay''
        WHEN PAY.PAYCODES LIKE ''%REIMB%'' OR PAY.PAYCODES LIKE ''%BUS%TRAVEL%'' OR PAY.PAYCODES LIKE ''%BUS%REIMB%'' OR PAY.PAYCODES LIKE ''%BUS%EXP%'' THEN ''Reimbursement''
        WHEN PAY.PAYCODES LIKE ''%TAX%'' OR PAY.PAYCODES LIKE ''%FICA%''  OR PAY.PAYCODES LIKE ''%WITHHOLD%'' THEN ''Tax''
        WHEN PAY.PAYCODES LIKE ''%GROSS%'' THEN ''Gross Pay''
        WHEN PAY.PAYCODES LIKE ''%NET%'' THEN ''Net Pay''
	END AS PAY_CODE_CATEGORY,
	NULL AS FINANCE_CATEGORY,
	NULL AS REVENUE_CATEGORY,
	NULL AS REVENUE_SUBCATEGORY_CODE,
	NULL AS REVENUE_SUBCATEGORY_NAME,
	UD.FIRST_USED_DATE AS FIRST_USED_DATE,
	UD.LAST_USED_DATE AS MOST_RECENT_USED_DATE,
	UD.NUMBER_EMPLOYEES AS NUMBER_EMPLOYEES_USED,
	FALSE AS ACTIVE_FLAG,
	NULL AS ADMIN_PAY_RATE_FLAG,
	NULL AS FIELD_PAY_RATE_FLAG,
	NULL AS INCLUDE_SALARY_PAYRATE_CALC_FLAG,
	NULL AS INCLUDE_FULL_TIME_HOURS_CALC_FLAG,
		-1 AS ETL_TASK_KEY,
		-1 AS ETL_INSERTED_TASK_KEY,
		current_date() AS ETL_INSERTED_DATE,
		current_user() AS ETL_INSERTED_BY,
		current_date() AS ETL_LAST_UPDATED_DATE,
		current_user() AS ETL_LAST_UPDATED_BY,
		FALSE ETL_DELETED_FLAG
FROM (
	SELECT DISTINCT COMPANY, PAYCODES FROM DISC_PROD.ADP.QB_PAYROLL_DETAILS
	UNION
	SELECT DISTINCT COMPANY, PAYCODES FROM DISC_PROD.ADP.QB_PAYROLL_DETAILS_MIDWAY_2020
	) AS PAY
LEFT JOIN USAGE_DATES UD
	ON UD.PAYCODES = PAY.PAYCODES
	AND UD.COMPANY = PAY.COMPANY;
	
RETURN ''SUCESS'';
END;
';