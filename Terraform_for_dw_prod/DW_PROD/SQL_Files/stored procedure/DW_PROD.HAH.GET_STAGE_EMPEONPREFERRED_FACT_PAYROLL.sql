CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_EMPEONPREFERRED_FACT_PAYROLL("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN

--*****************************************************************************************************************************
-- NAME: EMPEONPREFERRED_FACT_PAYROLL
--
-- PURPOSE: Creates one row for each each PAYROLL according TO EMPEON-PREFERRED
--
-- DEVELOPMENT LOG:
-- DATE				AUTHOR                					NOTES:
-- ----------		--------------------------------		-------------------------------------------------------------------
-- 18/10/2022		Aditya Shukla / Jigar Prajapati			Initial Development
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.EMPEONPREFERRED_FACT_PAYROLL

WITH EMPLOYEE AS (
	SELECT * FROM (
		SELECT
			--TRIM(ID) AS ID, 
			CO, TRIM(ID) AS CAREGIVER_ID, MASTER_ID, MD5(''EMPEON'' || ''-'' || MASTER_ID || ''EMPEONPREFERRED'') AS EMPLOYEE_KEY
		FROM DISC_DEDUPE_PROD.EMPEONPREFERRED.EMPLOYEE_MASTER_LIST
	)
	UNION
	SELECT * FROM (
		SELECT 
			--TRIM(EML.ID) AS ID, 
			CO AS CO, TRIM(CAREGIVER_ID) AS CAREGIVER_ID, MASTER_ID, MD5(''EMPEON'' || ''-'' || MASTER_ID || ''EMPEONPREFERRED'') AS EMPLOYEE_KEY
		FROM DISC_DEDUPE_PROD.EMPEONPREFERRED.EMPLOYEE_MATCH_LIST EML
		WHERE CO || TRIM(CAREGIVER_ID) NOT IN (SELECT CO||TRIM(ID) AS MASTER_ID  FROM DISC_DEDUPE_PROD.EMPEONPREFERRED.EMPLOYEE_MASTER_LIST)
	)
) --SELECT * FROM EMPLOYEE;
,
VACATION_HOURS AS (
	SELECT DISTINCT 
		TRANS,
		SUM(HOURS) AS VAC_HOURS
	FROM DISC_PROD.EMPEONPREFERRED.EPAYHISTDETAIL 
	WHERE TRIM(UPPER(DETCODE)) IN (''VO'',''WPV'',''V'')
	GROUP BY 1
),
SICK_HOURS AS (
	SELECT DISTINCT
		TRANS,
		SUM(HOURS) AS SICK_HOURS
	FROM DISC_PROD.EMPEONPREFERRED.EPAYHISTDETAIL 
	WHERE TRIM(UPPER(DETCODE)) IN (SELECT DISTINCT ECODE FROM DISC_PROD.EMPEONPREFERRED.CEARN WHERE TRIM(UPPER(ECODE)) LIKE ''%SICK%'' OR TRIM(UPPER(DESCRIPTION)) LIKE ''%SICK%'')
	GROUP BY 1
),
NON_SERVICE_UNITS AS (
	SELECT DISTINCT 
		TRANS,
		SUM(HOURS) AS NS_HRS
	FROM DISC_PROD.EMPEONPREFERRED.EPAYHISTDETAIL
	WHERE TRIM(UPPER(DETCODE)) IN (
		SELECT DISTINCT
			ECODE FROM DISC_PROD.EMPEONPREFERRED.CEARN
		WHERE TRIM(UPPER(ECODE)) NOT IN (''REG'', ''OT-CA'', ''OT'', ''OT-IN'', ''OT-LI'', ''OT-HOL-LI'', ''OT-CV'', ''OT-BL'', ''OTPR'', ''OT-TR'', ''OT-PAYNBIL'')
		AND TRIM(UPPER(ECODE)) NOT LIKE ''WP%'' AND TRIM(UPPER(ECODE)) NOT LIKE ''WC%''
		)
	AND TRIM(UPPER(DETCODE)) NOT IN (SELECT DISTINCT TCODE FROM DISC_PROD.EMPEONPREFERRED.ETAX)
	GROUP BY 1
),
UNION_DUES AS (
	SELECT DISTINCT
		TRANS,
		sum(AMOUNT) AS AMOUNT
	FROM DISC_PROD.EMPEONPREFERRED.EPAYHISTDETAIL
	WHERE TRIM(UPPER(DETCODE)) LIKE ''%UNION%''
	GROUP BY 1
),
REIMB_AMOUNT AS (
	SELECT DISTINCT 
		TRANS,
		SUM(AMOUNT) AS AMOUNT
	FROM DISC_PROD.EMPEONPREFERRED.EPAYHISTDETAIL
	WHERE TRIM(UPPER(DETCODE)) IN (''DCAPR'', ''RE'', ''REIMTRAV'')
	GROUP BY 1
)
SELECT DISTINCT
	MD5(EP.TRANS || ''-'' || TRIM(COALESCE(EMP.MASTER_ID, EP.ID)) || ''EMPEONPREFERRED'') AS PAYROLL_KEY,
	CHECKDATE::DATE AS REPORT_DATE,
	COALESCE(EMP.EMPLOYEE_KEY, MD5(''EMPEON'' || ''-'' || EP.ID || ''EMPEONPREFERRED'')) AS EMPLOYEE_KEY,
	MD5(22 || ''-'' || TRIM(COALESCE(emp.CO, EP.CO)) || ''-'' || ''EMPEONPREFERRED'') AS BRANCH_KEY,
	22 AS SOURCE_SYSTEM_ID,
	CHECKDATE::DATE AS PAYROLL_DATE,
	TRIM(EP.ID) AS EMPLOYEE_ID,
	''UNKNOWN'' AS BRANCH_NAME,
	''EMPEONPREFERRED'' || ''-'' || TRIM(EP.CO) AS SYSTEM_CODE,
	EP.BEGINDATE::DATE AS PAY_PERIOD_START_DATE,
	EP.ENDDATE::DATE AS PAY_PERIOD_END_DATE,
	CHECKNUMBER AS CHECK_NUMBER,
	(EP.HOURS + NVL(SH.SICK_HOURS, 0) + NVL(VH.VAC_HOURS, 0)) AS PAY_HOURS,
	REGHOURS AS SERVICE_HOURS,
	OTHOURS AS OVERTIME_HOURS,
	NON_SRV_HRS.NS_HRS AS NON_SERVICE_UNITS,
	SH.SICK_HOURS AS SICK_HOURS,
	VH.VAC_HOURS AS VACATION_HOURS,
	(REGDOLLARS / CASE WHEN REGHOURS = 0 THEN NULL ELSE REGHOURS END) AS PAY_RATE,
	(OTDOLLARS / CASE WHEN OTHOURS = 0 THEN NULL ELSE OTHOURS END) AS OVERTIME_RATE,
	GROSS AS GROSS_PAY_AMOUNT,
	REGDOLLARS AS SERVICE_PAY_AMOUNT,
	OTDOLLARS AS OVERTIME_PAY_AMOUNT,
	NULL AS NON_SERVICE_PAY_AMOUNT,
	TAXES AS TAX_AMOUNT,
	NET AS NET_PAY_AMOUNT,
	DEDUCTIONS AS OTHER_DEDUCTIONS_AMOUNT,
	UD.AMOUNT AS UNION_DUES_AMOUNT,
	RA.AMOUNT AS REINBURSMENT_AMOUNT,
		-1 AS ETL_TASK_KEY,
		-1 AS ETL_INSERTED_TASK_KEY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz AS ETL_INSERTED_DATE,
		CURRENT_USER AS ETL_INSERTED_BY,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz AS ETL_LAST_UPDATED_DATE,
		CURRENT_USER AS ETL_LAST_UPDATED_BY,
		FALSE AS ETL_DELETED_FLAG
FROM DISC_PROD.EMPEONPREFERRED.EPAYHIST EP
LEFT JOIN DISC_PROD.EMPEONPREFERRED.EPAYHISTDETAIL EPD
	ON EP.TRANS = EPD.TRANS
LEFT JOIN EMPLOYEE EMP
	ON TRIM(EMP.CO)||TRIM(EMP.CAREGIVER_ID) = TRIM(EP.CO)||TRIM(EP.ID)
	--AND TRIM(EMP.CO) = TRIM(EP.CO)
LEFT JOIN VACATION_HOURS VH
	ON VH.TRANS = EP.TRANS
LEFT JOIN SICK_HOURS SH 
	ON SH.TRANS = EP.TRANS
LEFT JOIN NON_SERVICE_UNITS NON_SRV_HRS
	ON NON_SRV_HRS.TRANS = EP.TRANS
LEFT JOIN UNION_DUES UD
	ON UD.TRANS = EP.TRANS
LEFT JOIN REIMB_AMOUNT RA
	ON RA.TRANS = EP.TRANS;
	
END;
';