CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ALLIANCE_FACT_REVENUE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS 'BEGIN
--*****************************************************************************************************************************
-- NAME:  ALLIANCE_FACT_REVENUE
--
-- PURPOSE: Creates one row per revenue according to ALLIANCE
--
-- DEVELOPMENT LOG:
-- DATE        	AUTHOR                	NOTES:
-- --------    	-------------------   	-----------------------------------------------------------------------------------------------
-- 08/02/2022	Mohit Vaghadiya         Initial development
-- 01/27/2023	Mohit Vaghadiya			Since we dont have billing/revenue info in Generations, updated based on Revenue file received 
--										from Aggie. not accurate but this is what we have 
--										Can not get the Invoice Number from ALGL Details due to payor name does not match
--25/11/23      Pradeep Thippani        Added bill_unit_type column for RCM(Requested By Natalie)
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.ALLIANCE_FACT_REVENUE
WITH CLIENT AS
(
    SELECT * FROM
    (
        SELECT MASTER_ID,CLIENTID
        FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.CLIENT_MASTER_LIST
    )
    UNION
    SELECT * FROM
    (
        SELECT DISTINCT MASTER_ID ,CLIENTID
        FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.CLIENT_MATCH_LIST
        WHERE CLIENTID NOT IN (SELECT CLIENTID FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.CLIENT_MASTER_LIST)
    )
), EMPLOYEE AS
(
    SELECT * FROM
    (
        SELECT MASTER_ID, SOCIALSECURITYNUM
        FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.EMPLOYEE_MASTER_LIST
    )
    UNION
    SELECT * FROM
    (
        SELECT DISTINCT MASTER_ID, SOCIALSECURITYNUM
        FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.EMPLOYEE_MATCH_LIST
        WHERE MASTER_ID  NOT IN (SELECT MASTER_ID  FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.EMPLOYEE_MASTER_LIST)
    )
), SUPERVISOR AS 
(
	SELECT * FROM
	(
		SELECT CASEMANAGERID, MASTER_ID
		FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.SUPERVISOR_MASTER_LIST 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT ID AS CASEMANAGERID, MASTER_ID
		FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.SUPERVISOR_MATCH_LIST
		WHERE ID NOT IN (SELECT CASEMANAGERID FROM DISC_DEDUPE_PROD.GENERATIONSALLIANCE.SUPERVISOR_MASTER_LIST) 
	) 
), CONTRACT_MAPPING AS
(
	SELECT DISTINCT CASE WHEN (CONTAINS(UPPER(P.BADDRESS1), C.FIRSTNAME) AND CONTAINS(UPPER(P.BADDRESS1), C.LASTNAME)) 
							OR (
									CONTAINS(UPPER(C.LASTNAME), REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\S+$''))
									OR CONTAINS(REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\S+$''), UPPER(C.LASTNAME)
									)
							) OR CT.NAME = ''Private Pay''
							THEN TRUE
					 ELSE FALSE 
				END IS_PRIAVATE_PAY
				, MD5(''ALLIANCE'' 
							||  ''-'' || P.PAYORID 
							|| ''-'' || SR.SERVICECODE 
							|| ''-'' || IFF(IS_PRIAVATE_PAY, ''PRIVATEPAY'', '''')
							-- || ''-'' || IFF( C.CLIENTTYPEID=1 , ''PRIVATEPAY'',TRIM(SR.DESCRIPTION))
							|| ''-'' || ''GENERATIONS''
						) AS CONTRACT_KEY
				, P.PAYORID
				, CASE WHEN SR.FLATRATE=''TRUE''  THEN ''VISIT''
							 WHEN SR.FLATRATE=''FALSE'' THEN ''HOURLY''
							 ELSE NULL 
				  END AS BILL_UNIT_TYPE
				, CONCAT(P.PAYORID,''-'',SR.SERVICECODE) AS CONTRACT_CODE
				, SCH.SCHEDULEID
				, P.BADDRESS1 AS PAYORNAME
	FROM DISC_PROD.GENERATIONSALLIANCE.CLIENTPAYORS CPY
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.SCHEDULES SCH
	    ON SCH.CLIENTID = CPY.CLIENTID
	 			AND SCH."DATE"::DATE <= ''2022-09-30''::DATE
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.PAYOR P
	    ON P.PAYORID = CPY.PAYORID
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.SERVICES SR
	    ON SR.SERVICECODE  = SCH.SERVICECODE
	LEFT JOIN  DISC_PROD.GENERATIONSALLIANCE.CLIENT C 
	    ON C.CLIENTID = CPY.CLIENTID 
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.CLIENTTYPE CT 
	    ON CT.CLIENTTYPEID = C.CLIENTTYPEID
	QUALIFY DENSE_RANK() OVER(PARTITION BY SCH.SCHEDULEID, CPY.CLIENTID 
					  	 ORDER BY IFF(NVL(SCH.PAYORID, 0) = CPY.PAYORID, 2, NVL(CPY.ISPRIMARY, 0)::INT) DESC
						  		, IFF(NVL(SCH.PAYORID, 0) = CPY.PAYORID, 2, NVL(CPY.CURRENTPAYOR, 0)::INT) DESC) = 1
), REVENUE_DATA_REPORT AS
(
	SELECT *     
	FROM DISC_PROD.GENERATIONSALLIANCE.CLEANBILLINGDETAIL -- The File received FROM Aggie
	QUALIFY DENSE_RANK() 
			OVER(PARTITION BY CLIENT, TIME_IN, TIME_OUT, CAREGIVER, RATE_CODE, HOURS, LOCATION 
			ORDER BY EXTRACTED_DATE DESC) = 1
), GENERATIONS_REVENUE_DATA AS
(
	SELECT DISTINCT MD5(''ALLIANCE'' || ''-'' || SCH.SCHEDULEID || ''-'' || ''-1'' || ''-'' || C.MASTER_ID || ''-'' || ''GENERATIONS'') AS REVENUE_KEY
			, SCH."DATE"::DATE AS REPORT_DATE
			, MD5(''ALLIANCE'' || ''-'' || TRIM(CL.LOCATIONID) || ''-'' || ''GENERATIONS'') AS BRANCH_KEY
			, MD5(''ALLIANCE'' || ''-'' || E.MASTER_ID  || ''-'' || ''GENERATIONS'') AS EMPLOYEE_KEY
			, DC.CLIENT_KEY AS CLIENT_KEY
			, NVL(CO.CONTRACT_KEY, MD5(''ALLIANCE'' || ''-PRIVATEPAY-'' || ''GENERATIONS'')) AS CONTRACT_KEY
			, MD5(''ALLIANCE'' || ''-'' || CO.PAYORNAME || ''-'' || SCH.SCHEDULEID || ''-'' || C.MASTER_ID || ''-'' || ''GENERATIONS'') AS INVOICE_KEY
			, 19 AS SOURCE_SYSTEM_ID
			, MD5(''ALLIANCE'' || ''-'' || NVL(CM.CASEMANAGERID, 0) || ''-'' || ''GENERATIONS'') AS SUPERVISOR_KEY
			, SCH."DATE"::DATE AS REVENUE_DATE 
			, RD.EXTRACTED_DATE::DATE AS PAYMENT_DATE 
			, BM.NAME AS BRANCH_NAME 
			, E.MASTER_ID AS EMPLOYEE_ID
			, CL.CLIENTID AS CLIENT_NUMBER
			, IFF(NVL(CO.PAYORID, S.SERVICECODE) IS NULL, ''-1'', CONCAT(NVL(CO.PAYORID, ''-1''),''-'',NVL(S.SERVICECODE, ''-1''))) AS CONTRACT_CODE
			, -1 AS INVOICE_NUMBER -- Can not get from ALGL Detail. Keep it AS -1
			, ''REGULAR'' AS INVOICE_TYPE
            , CO.BILL_UNIT_TYPE AS BILL_UNIT_TYPE
			, 1 AS NUMBER_OF_CLIENTS
			, ''ALLIANCE'' AS SYSTEM_CODE
			, NVL(SUP.MASTER_ID, ''-1'') AS SUPERVISOR_CODE 
			, SCH.SERVICECODE AS BILL_CODE
			, RD.HOURS AS INVOICE_HOURS
			, RD.ADJUSTED_RATE AS INVOICE_RATE
			, RD.ADJUSTED_REVENUE AS AMOUNT_BILLED
			, RD.ADJUSTED_REVENUE AS AMOUNT_COLLECTED-- Considering all are paid AS per Aggie''s response
			, (AMOUNT_BILLED-AMOUNT_COLLECTED) AS AMOUNT_OUTSTANDING
			, -1 AS ETL_TASK_KEY
			, -1 AS ETL_INSERTED_TASK_KEY
			, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
			, CURRENT_USER AS ETL_INSERTED_BY
			, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
	    	, CURRENT_USER AS ETL_LAST_UPDATED_BY
			, 0 AS ETL_DELETED_FLAG
	FROM REVENUE_DATA_REPORT RD
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.CLIENT CL
		ON CL.LASTNAME || '', '' || CL.FIRSTNAME = RD.CLIENT
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.EMPLOYEE EM
		ON EM.LASTNAME || '', '' || EM.FIRSTNAME =  RD.CAREGIVER
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.SCHEDULES SCH
		ON CL.CLIENTID = SCH.CLIENTID
			AND SCH.SOCIALSECNUM = EM.SOCIALSECURITYNUM 
			AND SCH.ISCONFIRMED = TRUE
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.SERVICES S
		ON S.SERVICECODE = SCH.SERVICECODE
			AND S.DESCRIPTION = RD.RATE_CODE
	INNER JOIN CLIENT C	
		ON C.CLIENTID = SCH.CLIENTID 
	INNER JOIN EMPLOYEE E 
		ON E.SOCIALSECURITYNUM = SCH.SOCIALSECNUM 
	INNER JOIN CONTRACT_MAPPING CO
	    ON CO.SCHEDULEID = SCH.SCHEDULEID
	INNER JOIN HAH.DIM_CLIENT DC
		ON DC.CLIENT_NUMBER = C.MASTER_ID
			AND DC.SOURCE_SYSTEM_ID = 19
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.CASEMANAGER CM 
		ON CM.CASEMANAGERID = CL.CASEMANAGERID
    LEFT JOIN SUPERVISOR SUP
		ON SUP.CASEMANAGERID = CM.CASEMANAGERID
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.VW_BRANCH_MAPPING BM
	    ON BM.LOCATION_ID = CL.LOCATIONID
	WHERE 1 = 1
			AND TO_TIME(RD.TIME_IN::DATETIME) = TO_TIME(SCH.STARTTIME) 
			AND TO_TIME(RD.TIME_OUT::DATETIME) = TO_TIME(SCH.ENDTIME)
			AND SCH."DATE"::DATE <= ''2022-09-30''
			AND DC.CLIENT_NUMBER  NOT IN (SELECT CLIENT_NUMBER FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_CLIENT_NUMBER WHERE SOURCE_SYSTEM_ID = 19 AND SYSTEM_CODE = ''GENERATIONS'')
)
SELECT *
FROM GENERATIONS_REVENUE_DATA;
RETURN ''SUCCESS'';
END';