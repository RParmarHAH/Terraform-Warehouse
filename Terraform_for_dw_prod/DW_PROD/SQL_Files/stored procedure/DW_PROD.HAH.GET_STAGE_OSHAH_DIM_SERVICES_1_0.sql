CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_DIM_SERVICES_1_0("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
Begin
--*****************************************************************************************************************************
-- NAME:  OSHAH_DIM_SERVICES_1_0
--
-- PURPOSE: Creates one row per SERVICE according to OSHAH
--
-- DEVELOPMENT LOG:
-- DATE        	AUTHOR                	NOTES:
-- --------    	-------------------   	-----------------------------------------------------------------------------------------------
-- 11/24/2022	Pankti Fadia    		Initial development
-- 07/12/2023   Sandesh Gosavi         update code to use config flag
-- 09/25/2023	Saurav Purohit			MS related pending changes
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.OSHAH_DIM_SERVICES_1_0
WITH STATES AS (
SELECT DISTINCT S.SERVICECODEID  ,C.STATE  FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES S
JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTS C
ON  S.CONTRACTID = C.LINKEDCONTRACTPAYERID
UNION ALL
SELECT DISTINCT S.SERVICECODEID  ,OFF.STATE  FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES S
JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYER_REPL PR
ON IFNULL(PR.CONTRACTID,PR.PAYERID) = S.ContractID 
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYEROFFICES PO ON PR.PAYERID= PO.PAYERID 
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL OFF ON OFF.OFFICEID = PO.OFFICEID
)
SELECT DISTINCT MD5(''OSHAH'' || ''-'' || SC.SERVICECODEID || ''-'' || ''HHAEXCHANGE'') AS SERVICE_KEY
		, CONCAT(''OSHAH - '', STATES.STATE) AS SYSTEM_CODE 
		, 17 AS SOURCE_SYSTEM_ID
		, SC.SERVICECODEID AS SERVICE_CODE_ID
		, UPPER(TRIM(SC.SERVICECODE)) AS NAME
		, NULL AS BILL_CODE_ID
		, NULL AS IS_EXPENCE
		, NULL AS IS_MULTIPLE
		, NULL AS OTHER_CODE
		, NULL AS DEFAULT_COST
		, NULL AS DEFAULT_PAY_UNIT_FLAG
		, NULL AS DEFAULT_BILL_UNIT_FLAG
		, NULL AS CATEGORY_ID
		, NULL AS PAYROLL_CODE
		, NULL AS DEFAULT_REIMBURSMENT
		, NULL AS WC
		, NULL AS SHIFT_PAY
		, NULL AS OT_PAY
		, NULL AS BILL_EXCLUDE_HOLIDAY
		, NULL AS PAY_EXCLUDED_HOLIDAY
		, NULL AS IS_CAT
		, NULL AS COMMISSION_RATE
		, NULL AS BONUS_POINTS
		, CASE WHEN UPPER(SC.STATUS) = ''ACTIVE'' THEN UPPER(''TRUE'' :: BOOLEAN) 
		  ELSE UPPER(''FALSE'' :: BOOLEAN) END AS ACTIVE
		, NULL AS REVENUE_CODE
		, NULL AS PAY
		, NULL AS POC_FIRST_BIL_LABLE_FLAG
		, NULL AS EXPENCE_TYPE_ID
		, NULL AS CREATED_DATE
		, NULL AS CREATED_USER
		, NULL AS MODIFIED_DATE
		, NULL AS MODIFIED_USER
		, NULL AS TS
		, NULL AS LIST_ITEM_TYPE
		, NULL AS RPT_GROUP_ID
		, NULL AS BRANCH_ID
		, NULL AS OVERRIDE_ID
		, NULL AS DESCRIPTION
		, NULL AS TAX_GROUP_ID
		, NULL AS LEGACY_ID
		, NULL AS LEGACY_BRANCH_ID
		, NULL AS ACCT_ID
		, NULL AS UPLOAD_TELEPHONY
		, NULL AS TELEPHONY_TASK_ID
		, NULL AS INCLUDE_EFT
		, NULL AS PROJECTED_AVG_BILL_VISIT
		, NULL AS PROJECTED_AVG_PAY_VISIT
		, NULL AS PROJECTED_AVG_PAY_HOURLY
		, NULL AS PROJECTED_AVG_BILL_HOURLY
		, NULL AS IS_COPY
		, NULL AS IS_WORKING
		, NULL AS DEDUCT_ARN
		, NULL AS LIVE_IN_RPT_HRS
		, NULL AS ACCT_CODE
		, NULL AS DISPLAY_ON_CLIENT_PORTAL
		, NULL AS DISPLAY_ON_CAREGIVER_PORTAL
		, NULL AS THERAPY_COUNTING_TYPE
		, NULL AS MEDICARE_DISCIPLINE
		, NULL AS DOC_TYPE
		, NULL AS IS_MULTIPLE_SERVICE
		, NULL AS INSERT_DATE
		, NULL AS UPDATE_DATE
		, FALSE AS DELETED_FLAG
		, SC.SYS_CHANGE_VERSION AS SYS_CHANGE_VERSION
		, SC.SYS_CHANGE_OPERATION AS SYS_CHANGE_OPERATION
		, RP.REVENUE_CATEGORY AS REVENUE_CATEGORY
		, RP.REVENUE_SUBCATEGORY_CODE AS REVENUE_SUBCATEGORY_CODE
		, RP.REVENUE_SUBCATEGORY_NAME AS  REVENUE_SUBCATEGORY_NAME
		, :STR_ETL_TASK_KEY AS ETL_TASK_KEY
		, :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
 		, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
		, CURRENT_USER as ETL_INSERTED_BY
		, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
		, CURRENT_USER as ETL_LAST_UPDATED_BY
		, 0 AS ETL_DELETED_FLAG
		, 0 AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.VW_OSHAH_REVENUE RP ON SC.SERVICECODEID = RP.SERVICECODEID 
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.Contracts c  on SC.ContractID = c.ContractID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.Payer_REPL P ON
IFNULL(P.CONTRACTID,P.PAYERID) = SC.ContractID 
LEFT JOIN STATES ON SC.SERVICECODEID = STATES.SERVICECODEID
WHERE STATES.STATE IN  (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE);
RETURN ''SUCCESS'';
end;
';