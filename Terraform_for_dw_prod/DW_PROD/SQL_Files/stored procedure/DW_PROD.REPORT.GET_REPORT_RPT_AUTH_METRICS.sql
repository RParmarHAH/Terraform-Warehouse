CREATE OR REPLACE PROCEDURE DW_PROD.REPORT.GET_REPORT_RPT_AUTH_METRICS("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN
--*****************************************************************************************************************************
-- NAME:  AUTH METRICS 
--
-- PURPOSE: FOR RCM
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 14/04/2023  Mitul Panchal            DEVELOPMENT FOR AUTH METRICS REQUIRED IN RCM - Added Intake CTE for some columns
--*****************************************************************************************************************************
	INSERT OVERWRITE INTO DW_PROD.REPORT.RPT_AUTH_METRICS
	(REPORT_DATE,BRANCH_KEY,BRANCH_NAME,OFFICE_CITY,OFFICE_STATE_CODE,STATE_BRANCH,REGION_NAME,CLIENT_KEY,CLIENT_NUMBER,CONTRACT_KEY,CONTRACT_CODE,
	SYSTEM_CODE,HOURS_SERVED,SCHEDULE_HOURS,HOURS_AUTHORIZED,OVER_AUTHED_CONTRACT,UNUSED_HOURS ,REVENUE_CATEGORY,PRE_AUTH_NUMBER,BEGIN_SERVICE_DATE,
	END_SERVICE_DATE,LATEST_AUTH_BEGIN_DATE,LATEST_AUTH_END_DATE,SOURCE_SYSTEM_ID,ORIGINAL_SOURCE_SYSTEM_ID,EXP_AUTHS_DAYS,EXP_AUTHS)
	WITH INTAKES AS (
	SELECT DISTINCT  DATE_TRUNC(MONTH, INTAKE.REPORT_DATE) AS REPORT_DATE, INTAKE.CLIENT_KEY, INTAKE.CONTRACT_KEY,SYSTEM_CODE,
	PRE_AUTH_NUMBER,
	 MIN(BEGIN_SERVICE_DATE) BEGIN_SERVICE_DATE,MAX(END_SERVICE_DATE) END_SERVICE_DATE,MAX(LATEST_AUTH_BEGIN_DATE) LATEST_AUTH_BEGIN_DATE,MAX(LATEST_AUTH_END_DATE) LATEST_AUTH_END_DATE,
	NVL(SUM(INTAKE.HOURS_AUTHORIZED), 0) HOURS_AUTHORIZED, NVL(SUM(INTAKE.HOURS_AUTHORIZED_NON_ADJUSTED), 0) HOURS_AUTHORIZED_NON_ADJUSTED
	FROM DW_PROD.INTEGRATION.FACT_INTAKE_MERGED INTAKE
	GROUP BY DATE_TRUNC(MONTH, INTAKE.REPORT_DATE), INTAKE.CLIENT_KEY, INTAKE.CLIENT_NUMBER, INTAKE.CONTRACT_KEY,PRE_AUTH_NUMBER,SYSTEM_CODE 
	)
	SELECT 
	UL.PERIOD_BEGIN_DATE AS REPORT_DATE,
	UL.ORIGINAL_BRANCH_KEY AS BRANCH_KEY,
	BR.BRANCH_NAME,
	BR.OFFICE_CITY,
	BR.OFFICE_STATE_CODE, 
	CONCAT(nvl(BR.OFFICE_STATE_CODE,''''), '' - '', nvl(BR.BRANCH_NAME,'''')) AS STATE_BRANCH,
	BR.REGION_NAME, 
	UL.ORIGINAL_CLIENT_KEY AS CLIENT_KEY, 
	UL.CLIENT_NUMBER,
	UL.CONTRACT_KEY, 
	UL.CONTRACT_CODE, 
	INTAKE.SYSTEM_CODE AS SYSTEM_CODE,
	UL.HOURS_SERVED,
	UL.HOURS_SCHEDULED AS SCHEDULE_HOURS,
	UL.HOURS_AUTHORIZED,
	UL.OVER_AUTHED AS OVER_AUTHED_CONTRACT,
	UL.OVER_AUTHED_HOURS AS UNUSED_HOURS,
	CT.REVENUE_CATEGORY,
	INTAKE.PRE_AUTH_NUMBER AS PRE_AUTH_NUMBER,	
	INTAKE.BEGIN_SERVICE_DATE AS BEGIN_SERVICE_DATE, 
	INTAKE.END_SERVICE_DATE AS END_SERVICE_DATE,		
	INTAKE.LATEST_AUTH_BEGIN_DATE AS LATEST_AUTH_BEGIN_DATE,		           
	INTAKE.LATEST_AUTH_END_DATE AS LATEST_AUTH_END_DATE,
	UL.SOURCE_SYSTEM_ID,
	UL.ORIGINAL_SOURCE_SYSTEM_ID,
	DATEDIFF(DAY,CURRENT_DATE(),INTAKE.LATEST_AUTH_END_DATE) AS EXP_AUTHS_DAYS,
	IFF(INTAKE.LATEST_AUTH_END_DATE IS NOT NULL,
	CASE 
		WHEN (DATEDIFF(DAY,CURRENT_DATE(),INTAKE.LATEST_AUTH_END_DATE)<=15 AND DATEDIFF(DAY,CURRENT_DATE(),INTAKE.LATEST_AUTH_END_DATE) >=0 ) 
		THEN ''EXPIRING''
		WHEN DATEDIFF(DAY,CURRENT_DATE(),INTAKE.LATEST_AUTH_END_DATE)<0 
		THEN ''EXPIRED''
		ELSE ''INFORCE''
	END , ''NA'') AS EXP_AUTHS
	FROM REPORT.UTILIZATION UL
	LEFT JOIN INTEGRATION.DIM_BRANCH_MERGED BR 
	ON BR.ORIGINAL_BRANCH_KEY = UL.ORIGINAL_BRANCH_KEY 
	LEFT JOIN HAH.DIM_CONTRACT CT 
	ON CT.CONTRACT_KEY = UL.CONTRACT_KEY
	LEFT JOIN INTAKES INTAKE
	ON INTAKE.REPORT_DATE = UL.PERIOD_BEGIN_DATE AND INTAKE.CLIENT_KEY = UL.CLIENT_KEY AND INTAKE.CONTRACT_KEY = UL.CONTRACT_KEY;
 END;
 ';