CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OPENSYSTEMS_FACT_INVOICE_TRANSACTIONS("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- NAME: OPENSYSTEMS_FACT_INVOICE_TRANSACTIONS
--
-- DEVELOPMENT LOG:
-- DATE         AUTHOR              NOTES:
-- --------     ------------------- -----------------------------------------------------------------------------------------------
-- 12/28/23 	PREETI SHARMA 		Initial development

--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.OPENSYSTEMS_FACT_INVOICE_TRANSACTIONS 
SELECT DISTINCT 
MD5(''OPENSYSTEMS'' || ''-'' || PAY.PAYMENTID ::STRING || ''-'' || ''OPENSYSTEMS'') AS TRANSACTION_KEY
,PAY.PAYMENTID  AS TRANSACTION_NUMBER
,MD5(''OPENSYSTEMS'' || ''-'' || INVOICE.INVOICEHEADERID || ''-'' || PAY.INVOICEDETAILID || ''-'' || ''HHAEXCHANGE'') AS REVENUE_KEY
,MD5(CONCAT(''OPENSYSTEMS'') || ''-'' || PAY.VISITID || ''-'' || ''HHAEXCHANGE'') AS VISIT_KEY
,MD5(''OPENSYSTEMS'' || ''-'' || NVL(TO_VARCHAR(TR."TRANSACTIONTYPE"),''Unknown'') || ''-'' || ''OPENSYSTEMS'') AS TRANSACTION_TYPE_KEY
,PAY.PAIDAMOUNT AS AMOUNT
,NULL AS TRANSACTION_CREATED
,NULL AS TRANSACTION_POSTED
,NULL AS TRANSACTION_DATE
,NULL AS FINAL_TRANSACTION_DATE
,CAST(CHEC.CHECKNUMBER AS VARCHAR) AS CHECK_NUMBER
,DATE(CHEC.CHECKDATE) AS CHECK_DATE 
,DATE(CHEC.depositdate) AS DEPOSIT_DATE
,DATE(CHEC_DET.POSTEDDATE) AS POSTED_DATE
,CONCAT(''OPENSYSTEMS - '', NVL(TRIM(OFFICE.STATE),''NULL'')) AS SYSTEM_CODE 
,17 AS SOURCE_SYSTEM_ID
,:STR_ETL_TASK_KEY AS ETL_TASK_KEY
,:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY                     
,convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE
,CURRENT_USER as ETL_INSERTED_BY
,convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE
,CURRENT_USER as ETL_LAST_UPDATED_BY
,0 as ETL_DELETED_FLAG
FROM "DISC_PROD"."HHAEXCHANGEOPENSYSTEMS"."PAYMENTS" pay
LEFT JOIN (SELECT AGENCYID,VISITID,PATIENTID, first_value(TRANSACTIONTYPE) OVER 
(PARTITION BY AGENCYID,PATIENTID,VISITID ORDER BY AGENCYID,PATIENTID,VISITID) AS TRANSACTIONTYPE
FROM "DISC_PROD"."HHAEXCHANGEOPENSYSTEMS".TRANSACTIONS_REPL
WHERE TRANSACTIONTYPE != ''Invoice'') TR
ON TR.AGENCYID = PAY.AGENCYID AND TR.VISITID = PAY.VISITID AND TR.PATIENTID = PAY.PATIENTID
LEFT JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.TBLINVOICEDETAILS_REPL INVOICE
ON INVOICE.INVOICEDETAILID  = PAY.INVOICEDETAILID  
LEFT JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.OFFICE_OFFICES_REPL OFFICE
ON INVOICE.OFFICEID = OFFICE.OFFICEID
LEFT JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.BILLINGCHECKS CHEC
ON PAY.CHECKID = CHEC.CHECKID AND PAY.CHECKNUMBER = CHEC.CHECKNUMBER 
LEFT JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.BILLING_CHECKDETAILS_REPL CHEC_DET
ON CHEC.CHECKID = CHEC_DET.CHECKID AND CHEC.CHECKNUMBER = CHEC_DET.CHECKNUMBER 
;  
RETURN ''SUCCESS'';
END;
';