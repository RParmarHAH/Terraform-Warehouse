CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_EMPEONEDISON_FACT_PAYROLL_DETAILS("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN

--*****************************************************************************************************************************
-- NAME:  EMPEONEDISON_FACT_PAYROLL_DETAILS
--
-- PURPOSE: Creates one row per PAYCODE according to EMPEONEDISON
--
-- DEVELOPMENT LOG:
-- DATE         AUTHOR              					NOTES:
-- --------     -----------------------------------     --------------------------------------------------------------------------
-- 10/06/22		Dhaval Vachheta/Jigar Prajapati			Initial development
	
--*****************************************************************************************************************************
    
	INSERT OVERWRITE INTO STAGE.EMPEONEDISON_FACT_PAYROLL_DETAILS
	WITH EMPLOYEE AS
	(
		SELECT *
		FROM (SELECT CO,
			  		 TRIM(ID) AS CAREGIVER_ID,
			 	     MASTER_ID, 
			  	     MD5(''EMPEON'' || MASTER_ID || ''-'' || ''EMPEONEDISON'') AS EMPLOYEE_KEY
			  FROM DISC_DEDUPE_PROD.EMPEONEDISON.EMPLOYEE_MASTER_LIST)
		UNION
		SELECT *
		FROM (SELECT CO AS CO, 
					 TRIM(CAREGIVER_ID) AS CAREGIVER_ID, 
					 MASTER_ID, MD5(''EMPEON'' || MASTER_ID || ''-'' || ''EMPEONEDISON'') AS EMPLOYEE_KEY
		        FROM DISC_DEDUPE_PROD.EMPEONEDISON.EMPLOYEE_MATCH_LIST EML
		        WHERE CO || TRIM(CAREGIVER_ID) NOT IN (SELECT CO || TRIM(ID) AS MASTER_ID  FROM DISC_DEDUPE_PROD.EMPEONEDISON.EMPLOYEE_MASTER_LIST)
	)
	),
	-- CTE For PAYCODE
	PAYCODE AS
	(
		SELECT DISTINCT CO AS CO,
			   DCODE AS PAYCODE,
			   DESCRIPTION AS PAYCODE_DESCRIPTION,
			   DEDTYPE AS PAYCODE_TYPE
		FROM DISC_PROD.EMPEONEDISON.CDED
		UNION
		SELECT DISTINCT CO AS CO,
			   ECODE AS PAYCODE,
			   DESCRIPTION AS PAYCODE_DESCRIPTION,
			   EARNTYPE AS PAYCODE_TYPE
		FROM DISC_PROD.EMPEONEDISON.CEARN
	),
	REPORT_DATE AS
	(
		SELECT DISTINCT p.TRANS,
			   p.ID,
			   p.CO,
			   p.CHECKNUMBER,
			   MAX(p.CHECKDATE) AS REPORT_DATE
		FROM  DISC_PROD.EMPEONEDISON.EPAYHIST AS p
		GROUP BY p.TRANS, p.ID, p.CO, p.CHECKNUMBER
	)
	SELECT DISTINCT
		MD5(22 || ''-'' || PD.TRANS || TRIM(COALESCE(EMP.MASTER_ID, PH.ID)) || NVL(PAYCODE_TYPE, ''UNKNOWN'') || PD.SUBTRANS || ''EMPEONEDISON'') AS PAYROLL_DETAIL_KEY ,
		MD5(PH.TRANS || ''-'' || TRIM(COALESCE(EMP.MASTER_ID, PH.ID)) || ''EMPEONEDISON'') AS PAYROLL_KEY ,
		RD.REPORT_DATE::DATE AS REPORT_DATE ,
		COALESCE(EMP.EMPLOYEE_KEY, MD5(''EMPEON'' || PH.ID || ''-'' || ''EMPEONEDISON'')) AS EMPLOYEE_KEY ,
		MD5(22 || ''-'' || TRIM(EMP.CO) || ''-'' || ''EMPEONEDISON'') AS BRANCH_KEY ,
		22 AS SOURCE_SYSTEM_ID ,
		RD.REPORT_DATE::DATE AS PAYROLL_DATE,
		TRIM(RD.ID) AS EMPLOYEE_ID ,
		NULL AS BRANCH_NAME,
		''EMPEONEDISON'' || ''-'' || TRIM(PD.CO) AS SYSTEM_CODE ,
		PD.BEGINDATE::DATE AS PAY_PERIOD_START_DATE ,
		PD.ENDDATE::DATE AS PAY_PERIOD_END_DATE ,
		RD.CHECKNUMBER AS CHECK_NUMBER ,
		DETCODE AS PAY_CODE ,
		PAYCODE_DESCRIPTION AS PAY_CODE_DESCRIPTION ,
		DET AS PAY_CODE_TYPE ,
		PAYCODE_TYPE AS PAY_CODE_TYPE_DESCRIPTION ,
		NULL AS PAY_CODE_CATEGORY ,
		REPLACE(PD.HOURS, ''-'') AS NUMBER_OF_UNITS ,
		''H'' AS UNIT_TYPE_CODE ,
		''Hourly'' AS UNIT_TYPE_DESCRIPTION ,
		REPLACE(RATE, ''-'') AS RATE ,
		REPLACE(AMOUNT, ''-'') AS AMOUNT,
			-1 AS ETL_TASK_KEY,
			-1 AS ETL_INSERTED_TASK_KEY,
			convert_timezone(''UTC'',
			CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
			CURRENT_USER AS ETL_INSERTED_BY,
			convert_timezone(''UTC'',
			CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
			CURRENT_USER AS ETL_LAST_UPDATED_BY,
			FALSE AS ETL_DELETED_FLAG
	FROM DISC_PROD.EMPEONEDISON.EPAYHISTDETAIL PD
	LEFT JOIN REPORT_DATE RD ON
		RD.TRANS = PD.TRANS
	LEFT JOIN PAYCODE P ON
		P.PAYCODE = PD.DETCODE
		AND P.CO = RD.CO
	LEFT JOIN DISC_PROD.EMPEONEDISON.EPAYHIST PH
		ON PH.TRANS = PD.TRANS
	LEFT JOIN EMPLOYEE EMP
		ON TRIM(EMP.CO)||TRIM(EMP.CAREGIVER_ID) = TRIM(PH.CO)||TRIM(PH.ID);
END;
';