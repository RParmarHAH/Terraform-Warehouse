CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OPENSYSTEMS_DIM_BRANCH("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
begin
--*****************************************************************************************************************************
-- NAME:  OPEN SYSTEMS DIM Branch
--
-- PURPOSE: Populates Stage Dim Branch for OPEN SYSTEMS 
--			
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 04/11/22    Sanket Jain           Initial version
-- 05/29/23	   Shikhar Saxena		 Changed the logic to add SOURCE_SYSTEM_TYPE field
--***************************************************************************************************************************
INSERT OVERWRITE INTO DW_PROD.STAGE.OPENSYSTEMS_DIM_BRANCH
WITH OPENSYSTEMS_DATA AS (
   	 SELECT MD5(''OPENSYSTEMS'' || ''-'' || OFFICES.OFFICEID || ''-'' || ''HHAEXCHANGE'') AS BRANCH_KEY,
   	 UPPER(TRIM(OFFICES.OFFICENAME)) AS BRANCH_NAME,
   	 CONCAT(''OPENSYSTEMS - '',OFFICES.STATE) AS SYSTEM_CODE,
   	 17 AS SOURCE_SYSTEM_ID,
   	 OFFICES.OFFICEID AS OFFICE_NUMBER,
   	 OFFICES.OFFICECODE AS OFFICE_CODE,
   	 UPPER(TRIM(OFFICES.OFFICENAME)) AS OFFICE_NAME,
   	 COALESCE(OFFICES.ZIPCODE,OFFICES.AGENCYZIPCODE,NULL) AS OFFICE_ZIP,
   	 OFFICES.ADDRESS1 AS OFFICE_ADDRESS1,
   	 OFFICES.ADDRESS2 AS OFFICE_ADDRESS2,
   	 UPPER(TRIM(OFFICES.CITY)) AS OFFICE_CITY,
   	 OFFICES.PHONE AS OFFICE_PHONE,
   	 OFFICES.PHONE2 AS OFFICE_FAX,
   	 UPPER(TRIM(OFFICES.STATE)) AS STATE,
   	 OFFICES.ACTIVE AS OFFICE_ACTIVE,
   	 CASE 
		WHEN UPPER(TRIM(OFFICES.CITY)) = ''WILMINGTON'' THEN ''DE – NORTH''
		WHEN UPPER(TRIM(BRANCH_NAME)) ILIKE ANY (''%HARRISBURG%'',''%Reading%'',''%YORK%'',''PS%'') THEN ''PA - CENTRAL''
		WHEN UPPER(TRIM(BRANCH_NAME)) ILIKE ANY (''%Bethlehem%'') THEN ''PA - EAST''
		WHEN UPPER(TRIM(BRANCH_NAME)) ILIKE ANY (''%Scranton%'') THEN ''PA - NORTHEAST''
		WHEN UPPER(TRIM(BRANCH_NAME)) ILIKE ANY (''%Pittsburgh Behavioral%'',''%Pittsburgh North%'',''%ERIE%'') THEN ''PA - NORTHWEST''
		WHEN UPPER(TRIM(BRANCH_NAME)) ILIKE ANY (''%Pittsburgh South%'') THEN ''PA - SOUTHWEST''
		WHEN UPPER(TRIM(BRANCH_NAME)) ILIKE ANY (''Open Systems Healthcare, Inc.'',''NE Philadelphia'',''Bala Cynwyd'') THEN ''PA - PHILADELPHIA''
		WHEN UPPER(TRIM(BRANCH_NAME)) ILIKE ANY (''BALA BEHAVIORAL HEALTH'',''BALA BH BSS'') THEN ''PA - SOUTHEAST''
	 END  AS REGION_NAME
     FROM "DISC_PROD"."HHAEXCHANGEOPENSYSTEMS"."OFFICE_OFFICES_REPL" AS OFFICES
),   
FOR_BSL AS (
   	 SELECT V.OFFICEID,VOR.REVENUE_SUBCATEGORY_CODE ,COunt(*) AS cnt,
   	 ROW_NUMBER() OVER(PARTITION BY V.OFFICEID ORDER BY cnt DESC) RN
   	 FROM DISC_PROD.HHAEXCHANGEOPENSYSTEMS.visits v
   	 JOIN DISC_PROD.HHAEXCHANGEOPENSYSTEMS.VW_OPENSYSTEMS_REVENUE VOR on
   	 vor.SERVICECODE = v.PRIMARYSERVICECODE
   	 GROUP BY 1,2 QUALIFY RN = 1
),
--NO RISKCONNECT_HIERARCHY mapping as of now
RISKCONNECT_HIERARCHY AS (
   	 SELECT * FROM "DISC_PROD"."STAGE"."RISKCONNECT_HIERARCHY"
),
--NO HR_OFFICE_MAPPING mapping as of now
HR_OFFICE_MAPPING AS (
   	 SELECT * FROM "DISC_PROD"."STAGE"."HR_OFFICE_MAPPING"
)   	 
SELECT OPENSYSTEMS_OFFICES.BRANCH_KEY AS BRANCH_KEY,
   	 OPENSYSTEMS_OFFICES.BRANCH_NAME AS BRANCH_NAME,
   	 OPENSYSTEMS_OFFICES.SYSTEM_CODE AS SYSTEM_CODE,
   	 OPENSYSTEMS_OFFICES.SOURCE_SYSTEM_ID AS SOURCE_SYSTEM_ID,
	 SOURCE_SYSTEM.SOURCE_SYSTEM_TYPE,
   	 OPENSYSTEMS_OFFICES.OFFICE_NUMBER AS OFFICE_NUMBER,
   	 OPENSYSTEMS_OFFICES.OFFICE_CODE AS OFFICE_CODE,
   	 OPENSYSTEMS_OFFICES.OFFICE_NAME AS OFFICE_NAME,
   	 OPENSYSTEMS_OFFICES.OFFICE_NAME AS OFFICE_NAME_ALT,
   	 OPENSYSTEMS_OFFICES.OFFICE_NAME AS DEPARTMENT_NAME,
   	 FB.REVENUE_SUBCATEGORY_CODE AS BRANCH_SERVICE_LINE,
   	 TRUE AS PARENT_FLAG,
   	 OPENSYSTEMS_OFFICES.BRANCH_KEY AS PARENT_BRANCH_KEY,
   	 OPENSYSTEMS_OFFICES.OFFICE_NUMBER AS PARENT_OFFICE_NUMBER,
   	 OPENSYSTEMS_OFFICES.OFFICE_CODE AS PARENT_OFFICE_CODE,
   	 OPENSYSTEMS_OFFICES.STATE || '' - '' || OPENSYSTEMS_OFFICES.BRANCH_NAME || '' (OPENSYSTEMS)'' AS PARENT_BRANCH_NAME,
   	 NULLIF(UPPER(TRIM(OPENSYSTEMS_OFFICES.OFFICE_ADDRESS1)), '''') AS OFFICE_ADDRESS1,
   	 NULLIF(UPPER(TRIM(OPENSYSTEMS_OFFICES.OFFICE_ADDRESS2)), '''' ) AS OFFICE_ADDRESS2,
   	 UPPER(TRIM(OPENSYSTEMS_OFFICES.OFFICE_CITY)) AS OFFICE_CITY,
   	 OPENSYSTEMS_OFFICES.STATE AS OFFICE_STATE_CODE,
   	 OPENSYSTEMS_OFFICES.OFFICE_ZIP AS OFFICE_ZIP,
   	 NULLIF(OPENSYSTEMS_OFFICES.OFFICE_PHONE,'''') AS OFFICE_PHONE,
   	 NULLIF(OPENSYSTEMS_OFFICES.OFFICE_PHONE,'''') AS OFFICE_TOLL_FREE_PHONE,
   	 NULLIF(OPENSYSTEMS_OFFICES.OFFICE_FAX,'''') AS OFFICE_FAX,
   	 OPENSYSTEMS_OFFICES.STATE || '' - '' || OPENSYSTEMS_OFFICES.BRANCH_NAME || '' (OPENSYSTEMS)'' AS DETAILED_OFFICE_NAME,    
     NULL AS REGION_NUMBER,
   	 OPENSYSTEMS_OFFICES.REGION_NAME AS REGION_NAME,
   	 NULL AS REGION_MANAGER,
   	 NULL AS REGION_MANAGER_EMPLOYEE_KEY,
   	 NULL AS SUBREGION_NAME,
   	 NULL AS Primary_Branch_Manager_Name,
   	 NULL AS PRIMARY_BRANCH_EMAIL,
   	 NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
   	 NULL AS Secondary_Branch_Manager_Name,
   	 NULL AS SECONDARY_BRANCH_EMAIL,
   	 NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
   	 RISKCONNECT.NODE_KEY AS RISKCONNECT_NODE_KEY,
   	 RISKCONNECT.NODE_NAME AS RISKCONNECT_NAME,
   	 HR.HR_OFFICE_NUMBER AS HR_OFFICE_NUMBER,
   	 HR.HR_OFFICE_NAME AS HR_OFFICE_NAME,
   	 TO_BOOLEAN(OPENSYSTEMS_OFFICES.OFFICE_ACTIVE) AS ACTIVE_FLAG,
   	 TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
   	 TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
     :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
   	 :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
   	 CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
     CURRENT_USER AS ETL_INSERTED_BY,
     CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
     CURRENT_USER AS ETL_LAST_UPDATED_BY,
     FALSE AS ETL_DELETED_FLAG,
     FALSE AS ETL_INFERRED_MEMBER_FLAG
FROM OPENSYSTEMS_DATA AS OPENSYSTEMS_OFFICES
      Left JOIN FOR_BSL FB
   	  ON OPENSYSTEMS_OFFICES.OFFICE_NUMBER = FB.OFFICEID
     LEFT JOIN RISKCONNECT_HIERARCHY AS RISKCONNECT
   	  ON RISKCONNECT.PARENT_LEVEL = 2 AND RISKCONNECT.STATE = OPENSYSTEMS_OFFICES.STATE
   	  AND TRY_CAST(RISKCONNECT.OFFICE_NUMBER AS INTEGER) = OPENSYSTEMS_OFFICES.OFFICE_NUMBER
     LEFT  JOIN HR_OFFICE_MAPPING AS HR
   	  ON TRIM(HR.OFFICE_CODE) = TRIM(OPENSYSTEMS_OFFICES.OFFICE_CODE) AND TRIM(HR.STATE) = OPENSYSTEMS_OFFICES.STATE
	 LEFT JOIN HAH.DIM_SOURCE_SYSTEM AS SOURCE_SYSTEM ON OPENSYSTEMS_OFFICES.SOURCE_SYSTEM_ID = SOURCE_SYSTEM.SOURCE_SYSTEM_ID;
RETURN ''SUCCESS'';
end;
';