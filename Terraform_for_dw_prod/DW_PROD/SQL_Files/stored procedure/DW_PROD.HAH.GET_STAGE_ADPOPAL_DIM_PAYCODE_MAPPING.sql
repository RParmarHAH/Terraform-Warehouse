CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ADPOPAL_DIM_PAYCODE_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN

--*****************************************************************************************************************************
-- NAME: ADPOPAL_DIM_PAYCODE_MAPPING
--
-- PURPOSE: Creates one row for each database (DB), paycode and assigns a paycode category according to ADP-OPAL
--
-- DEVELOPMENT LOG:
-- DATE				AUTHOR                					NOTES:
-- ----------		--------------------------------		-------------------------------------------------------------------
-- 27/12/2022		Aditya Shukla							Initial Development
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.ADPOPAL_DIM_PAYCODE_MAPPING 

WITH PAYCODE_USAGE_DATES AS (
	SELECT DISTINCT 
		COMPANY_CODE,
		WORKED_IN_STATE,
		PAYCODES AS PAYCODE,
		COUNT(FILE_NUMBER) AS NUMBER_EMPLOYEES_USED,
		MIN(PAY_DATE::DATE) AS FIRST_USED_DATE,
		MAX(PAY_DATE::DATE) AS MOST_RECENT_USED_DATE
	FROM DISC_PROD.ADP.OPALPAYROLLDETAIL
	GROUP BY 1, 2, 3
)
SELECT DISTINCT 
	MD5(18 || PAYCODES || COALESCE(DETAIL.WORKED_IN_STATE, ''UNKNOWN'') || DETAIL.COMPANY_CODE || ''OPAL'') AS PAYCODE_MAPPING_KEY,
	18 AS SOURCE_SYSTEM_ID,
	''ADP-OPAL-'' || DETAIL.COMPANY_CODE AS SYSTEM_CODE,
	DETAIL.WORKED_IN_STATE AS STATE_CODE,
--	PAYCODES AS PAYCODES,
	CASE WHEN PAYCODES LIKE ''ADDITIONAL_EARNING%'' 
		THEN SPLIT_PART(PAYCODES, ''_'', 4)
		WHEN PAYCODES LIKE ''VOLUNTARY_DEDUCTION%''
		THEN SPLIT_PART(PAYCODES, ''_'', 3)
		WHEN PAYCODES IN (''FEDERAL_INCOME_EMPLOYEE_TAX'', ''LOCAL_4_EMPLOYEE_TAX'', ''LOCAL_5_EMPLOYEE_TAX'', ''MEDICARE_SURTAX_EMPLOYEE_TAX'', ''SOCIAL_SECURITY_EMPLOYEE_TAX'', ''SUI_SDI_EMPLOYEE_TAX'')
		THEN SPLIT_PART(PAYCODES, ''_'', 1) || '' '' || SPLIT_PART(PAYCODES, ''_'', 2)
		WHEN PAYCODES IN (''LIVED_IN_LOCAL_EMPLOYEE_TAX'', ''LIVED_IN_STATE_EMPLOYEE_TAX'', ''FAMILY_LEAVE_INSURANCE_EMPLOYEE_TAX'', ''WORKED_IN_LOCAL_EMPLOYEE_TAX'', ''WORKED_IN_STATE_EMPLOYEE_TAX'')
		THEN SPLIT_PART(PAYCODES, ''_'', 1) || '' '' || SPLIT_PART(PAYCODES, ''_'', 2) || '' '' || SPLIT_PART(PAYCODES, ''_'', 3)
		WHEN PAYCODES IN (''MEDICARE_EMPLOYEE_TAX'', ''SDI_EMPLOYEE_TAX'', ''SUI_EMPLOYEE_TAX'')
		THEN SPLIT_PART(PAYCODES, ''_'', 1)
	ELSE NULL
	END AS PAY_CODE,
	UPPER(COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, 
		NULLIF(CASE WHEN PAYCODES LIKE ''ADDITIONAL_EARNING%''
					THEN SPLIT_PART(PAYCODES, ''_'', 5) || '' '' || SPLIT_PART(PAYCODES, ''_'', 6)
					WHEN PAYCODES LIKE ''VOLUNTARY_DEDUCTION%''
					THEN SPLIT_PART(PAYCODES, ''_'', 4) || '' '' || SPLIT_PART(PAYCODES, ''_'', 5)
					WHEN PAYCODES IN (''FEDERAL_INCOME_EMPLOYEE_TAX'', ''LOCAL_4_EMPLOYEE_TAX'', ''LOCAL_5_EMPLOYEE_TAX'', ''MEDICARE_SURTAX_EMPLOYEE_TAX'', ''SOCIAL_SECURITY_EMPLOYEE_TAX'', ''SUI_SDI_EMPLOYEE_TAX'')
					THEN SPLIT_PART(PAYCODES, ''_'', 3) || '' '' || SPLIT_PART(PAYCODES, ''_'', 4)
					WHEN PAYCODES IN (''LIVED_IN_LOCAL_EMPLOYEE_TAX'', ''LIVED_IN_STATE_EMPLOYEE_TAX'', ''FAMILY_LEAVE_INSURANCE_EMPLOYEE_TAX'', ''WORKED_IN_LOCAL_EMPLOYEE_TAX'', ''WORKED_IN_STATE_EMPLOYEE_TAX'')
					THEN SPLIT_PART(PAYCODES, ''_'', 4) || '' '' || SPLIT_PART(PAYCODES, ''_'', 5)
					WHEN PAYCODES IN (''MEDICARE_EMPLOYEE_TAX'', ''SDI_EMPLOYEE_TAX'', ''SUI_EMPLOYEE_TAX'')
					THEN SPLIT_PART(PAYCODES, ''_'', 2) || '' '' || SPLIT_PART(PAYCODES, ''_'', 3)
				END, '' '')
			)) AS PAY_CODE_DESCRIPTION,
	UPPER(PAYCODE.PAY_CODE_TYPE) AS PAY_CODE_TYPE,
	CASE WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%BONUS%'') THEN ''BONUS''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%PTO%'', ''%VAC%'')THEN ''PTO''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%HOLID%'') THEN ''HOLIDAY''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%TRAIN%'') THEN ''TRAINING''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%SICK%'') THEN ''SICK''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%ON%CALL%'') THEN ''ON CALL''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%TRAVEL%TIME%'') THEN ''TRAVEL TIME''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%VISION%'', ''%LIFE%INS%'', ''%HSA%'', ''%401K%'', ''%GARNISH%'', ''%LOAN%'') OR PAYCODES LIKE ''%STD%'' THEN ''BENEFITS & DEDUCTIONS''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%SEVER%'') THEN ''ADJUSTMENT''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%TRANS%'', ''%REG%'') THEN ''REGULAR PAY''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%REIMB%'') OR PAY_CODE_TYPE ILIKE ''%REIMB%'' THEN ''REIMBURSEMENT''
         WHEN COALESCE(PAYCODE.PAY_CODE_DESCRIPTION, DETAIL.PAYCODES) ILIKE ANY (''%TAX%'') THEN ''TAX''
    END AS PAY_CODE_CATEGORY,
	NULL AS FINANCE_CATEGORY,
	NULL AS REVENUE_CATEGORY,
	NULL AS REVENUE_SUBCATEGORY_CODE,
	NULL AS REVENUE_SUBCATEGORY_NAME,
	PUD.FIRST_USED_DATE AS FIRST_USED_DATE,
	PUD.MOST_RECENT_USED_DATE AS MOST_RECENT_USED_DATE,
	PUD.NUMBER_EMPLOYEES_USED AS NUMBER_EMPLOYEES_USED,
	TRUE AS ACTIVE_FLAG,
	NULL AS ADMIN_PAY_RATE_FLAG,
	NULL AS FIELD_PAY_RATE_FLAG,
	NULL AS INCLUDE_SALARY_PAYRATE_CALC_FLAG,
	NULL AS INCLUDE_FULL_TIME_HOURS_CALC_FLAG,
		:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
		:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
		CURRENT_DATE() AS ETL_INSERTED_DATE,
		CURRENT_USER() AS ETL_INSERTED_BY,
		CURRENT_DATE() AS ETL_LAST_UPDATED_DATE,
		CURRENT_USER() AS ETL_LAST_UPDATED_BY,
		FALSE ETL_DELETED_FLAG
FROM DISC_PROD.ADP.OPALPAYROLLDETAIL DETAIL
LEFT JOIN DISC_PROD.ADP.OPALPAYCODES PAYCODE
	ON PAYCODE.PAY_CODE 
		=
		CASE WHEN PAYCODES LIKE ''ADDITIONAL_EARNING%'' 
		THEN SPLIT_PART(PAYCODES, ''_'', 4)
		WHEN PAYCODES LIKE ''VOLUNTARY_DEDUCTION%''
		THEN SPLIT_PART(PAYCODES, ''_'', 3)
		WHEN PAYCODES IN (''FEDERAL_INCOME_EMPLOYEE_TAX'', ''LOCAL_4_EMPLOYEE_TAX'', ''LOCAL_5_EMPLOYEE_TAX'', ''MEDICARE_SURTAX_EMPLOYEE_TAX'', ''SOCIAL_SECURITY_EMPLOYEE_TAX'', ''SUI_SDI_EMPLOYEE_TAX'')
		THEN SPLIT_PART(PAYCODES, ''_'', 1) || '' '' || SPLIT_PART(PAYCODES, ''_'', 2)
		WHEN PAYCODES IN (''LIVED_IN_LOCAL_EMPLOYEE_TAX'', ''LIVED_IN_STATE_EMPLOYEE_TAX'', ''FAMILY_LEAVE_INSURANCE_EMPLOYEE_TAX'', ''WORKED_IN_LOCAL_EMPLOYEE_TAX'', ''WORKED_IN_STATE_EMPLOYEE_TAX'')
		THEN SPLIT_PART(PAYCODES, ''_'', 1) || '' '' || SPLIT_PART(PAYCODES, ''_'', 2) || '' '' || SPLIT_PART(PAYCODES, ''_'', 3)
		WHEN PAYCODES IN (''MEDICARE_EMPLOYEE_TAX'', ''SDI_EMPLOYEE_TAX'', ''SUI_EMPLOYEE_TAX'')
		THEN SPLIT_PART(PAYCODES, ''_'', 1)
	ELSE NULL
	END
LEFT JOIN PAYCODE_USAGE_DATES PUD
	ON PUD.PAYCODE = DETAIL.PAYCODES AND PUD.COMPANY_CODE = DETAIL.COMPANY_CODE AND PUD.WORKED_IN_STATE = DETAIL.WORKED_IN_STATE
WHERE PAYCODES IS NOT NULL;

RETURN ''SUCCESS'';

END;
';