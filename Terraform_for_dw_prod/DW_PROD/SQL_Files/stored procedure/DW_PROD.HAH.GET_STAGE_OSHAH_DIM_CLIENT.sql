CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_DIM_CLIENT("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- NAME:  OSHAH_DIM_CLIENT
--
-- PURPOSE: Creates one row per client according to OPAL
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 11/22/2022	Leo Joy     			Initial development
-- 04/28/2023   Leo Joy					Added additional filters on SERVICE_DATE to fetch only confirmed visit details
-- 07/27/2023  DEEPEN GAJJAR            ADDED REFERRER_KEY FIELD 
-- 11/08/2023  Shikhar Saxena 			Updated CLIENT_ETHNICITY logic and added HISPANIC_OR_LATINO column
-- 11/20/2023  Sandesh Gosavi          ADDED A COULUMN AND CTE FOR CLIENT STATUS
-- 11/21/2023  Sandesh Gosavi        ADDED A LOGIC AND COLUMN FOR DISCHARGE_REASON
--*****************************************************************************************************************************

INSERT OVERWRITE INTO DW_PROD.STAGE.OSHAH_DIM_CLIENT
WITH CLIENT AS  
(
	SELECT * FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST  WHERE MASTER_ID IN 
	(
	SELECT MASTER_ID FROM
	(
		SELECT PATIENTID, MASTER_ID
		FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST 
	)
	UNION
	SELECT MASTER_ID FROM
	(
		SELECT DISTINCT PATIENTID, MASTER_ID
		FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MATCH_LIST
		WHERE PATIENTID NOT IN (SELECT PATIENTID FROM DISC_DEDUPE_PROD.HHAEXCHANGEOSHAH.CLIENT_MASTER_LIST) 
	)
	)
),
STATUS_NAME AS (SELECT DISTINCT STATUSID, PATIENTSTATUSNAME AS CLIENT_STATUS 
FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTSTATUSCHANGEACTIVITY ) 
--this CTE is inteneded to get the patient first created date and the status change date of the same patient(active,inactive,hold etc)
,CLIENT_STATUS AS (
SELECT 
       TRIM(ST.PATIENTID)   AS PATIENTID 
     , MIN(ST.PATIENTCREATEDDATE::DATE) AS BEGIN_DATE
     , MAX(ST.STATUSCHANGEDATE::DATE) AS STATUS_CHANGE_DATE
FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTSTATUSCHANGEACTIVITY ST
GROUP BY TRIM(ST.PATIENTID) 
)
 ,
DISCHARGE_REASON AS (SELECT 
DISTINCT PATIENTID,
FIRST_VALUE(TRIM(DISCHARGEREASONTEXT)) OVER (PARTITION BY PATIENTID ORDER BY STARTDATE DESC,DISCHARGEDATE desc) AS DISCHARGEREASONTEXT
FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTCONTRACTCHANGES) 
--3 types of status active,inactive,hold
, 
--ON THIS CTE WE ARE FETCHING THE LATEST DATA OF PATIENT BASED ON ADMISSIONID, IF A EMP ADMITTED 1+ TIME THEN HIS 
--ADMISSIONID GET INCREMENTED ON ASCENDING FASHION , SO HERE WE ARE FETCHING THE LATEST ADMISSIONID BASED ON ROWNUMBER 1
ADMISSION_DETAILS AS ( 
SELECT
	   ADM.PATIENTID 
     ,(ADM.STARTDATE::DATE) AS STARTDATE
     ,(ADM.DISCHARGEDATE::DATE) AS DISCHARGEDATE
     ,ADM.CONTRACTID
FROM
	DISC_PROD.HHAEXCHANGEOSHAH.ADMISSIONS ADM
QUALIFY ROW_NUMBER() OVER (PARTITION BY PATIENTID
ORDER BY
	ADMISSIONID DESC) = 1
)
, 
--this CTE brings the contract start and end date of the particular patient
CONTRACT_DATES AS ( 
SELECT 
      DISTINCT PC.PATIENTID 
    , MIN(PC.STARTDATE) AS CONT_START_DATE
    , MAX(PC.DISCHARGEDATE) AS CONT_END_DATE
FROM DISC_PROD.HHAEXCHANGEOSHAH.PATIENTCONTRACTCHANGES PC
GROUP BY PC.PATIENTID 
)
,
--this CTE provide the latest patient supervisor as per business
SUPERVISORS AS (
SELECT
	PATIENTID,
	COORDINATORID ,
	COORDINATORNAME
FROM
	DISC_PROD.HHAEXCHANGEOSHAH.PROVIDERPATIENTCOORDINATORS 
QUALIFY ROW_NUMBER() OVER (PARTITION BY PATIENTID
ORDER BY
	COORDINATORID DESC)= 1
),
--this CTE brings the first and last service date of patient based on confirmed visit
SERVICE_DATE AS (
SELECT  
		TRIM(CL.PATIENTID) AS PATIENTID,
		MIN(TRIM(VI.VISITDATE)::DATE) AS FIRST_SERVICE_DATE,
		MAX(TRIM(VI.VISITDATE)::DATE) AS LAST_SERVICE_DATE
FROM
	DISC_PROD.HHAEXCHANGEOSHAH.VISITS VI
LEFT JOIN CLIENT CL
ON
	TRIM(CL.PATIENTID)= TRIM(VI.PATIENTID)
JOIN  DISC_PROD.HHAEXCHANGEOSHAH.TBLVISITS_REPL VIS
ON TRIM(VIS.VISITID) =TRIM(VI.VISITID) 
WHERE VI.MISSEDVISIT = ''N''
AND VIS.ISMISSEDVISIT =0
AND VIS.DELETED =0
AND vis.BILLED =1
GROUP BY
	CL.PATIENTID
)
SELECT DISTINCT 
		  MD5(CONCAT(''OSHAH'')|| ''-'' || CLI.MASTER_ID::NUMBER || ''-'' || ''HHAEXCHANGE'' ) AS CLIENT_KEY 
		, CLI.PATIENTID AS CLIENT_NUMBER 
		, CONCAT(''OSHAH - '',OFFICE.STATE) AS SYSTEM_CODE 
		, 17 AS SOURCE_SYSTEM_ID
		, CASE 
		  	 WHEN REPLACE(TRIM(CLI.SSN), ''-'') NOT IN 
					(SELECT SSN FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_SSN) 
			 THEN  HEX_ENCODE(REPLACE(TRIM(CLI.SSN), ''-''))
		  	 ELSE NULL
		  END AS CLIENT_PID --EXCLUDED DATA FROM DATA validation
, NULLIF(TRIM(MEDICARENUMBER), '''') AS CLIENT_MEDICARE_ID
		, NULLIF(TRIM(CLI.MEDICAIDNUMBER), '''') AS MEDICAID_ID  
		, CAST(CLI.DATEOFBIRTH AS DATE)  AS CLIENT_DOB 
		, NULL AS CLIENT_DATE_OF_DEATH 
		, UPPER(TRIM(CLI.GENDER))  AS CLIENT_GENDER
		,UPPER (CASE 
	  WHEN CLI.RACE IS NOT NULL THEN COALESCE(NULLIF(TRIM(CLI.RACE),''''), NULLIF(TRIM(CLI.ETHNICITY),''''), ''UNKNOWN'' )
      WHEN CLI.RACE ILIKE ''%HISPANIC%'' OR  CLI.ETHNICITY ILIKE ''%HISPANIC%'' THEN NULL																	
			ELSE NULL  
			END)  AS Client_Ethnicity,
		CASE WHEN CLI.ETHNICITY ILIKE ANY  (''%not%HISPANIC%OR%LATINO%'')THEN FALSE 
		WHEN (UPPER(TRIM(CLI.RACE)) = ''HISPANIC OR LATINO'' OR CLI.RACE IS NULL) AND CLI.ETHNICITY ILIKE ANY  (''%HISPANIC%OR%LATINO%'') THEN TRUE 
		ELSE FALSE END AS HISPANIC_OR_LATINO  --WE HAVE 2 COLMN RACE AND ETHNICITY BUT THOSE VALUES BELONGS TO ETHINICITY ONLY SO WE ARE FETCHING
		  						   --ONLY THE FIRST NON NULL VALUE OUT OF THIS 2 COLMN    
        , NULL AS CLIENT_GENDER_IDENTITY -- NA
		, NULL AS CLIENT_SEXUAL_ORIENTATION -- NA
		, NULL AS CLIENT_RACE -- NA   
        , NULL AS CLIENT_MARITAL_STATUS    
		, CASE TRIM(CLI.GENDER)
		     WHEN ''Male'' THEN ''MR.''
		     WHEN ''Female'' THEN ''MS.''
		     ELSE NULL
		  END AS CLIENT_SALUTATION
		, UPPER(TRIM(CLI.FIRSTNAME))  AS CLIENT_FIRST_NAME
		, UPPER(TRIM(CLI.MIDDLENAME)) AS CLIENT_MIDDLE_NAME
		, UPPER(TRIM(CLI.LASTNAME))  AS CLIENT_LAST_NAME
		, CONCAT(UPPER(TRIM(CLI.LASTNAME)), '', '' , UPPER(TRIM(CLI.FIRSTNAME)) , '','', COALESCE(UPPER(CLI.MIDDLENAME),'''')) AS CLIENT_NAME
  		, UPPER(TRIM(CLI.ADDRESS1)) AS CLIENT_ADDRESS1
		, UPPER(TRIM(CLI.ADDRESS2)) AS CLIENT_ADDRESS2 
		, UPPER(TRIM(CLI.CITY)) AS CLIENT_CITY
		, UPPER(TRIM(CLI.STATE)) AS CLIENT_STATE_CODE
		, TRIM(REPLACE(CLI.ZIP5,''-''))  AS CLIENT_ZIP  
		, NULL AS CLIENT_CLN_ADDRESS1
		, NULL AS CLIENT_CLN_ADDRESS2
		, NULL AS CLIENT_CLN_CITY
		, NULL AS CLIENT_CLN_STATE_CODE
		, NULL AS CLIENT_CLN_ZIP
		, NULL AS CLIENT_STD_ADDRESS1
		, NULL AS CLIENT_STD_ADDRESS2
		, NULL AS CLIENT_STD_CITY
		, NULL AS CLIENT_STD_STATE_CODE
		, NULL AS CLIENT_STD_ZIP
       	, REGEXP_REPLACE(TRIM(CLI.HOMEPHONE), ''-'')  AS CLIENT_HOME_PHONE
       	, REGEXP_REPLACE(TRIM(CLI.PHONE2), ''-'') AS CLIENT_CELL_PHONE
       	, REGEXP_REPLACE(TRIM(CLI.PHONE3), ''-'') AS CLIENT_WORK_PHONE
     	, NULL AS CLIENT_FAX_NUMBER 
		, NULL AS CLIENT_PERSONAL_EMAIL    
		, CLI.REFERRALRECEIVEDDATE::DATE AS REFERRAL_DATE
        , COALESCE (DATEDIFF(DAY,SD.FIRST_SERVICE_DATE,SD.LAST_SERVICE_DATE),0) AS DAYS_TO_SERVICE
		, CAST(CONT.CONT_START_DATE AS DATE) AS CONTRACT_BEGIN_DATE 
		, CAST(CONT.CONT_END_DATE AS DATE) AS CONTRACT_END_DATE
		, SD.FIRST_SERVICE_DATE AS FIRST_SERVICE_DATE   
		, SD.LAST_SERVICE_DATE AS LAST_SERVICE_DATE 
		, (ST.BEGIN_DATE::DATE) AS BEGIN_DATE  --PATIENTCREATEDDATE     
	    , IFF(CLI.STATUSID=5,SD.LAST_SERVICE_DATE,NULL) AS END_DATES --statusid-5 is discharged      
        , IFF(CLI.STATUSID=3,TRUE,FALSE) AS ACTIVE_CLIENT_FLAG --statusid-3 IS active
		, UPPER(TRIM(SN.CLIENT_STATUS)) AS CLIENT_STATUS												
		, CASE  WHEN len(DR.DISCHARGEREASONTEXT) > 4995 
		   THEN LEFT(TRIM(DR.DISCHARGEREASONTEXT), 4995) 
		   ELSE TRIM(DR.DISCHARGEREASONTEXT) END AS DISCHARGE_REASON										  
		, IFF(CLI.STATUSID=8,TRUE,FALSE) AS ON_HOLD_FLAG --status id-8 IS hold
		, IFF(CLI.STATUSID=8,CAST(ST.STATUS_CHANGE_DATE AS DATE),NULL) AS ON_HOLD_START_DATE--status id-8 IS hold
		, NULL AS ON_HOLD_END_DATE 
		, NULLIF(TRIM(PC.TEXT9),'''') AS LINKED_ID --TEXT 9 IS LEGACY AMS ID THAT COMMON IN SANDATA
		, NULL AS ACQUIRED_FROM_COMPANY_KEY 
		, NULL AS ACQUIRED_FROM_COMPANY_ID
		, NULL AS ACQUIRED_FROM_COMPANY_FULL_NAME 
		, NULL AS ACQUISITION_DATE
		, NULL AS ACQUISITION_FLAG
		, CASE 
			WHEN AD.STARTDATE IS NOT NULL AND AD.CONTRACTID IS NOT NULL AND AD.DISCHARGEDATE IS NULL 
			THEN AD.STARTDATE
			ELSE NULL 
		  END AS ADMISSION_DATE --IF A PATIENT IS HAVING A STARTDATE THEN IT MEANS HE IS ON A WAITING LIST 
		  						--IF HE HAS AN CONTRACTID THEN HE IS CONSIDERED AS ADMITTED ,IF HE HAS AN DISCH_DATE THEN THAT MEANS HE IS NO LONGER UNDER THAT CONTRACT ADMITTED
		, CASE 
			WHEN AD.STARTDATE IS NOT NULL AND AD.CONTRACTID IS NOT NULL AND AD.DISCHARGEDATE IS NULL 
			THEN TRUE 
			ELSE FALSE 
		  END AS ADMISSION_FLAG
		, NULL AS CLIENT_CONVERTED_FLAG 
		, MD5(''OSHAH'' || ''-'' ||  PPC.COORDINATORID || ''-'' || ''HHAEXCHANGE'') AS PRIMARY_SUPERVISOR_KEY
		, PPC.COORDINATORID  AS PRIMARY_SUPERVISOR_CODE
		, PPC.COORDINATORNAME AS PRIMARY_SUPERVISOR_NAME  
		, NULL AS SECONDARY_SUPERVISOR_KEY
		, NULL AS SECONDARY_SUPERVISOR_CODE
		, NULL AS SECONDARY_SUPERVISOR_NAME
		, MD5(''OSHAH'' || ''-'' || OFFICE.OFFICEID || ''-'' || ''HHAEXCHANGE'') AS PRIMARY_BRANCH_KEY
		, UPPER(TRIM(OFFICE.OFFICENAME)) AS PRIMARY_BRANCH_NAME 
		, UPPER(TRIM(OFFICE.STATE)) AS PRIMARY_BRANCH_STATE
		, NULL AS GUARANTOR_NAME
		, NULL AS NOTES
        , NULL AS AGENCY
		, MD5(RS.AGENCYID||''-''||RS."REFERRALSOURCEID"||''-''||''OSHAH'') REFERRER_KEY
       -- , TRIM(CLI.MEDICAIDNUMBER) AS MEDICAID_ID
        , TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
		, TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE
		,:STR_ETL_TASK_KEY AS ETL_TASK_KEY
		,:STR_ETL_TASK_KEY ETL_INSERTED_TASK_KEY
        , CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
		, CURRENT_USER AS ETL_INSERTED_BY
		, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_UPDATED_DATE
		, CURRENT_USER AS ETL_LAST_UPDATED_BY
		, 0 AS ETL_DELETED_FLAG
		, 0 AS ETL_INFERRED_MEMBER_FLAG
FROM CLIENT CLI
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL OFFICE ON CLI.OFFICEID = OFFICE.OFFICEID
LEFT JOIN SERVICE_DATE SD ON CLI.PATIENTID = SD.PATIENTID
LEFT JOIN CLIENT_STATUS ST ON CLI.PATIENTID = ST.PATIENTID
LEFT JOIN DISCHARGE_REASON DR ON TRIM(CLI.PATIENTID) = TRIM(DR.PATIENTID)																		 
LEFT JOIN ADMISSION_DETAILS AD ON AD.PATIENTID=CLI.PATIENTID
LEFT JOIN CONTRACT_DATES CONT ON CLI.PATIENTID = CONT.PATIENTID 
LEFT JOIN SUPERVISORS PPC ON PPC.PATIENTID =CLI.PATIENTID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.PATIENTCUSTOMFIELDS PC
		  ON TRIM(PC.PATIENTID) = TRIM(CLI.PATIENTID)
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.REFERRALSOURCE RS ON RS.REFERRALSOURCEID = CLI.REFERRALSOURCEID
LEFT JOIN STATUS_NAME SN ON CLI.STATUSID = SN.STATUSID													  
WHERE OFFICE.STATE IN (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE);
RETURN ''SUCCESS'';
END;
';