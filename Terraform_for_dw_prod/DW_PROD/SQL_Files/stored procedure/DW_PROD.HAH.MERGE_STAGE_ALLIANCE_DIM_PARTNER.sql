CREATE OR REPLACE PROCEDURE DW_PROD.HAH.MERGE_STAGE_ALLIANCE_DIM_PARTNER()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    RETURN_RESULT VARCHAR;
BEGIN
MERGE INTO DW_PROD.HAH.DIM_PARTNER AS TGT
USING DW_PROD.STAGE.ALLIANCE_DIM_PARTNER AS SRC
ON TGT.PARTNER_KEY=SRC.PARTNER_KEY
WHEN MATCHED
THEN UPDATE SET
     TGT.PARENT_PARTNER_KEY= SRC.PARENT_PARTNER_KEY
    , TGT.PARENT_PARTNER_NAME=SRC.PARENT_PARTNER_NAME
	, TGT.SOURCE_SYSTEM_ID=SRC.SOURCE_SYSTEM_ID
	, TGT.SYSTEM_CODE=SRC.SYSTEM_CODE
	, TGT.PARTNER_NAME=SRC.PARTNER_NAME
	, TGT.PARTNER_CODE=SRC.PARTNER_CODE
	, TGT.ACTIVE_FLAG=SRC.ACTIVE_FLAG
	, TGT.START_DATE=SRC.START_DATE
	, TGT.END_DATE=SRC.END_DATE
	, TGT.ETL_TASK_KEY=SRC.ETL_TASK_KEY
	, TGT.ETL_INSERTED_TASK_KEY=SRC.ETL_INSERTED_TASK_KEY
	, TGT.ETL_INSERTED_DATE=SRC.ETL_INSERTED_DATE
	, TGT.ETL_INSERTED_BY=SRC.ETL_INSERTED_BY
	, TGT.ETL_LAST_UPDATED_DATE=SRC.ETL_LAST_UPDATED_DATE
	, TGT.ETL_LAST_UPDATED_BY=SRC.ETL_LAST_UPDATED_BY
	, TGT.ETL_DELETED_FLAG=SRC.ETL_DELETED_FLAG
	, TGT.ETL_INFERRED_MEMBER_FLAG=SRC.ETL_INFERRED_MEMBER_FLAG
WHEN NOT MATCHED
THEN INSERT (PARTNER_KEY
    , PARENT_PARTNER_KEY
    , PARENT_PARTNER_NAME 
	, SOURCE_SYSTEM_ID
	, SYSTEM_CODE
	, PARTNER_NAME
	, PARTNER_CODE
	, ACTIVE_FLAG
	, START_DATE
	, END_DATE
	, ETL_TASK_KEY
	, ETL_INSERTED_TASK_KEY
	, ETL_INSERTED_DATE
	, ETL_INSERTED_BY
	, ETL_LAST_UPDATED_DATE
	, ETL_LAST_UPDATED_BY
	, ETL_DELETED_FLAG
	, ETL_INFERRED_MEMBER_FLAG)
VALUES (SRC.PARTNER_KEY
    , SRC.PARENT_PARTNER_KEY
    , SRC.PARENT_PARTNER_NAME
	, SRC.SOURCE_SYSTEM_ID
	, SRC.SYSTEM_CODE
	, SRC.PARTNER_NAME
	, SRC.PARTNER_CODE
	, SRC.ACTIVE_FLAG
	, SRC.START_DATE
	, SRC.END_DATE
	, SRC.ETL_TASK_KEY
	, SRC.ETL_INSERTED_TASK_KEY
	, SRC.ETL_INSERTED_DATE
	, SRC.ETL_INSERTED_BY
	, SRC.ETL_LAST_UPDATED_DATE
	, SRC.ETL_LAST_UPDATED_BY
	, SRC.ETL_DELETED_FLAG
	, SRC.ETL_INFERRED_MEMBER_FLAG);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Inserted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
';