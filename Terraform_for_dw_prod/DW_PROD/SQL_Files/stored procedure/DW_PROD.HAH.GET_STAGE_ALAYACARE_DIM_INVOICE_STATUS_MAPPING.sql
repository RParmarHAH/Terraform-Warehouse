CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ALAYACARE_DIM_INVOICE_STATUS_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 21/04/23    Pinkal Panchal        Initial Development
-- 15/09/23    Pradeep Thippani      changed invoice_status logic for PAID and SENT
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.ALAYACARE_DIM_INVOICE_STATUS_MAPPING
WITH INVOICE_ITEMS AS (
	SELECT INVOICE_ITEM.INVOICE_ID, 
		COALESCE(C.MASTER_ID, INVOICE_ITEM.CLIENT_ID, VISIT.CLIENT_ID) AS CLIENT_ID,
		COALESCE(VISIT.BRANCH_ID, COST_CENTRE.PROPERTIES_BRANCH_ID) AS BRANCH_ID,
		G.GROUP_ID,
		NULLIF(MAX(GREATEST(NVL(INVOICE_ITEM.PAYMENT_DATE, ''1/1/1900''), NVL(INVOICE_ITEM.INVOICE_LAST_PAYMENT_DATE, ''1/1/1900''))), ''1/1/1900'') AS FINAL_PAYMENT_DATE,
		NULLIF(concat(YEAR(billing_period.END_DATE),MONTH(billing_period.END_DATE)),''19001'') AS BILLING_PERIOD
	FROM DISC_PROD.ALAYACARE.INVOICE_ITEM AS INVOICE_ITEM
	LEFT JOIN DISC_PROD.ALAYACARE.VISIT AS VISIT
		ON VISIT.VISIT_ID = INVOICE_ITEM.VISIT_ID 
	LEFT JOIN DISC_PROD.ALAYACARE.SERVICE AS SERVICE
		ON SERVICE.SERVICE_ID = VISIT.SERVICE_ID
	LEFT JOIN DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MATCH_LIST   CM
		ON CM.ID = SERVICE.SERVICE_CLIENT_ID
	LEFT JOIN DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MASTER_LIST  C	
		ON C.CLIENT_ID=COALESCE(CM.ID, SERVICE.SERVICE_CLIENT_ID, VISIT.CLIENT_ID, INVOICE_ITEM.CLIENT_ID)
--			AND VISIT.BRANCH_ID=C.BRANCH_ID 
	LEFT JOIN DISC_PROD.ALAYACARE.TBL_GUID_COST_CENTRE_TIER_4 COST_CENTRE_MAPPING
		ON COST_CENTRE_MAPPING.GUID_TO = C.GUID
	LEFT JOIN DISC_PROD.ALAYACARE.TBL_COST_CENTRES_TIER_4 AS COST_CENTRE
		ON COST_CENTRE.ID = COST_CENTRE_MAPPING.COST_CENTRE_ID
	LEFT JOIN DISC_PROD.ALAYACARE.GROUPS AS G
		ON G.BRANCH_ID = COALESCE(COST_CENTRE.PROPERTIES_BRANCH_ID, VISIT.BRANCH_ID)
			AND G.PROFILE_COMPANY = COST_CENTRE.PROPERTIES_DESCRIPTION
	LEFT JOIN DISC_PROD.ALAYACARE.BRANCH B 
		ON B.BRANCH_ID = COALESCE(VISIT.BRANCH_ID, COST_CENTRE.PROPERTIES_BRANCH_ID)
	LEFT JOIN DISC_PROD.ALAYACARE.INVOICE_ITEM_BILLING_PERIOD AS invoice_item_billing_period 
		ON INVOICE_ITEM.invoice_item_id=invoice_item_billing_period.invoice_item_id
	LEFT JOIN DISC_PROD.ALAYACARE.BILLING_PERIOD AS billing_period 
		ON invoice_item_billing_period.billingperiod_id=billing_period.billing_period_id
	GROUP BY 1, 2, 3, 4, BILLING_PERIOD
) 
SELECT DISTINCT SOURCE_SYSTEM_ID,SYSTEM_CODE,DERIVED_INVOICE_STATUS,INVOICE_STATUS_KEY,
       ---- ETL FIELDS
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
    :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,                    
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	CURRENT_USER as ETL_INSERTED_BY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	CURRENT_USER as ETL_LAST_UPDATED_BY
FROM (
SELECT 
	INVOICE_DETAILS.INVOICE_ID,
	9 AS SOURCE_SYSTEM_ID,
	UPPER(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(INVOICE_ITEMS.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'') AS SYSTEM_CODE,
	CASE
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''DELETED'' THEN ''CANCELLED''
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''DRAFT'' THEN ''UNBILLED''
--			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''PAID'' AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))=0 THEN ''PAID''
--			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''PAID'' AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))!=0 THEN ''PARTIAL PAY''
--			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''SENT'' THEN --''BILLED''	--Changes made on 19/07/23 by Pinkal
--				CASE WHEN (SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)))>0
--							AND SUM(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE)>0 THEN ''PARTIAL PAY''
--                ELSE ''BILLED'' END
--			changes made on 15/09/2023 for RCM
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''PAID'' THEN
                  CASE WHEN (SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)))>0 AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))<=0 THEN ''PAID''
                  ELSE ''PARTIAL PAY''  END
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''SENT'' THEN --''BILLED''        --Changes made on 19/07/23 by Pinkal
                CASE WHEN (SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)))> 0 AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))>0 THEN ''PARTIAL PAY''
                     WHEN  (SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_TOTAL,0)) - SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0)))> 0 AND SUM(NVL(INVOICE_DETAILS.PROPERTIES_INVOICE_BALANCE,0))<=0 THEN ''PAID''
                ELSE ''BILLED'' END
			WHEN  UPPER(TRIM(INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS))=''VOID'' THEN ''CANCELLED'' 
	ELSE ''UNKNOWN'' END AS DERIVED_INVOICE_STATUS,
	MD5(SOURCE_SYSTEM_ID || ''-'' || DERIVED_INVOICE_STATUS || ''-'' || SYSTEM_CODE) AS INVOICE_STATUS_KEY
FROM DISC_PROD.ALAYACARE.INVOICE_DETAILS AS INVOICE_DETAILS
LEFT JOIN INVOICE_ITEMS AS INVOICE_ITEMS
	ON INVOICE_ITEMS.INVOICE_ID = INVOICE_DETAILS.INVOICE_ID
LEFT JOIN DISC_PROD.ALAYACARE.FUNDER AS FUNDERS
	ON FUNDERS.FUNDER_ID = INVOICE_DETAILS.INVOICE_FUNDER_ID
LEFT JOIN DISC_PROD.ALAYACARE.BRANCH AS B 
	ON B.BRANCH_ID = COALESCE(INVOICE_ITEMS.BRANCH_ID, FUNDERS.BRANCH_ID)
GROUP BY INVOICE_DETAILS.INVOICE_ID,SOURCE_SYSTEM_ID,B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION,INVOICE_ITEMS.BRANCH_ID, 
FUNDERS.BRANCH_ID,INVOICE_DETAILS.PROPERTIES_INVOICE_STATUS 
	)
;
RETURN ''SUCCESS'';
END;
';