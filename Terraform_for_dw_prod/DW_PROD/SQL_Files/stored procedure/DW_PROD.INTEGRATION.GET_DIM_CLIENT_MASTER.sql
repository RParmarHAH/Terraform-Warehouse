CREATE OR REPLACE PROCEDURE DW_PROD.INTEGRATION.GET_DIM_CLIENT_MASTER("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result varchar(1000);
BEGIN

INSERT OVERWRITE INTO DW_PROD.INTEGRATION.DIM_CLIENT_MASTER 
WITH
  CTE_MATCHES AS (
      SELECT
          FILENAME
          , CLUSTER_ID
          , COUNT(0) CNT
      FROM DISC_DEDUPE_PROD.CCSI.DF_CCSI_CLIENT_DEDUPE_SOURCE
      GROUP BY
          FILENAME
          , CLUSTER_ID
      HAVING CNT > 1
  ),
  CTE_CLUSTERS AS (
      SELECT
          DEDUPE.RECORD_ID
          , DEDUPE.CLUSTER_ID
          , ROW_NUMBER() OVER(PARTITION BY DEDUPE.CLUSTER_ID ORDER BY  CCSI.CLIENT_NUMBER DESC) RECORD_ORDER
          ,CCSI.BEGIN_DATE
          ,CCSI.CLIENT_NUMBER 
      FROM DISC_DEDUPE_PROD.CCSI.DF_CCSI_CLIENT_DEDUPE_SOURCE DEDUPE
      INNER JOIN DW_PROD.HAH.DIM_CLIENT CCSI ON
            DEDUPE.RECORD_ID = CCSI.CLIENT_KEY
      INNER JOIN CTE_MATCHES MATCHES ON
            MATCHES.FILENAME = DEDUPE.FILENAME
            AND MATCHES.CLUSTER_ID = DEDUPE.CLUSTER_ID
      ORDER BY DEDUPE.CLUSTER_ID
  ) --SELECT * FROM CTE_CLUSTERS;
SELECT  CLIENT_KEY AS MASTER_ID,
		CCSI.*
FROM DW_PROD.HAH.DIM_CLIENT CCSI
INNER JOIN CTE_CLUSTERS CLUSTS
    ON CLUSTS.RECORD_ID = CCSI.CLIENT_KEY
    AND CLUSTS.RECORD_ORDER = 1 
UNION 
SELECT CLIENT_KEY AS MASTER_ID,
		CCSI.*
FROM DW_PROD.HAH.DIM_CLIENT CCSI
LEFT JOIN CTE_CLUSTERS DUPS
    ON DUPS.RECORD_ID = CCSI.CLIENT_KEY
WHERE DUPS.RECORD_ID IS NULL;

SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
';