CREATE OR REPLACE PROCEDURE DW_PROD.REPORT.DISCOVERY_TO_BUSINESS_AUDIT("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result varchar(1000);
BEGIN
    INSERT INTO DATA_MANAGEMENT.SNOWFLAKE.DISCOVERY_TO_BUSINESS_AUDIT
WITH   DISCOVERY AS 
(
SELECT ''SOURCE_COUNT_DIM_CLIENT''  AS TASK,''DISC_PROD''  AS DISC_DB,''COSTAL_DIM_CLIENT'' AS DISC_PROD_SOURCE, count(CLIENT_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_COSTALSYNCDATA_DIM_CLIENT
UNION
SELECT ''SOURCE_COUNT_DIM_CLIENT''  AS TASK,''DISC_PROD''  AS DISC_DB,''DATAFLEX_DIM_CLIENT'' AS DISC_PROD_SOURCE, count(CLIENT_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_DATAFLEXSYNCDATA_DIM_CLIENT
UNION
SELECT ''SOURCE_COUNT_DIM_CLIENT''  AS TASK,''DISC_PROD''  AS DISC_DB,''SANDATA_DIM_CLIENT'' AS DISC_PROD_SOURCE, count(CLIENT_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_SANDATAIMPORT_DIM_CLIENT
UNION
SELECT ''SOURCE_COUNT_DIM_BRANCH''  AS TASK,''DISC_PROD''  AS DISC_DB,''COSTAL_DIM_BRANCH'' AS DISC_PROD_SOURCE, count(BRANCH_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_COSTALSYNCDATA_DIM_BRANCH
UNION
SELECT ''SOURCE_COUNT_DIM_BRANCH''  AS TASK,''DISC_PROD''  AS DISC_DB,''DATAFLEX_DIM_BRANCH'' AS DISC_PROD_SOURCE, count(BRANCH_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_DATAFLEXSYNCDATA_DIM_BRANCH
UNION
SELECT ''SOURCE_COUNT_DIM_BRANCH''  AS TASK,''DISC_PROD''  AS DISC_DB,''SANDATA_DIM_BRANCH'' AS DISC_PROD_SOURCE, count(BRANCH_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_SANDATAIMPORT_DIM_BRANCH
UNION
SELECT ''SOURCE_COUNT_FACT_VISIT''  AS TASK,''DISC_PROD''  AS DISC_DB,''COSTAL_FACT_VISIT'' AS DISC_PROD_SOURCE, count(VISIT_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_COSTALSYNCDATA_FACT_VISIT
UNION
SELECT ''SOURCE_COUNT_FACT_VISIT''  AS TASK,''DISC_PROD''  AS DISC_DB,''DATAFLEX_FACT_VISIT'' AS DISC_PROD_SOURCE, count(VISIT_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_DATAFLEXSYNCDATA_FACT_VISIT
UNION
SELECT ''SOURCE_COUNT_FACT_VISIT''  AS TASK,''DISC_PROD''  AS DISC_DB,''SANDATA_FACT_VISIT'' AS DISC_PROD_SOURCE, count(VISIT_KEY) AS DISC_TABLE_COUNT
FROM DW_PROD."STAGE".VW_CURRENT_SANDATAIMPORT_FACT_VISIT
),
BUSSINESS AS  (
SELECT ''DIM_CLIENT''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''COSTAL_DIM_CLIENT'' AS DW_SOURCE, COUNT(CLIENT_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.DIM_CLIENT WHERE SOURCE_SYSTEM_ID IN (1,2)
UNION
SELECT ''DIM_CLIENT''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''DATAFLEX_DIM_CLIENT'' AS DW_SOURCE, COUNT(CLIENT_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.DIM_CLIENT WHERE SOURCE_SYSTEM_ID IN (3)
UNION
SELECT ''DIM_CLIENT''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''SANDATA_DIM_CLIENT'' AS DW_SOURCE, COUNT(CLIENT_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.DIM_CLIENT WHERE SOURCE_SYSTEM_ID IN (4)
UNION
SELECT ''DIM_BRANCH''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''COSTAL_DIM_BRANCH'' AS DW_SOURCE, COUNT(BRANCH_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.DIM_BRANCH WHERE SOURCE_SYSTEM_ID IN (1,2)
UNION
SELECT ''DIM_BRANCH''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''DATAFLEX_DIM_BRANCH'' AS DW_SOURCE, COUNT(BRANCH_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.DIM_BRANCH WHERE SOURCE_SYSTEM_ID IN (3,5)
UNION
SELECT ''DIM_BRANCH''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''SANDATA_DIM_BRANCH'' AS DW_SOURCE, COUNT(BRANCH_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.DIM_BRANCH WHERE SOURCE_SYSTEM_ID IN (4)
UNION
SELECT ''FACT_VISIT''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''COSTAL_FACT_VISIT'' AS DW_SOURCE, COUNT(VISIT_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.FACT_VISIT WHERE SOURCE_SYSTEM_ID IN (1,2)
UNION
SELECT ''FACT_VISIT''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''DATAFLEX_FACT_VISIT'' AS DW_SOURCE, COUNT(VISIT_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.FACT_VISIT WHERE SOURCE_SYSTEM_ID IN (3)
UNION
SELECT ''FACT_VISIT''  AS DW_PROD_TABLE,''DW_PROD''  AS DW_DB,''SANDATA_FACT_VISIT'' AS DW_SOURCE, COUNT(VISIT_KEY) AS DW_TABLE_COUNT FROM DW_PROD.HAH.FACT_VISIT WHERE SOURCE_SYSTEM_ID IN (4)
)
SELECT * ,(B.DW_TABLE_COUNT- D.DISC_TABLE_COUNT) AS COUNT_DIFF, floor(100.0*(COUNT_DIFF) / D.DISC_TABLE_COUNT,4) As PercentageDiff,CURRENT_DATE AS insert_date 
FROM DISCOVERY D INNER JOIN BUSSINESS B ON D.DISC_PROD_SOURCE = B.DW_SOURCE ORDER BY TASK;

SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
';