CREATE OR REPLACE PROCEDURE DW_PROD.REPORT.GET_REPORT_RPT_INVOICE_METRICS("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
	LAST_UPDATED_DATE DATE DEFAULT (SELECT MAX(ETL_LAST_UPDATED_DATE) FROM DW_PROD.REPORT.RPT_INVOICE_METRICS_MONTHLY);	--Added on 05/10/23
BEGIN
--********************************************************************************************
-- NAME: INVOICE_METRICS
--
-- PURPOSE: FOR RCM
--
-- DEVELOPMENT LOG:
-- DATE 		AUTHOR 			 COMMENTS

-- 11/01/22		Pinkal Panchal	 INITIAL DEVELOPMENT
-- 05/01/24     Preeti Sharma    ADDED BILL UNIT COLUMN	 
-- 12/02/24     Pinkal Panchal   ADDED CLIENT_ACQUISITION TAGS	 
-- 12/02/24		Pinkal Panchal	 REMOVED LOGIC TO INSERT DATA INTO RPT_INVOICE_METRICS_MONTHLY TABLE
--******************************************************************************************

INSERT OVERWRITE INTO REPORT.RPT_INVOICE_METRICS
SELECT 
	INV.INVOICE_KEY,
	REV.REVENUE_KEY, 	--ADDED ON 28/04/23
	INV.INVOICE_NUMBER,
	INV.ALTERNATE_INVOICE_NUMBER,
	INV.INVOICE_TYPE, 
	REV.BILL_UNIT_TYPE,
	INV.FIRST_INVOICE_DATE,
	REV.REVENUE_DATE,
	REV.REPORT_DATE,
	BR.OFFICE_STATE_CODE,
    CON.CONTRACT_KEY, 
	CON.CONTRACT_CODE,
	CON.CONTRACT_NAME,
	CONCAT(CON.CONTRACT_CODE,'' - '',CON.CONTRACT_NAME) AS CONTRACT_CODE_AND_NAME,
    BR.ORIGINAL_BRANCH_KEY, 
	BR.OFFICE_CODE,
	BR.OFFICE_NAME,
    CLI.ORIGINAL_CLIENT_KEY, 
	CLI.CLIENT_NAME,
	CLI.CLIENT_NUMBER,
	-- Added CLIENT_ACQUISITION_NAME, CLIENT_ACQUIRED_FLAG,ACQUISITION_AS_OF_DATE on 12/02/24 by Pinkal
	IFF(CLI_ACQ.AQUISITION_NAME IS NULL, ''NULL'',CLI_ACQ.AQUISITION_NAME) AS CLIENT_ACQUISITION_NAME,
	IFF(CLI_ACQ.CLIENT_KEY IS NULL, FALSE, TRUE) AS CLIENT_ACQUIRED_FLAG,
	CASE 
	WHEN AQUISITION_NAME = ''CCSI'' AND IVL.SERVICE_DATE >= DATE(2021-7-1) THEN TRUE
	WHEN AQUISITION_NAME = ''ADAPTIVE'' AND IVL.SERVICE_DATE >= DATE(2021-1-1)THEN TRUE
	WHEN AQUISITION_NAME = ''PRAETORIAN'' AND IVL.SERVICE_DATE >= DATE(2022-1-1) THEN TRUE
	WHEN AQUISITION_NAME = ''PREFERRED'' AND IVL.SERVICE_DATE >= DATE(2022-04-01) THEN TRUE
	WHEN AQUISITION_NAME = ''ALTAMAHA''  AND IVL.SERVICE_DATE >= DATE(2021-10-1) THEN TRUE
	WHEN AQUISITION_NAME = ''LONGEVITY''  AND IVL.SERVICE_DATE >= DATE(2022-5-1)THEN TRUE
	WHEN AQUISITION_NAME = ''MERIDIUS''  AND IVL.SERVICE_DATE>= DATE(2021-9-1)THEN TRUE
	WHEN AQUISITION_NAME = ''EDISON''  AND IVL.SERVICE_DATE >= DATE(2022-04-01) THEN TRUE
	WHEN AQUISITION_NAME = ''ASR''  AND IVL.SERVICE_DATE >= DATE(2021-11-01) THEN TRUE
	WHEN AQUISITION_NAME = ''CLEARCARE''  AND IVL.SERVICE_DATE >= DATE(2022-04-01)THEN TRUE
	WHEN AQUISITION_NAME = ''ALLIANCE''  AND IVL.SERVICE_DATE >= DATE(2022-06-01) THEN TRUE
	WHEN AQUISITION_NAME = ''MYCARE''  AND IVL.SERVICE_DATE >= DATE(2023-07-24) THEN TRUE
	WHEN AQUISITION_NAME = ''MISSION IN-HOME''  AND IVL.SERVICE_DATE >= DATE(2023-12-11) THEN TRUE
	WHEN AQUISITION_NAME = ''IN-HOME COMPANIONS''  AND IVL.SERVICE_DATE >= DATE(2023-12-29) THEN TRUE
    WHEN AQUISITION_NAME = ''ELDER CARE''  AND IVL.SERVICE_DATE >= DATE(2023-12-29) THEN TRUE
	WHEN AQUISITION_NAME = ''BERKSHIRE''  AND IVL.SERVICE_DATE >= DATE(2023-07-01) THEN TRUE
	WHEN AQUISITION_NAME = ''AXXESS''  AND IVL.SERVICE_DATE >= DATE(2021-11-01) THEN TRUE
	WHEN AQUISITION_NAME = ''OPENSYSTEMS''  AND IVL.SERVICE_DATE >= DATE(2021-09-01) THEN TRUE
	WHEN AQUISITION_NAME = ''PROSPERCARE''  AND IVL.SERVICE_DATE >= DATE(2022-08-01)THEN TRUE
	WHEN AQUISITION_NAME = ''ALL GENERATIONS''  AND IVL.SERVICE_DATE >= DATE(2022-04-01) THEN TRUE
	WHEN COALESCE(AQUISITION_NAME ,''HAH'') =''HAH'' THEN TRUE
	ELSE FALSE END AS ACQUISITION_AS_OF_DATE,
	sum(REV.AMOUNT_BILLED) AS INVOICE_AMOUNT,
	sum(REV.INVOICE_HOURS) AS HOURS_BILLED,
	NULL AS AMOUNT_PAID,
	REV.PAYMENT_DATE,
	sum(REV.AMOUNT_COLLECTED) AS PAYMENT_RECEIVED,
	INV.PAYOR_CODE,
	NULL AS CREDITED_AMOUNT,
	sum(REV.AMOUNT_OUTSTANDING) AS AMOUNT_OUTSTANDING,
	CASE WHEN INV.AMOUNT_OUTSTANDING>0 THEN DATEDIFF(DAY, REV.REVENUE_DATE,GETDATE()) END AS OUTSTANDING_DAYS,
    CASE WHEN UPPER(INV.INVOICE_STATUS) NOT IN (''BILL PAID'',''PAID'',''BILLED'') AND DATEDIFF(''year'',INV.FIRST_INVOICE_DATE,CURRENT_DATE) >2 THEN sum(inv.AMOUNT_OUTSTANDING) END AS UNCOLLECTABLE_REVENUE,
	NULL AS STATUS,
	INV.INVOICE_STATUS,
	CLI.FIRST_SERVICE_DATE AS START_OF_SERVICE,
	CLI.LAST_SERVICE_DATE AS END_OF_SERVICE,
	INV.PERIOD,
	NULL AS TOTAL_PAID_AMOUNT,
	CASE WHEN INV.WRITEOFF_FLAG = ''True'' THEN SUM(INV.AMOUNT_BILLED) END AS TOTAL_WRITE_OFF_AMOUNT,
	REV.SOURCE_SYSTEM_ID,
	REV.ORIGINAL_SOURCE_SYSTEM_ID,
	-- ETL FIELDS		--Added on 05/10/23
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
    :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,                    
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	CURRENT_USER as ETL_INSERTED_BY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	CURRENT_USER as ETL_LAST_UPDATED_BY 
FROM HAH.DIM_INVOICE INV
LEFT JOIN INTEGRATION.FACT_REVENUE_MERGED  REV ON INV.INVOICE_KEY = REV.INVOICE_KEY
LEFT JOIN INTEGRATION.DIM_CLIENT_MERGED  CLI ON INV.CLIENT_KEY = CLI.ORIGINAL_CLIENT_KEY 
LEFT JOIN INTEGRATION.DIM_BRANCH_MERGED  BR ON INV.BRANCH_KEY = BR.ORIGINAL_BRANCH_KEY 
LEFT JOIN HAH.DIM_CONTRACT CON ON REV.CONTRACT_KEY = CON.CONTRACT_KEY
--LEFT JOIN HAH.DIM_SOURCE_SYSTEM SS ON SS.SOURCE_SYSTEM_ID=INV.SOURCE_SYSTEM_ID
--FACT_CLIENT_ACQUIRED	--Added on 23/01/24 by Pinkal
LEFT JOIN HAH.DIM_INVOICE_VISIT_LINKAGE IVL ON IVL.REVENUE_KEY = REV.REVENUE_KEY
LEFT JOIN HAH.FACT_CLIENT_ACQUIRED CLI_ACQ 
	ON CLI_ACQ.ORIGINAL_CLIENT_KEY=INV.CLIENT_KEY
	AND CLI_ACQ.CONTRACT_KEY =REV.CONTRACT_KEY 
	AND CLI_ACQ.ORIGINAL_BRANCH_KEY=REV.ORIGINAL_BRANCH_KEY  --INV.BRANCH_KEY
	AND CLI_ACQ.SERVICE_MONTH = DATE_TRUNC(''MONTH'',IVL.SERVICE_DATE)
WHERE REV.REVENUE_DATE >= dateadd(month, -36,  cast(getdate() as date))
AND UPPER(Trim(INV.INVOICE_STATUS)) NOT IN (''CANCELLED'',''PENDING'')
--AND NVL(REV.AMOUNT_OUTSTANDING,0)!=0	--CHNAGES MADE ON 24/03/23 FOR BI DASHBOARD
GROUP BY 
	INV.INVOICE_KEY,
	REV.REVENUE_KEY,
	INV.INVOICE_NUMBER,
	INV.ALTERNATE_INVOICE_NUMBER,
	INV.INVOICE_TYPE, 
	REV.BILL_UNIT_TYPE, 
	INV.FIRST_INVOICE_DATE,
	REV.REVENUE_DATE,
	REV.REPORT_DATE,
	BR.OFFICE_STATE_CODE,
    CON.CONTRACT_KEY, 
	CON.CONTRACT_CODE,
	CON.CONTRACT_NAME,
	CONTRACT_CODE_AND_NAME,
    BR.ORIGINAL_BRANCH_KEY, 
	BR.OFFICE_CODE,
	BR.OFFICE_NAME,
    CLI.ORIGINAL_CLIENT_KEY, 
	CLI.CLIENT_NAME,
	CLI.CLIENT_NUMBER,
	REV.PAYMENT_DATE,
	INV.PAYOR_CODE,
	OUTSTANDING_DAYS,
	STATUS,
	INV.INVOICE_STATUS,
	START_OF_SERVICE,
	END_OF_SERVICE,
	INV.PERIOD,
	INV.WRITEOFF_FLAG,
	REV.SOURCE_SYSTEM_ID,
	REV.ORIGINAL_SOURCE_SYSTEM_ID,
	CLI_ACQ.AQUISITION_NAME,
	CLI_ACQ.CLIENT_KEY,
	IVL.SERVICE_DATE;
	
SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

return return_result;
END;
';