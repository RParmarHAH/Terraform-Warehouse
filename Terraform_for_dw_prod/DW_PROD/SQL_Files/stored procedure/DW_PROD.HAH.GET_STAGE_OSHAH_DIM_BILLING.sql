CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_DIM_BILLING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--****************************************************************************************************************************
-- NAME:  OSHAH_DIM_BILLING
--
-- PURPOSE: Creates one row per PARTNER according to OSHAH 
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   ------------------------------------------------------------------------------------------
-- 03/22/23     SANKET JAIN          Initial development
-- 07/12/2023   Sandesh Gosavi       update code to use config flag
-- 08/25/2023   Mirisha              Changed system_code and state logic
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.OSHAH_DIM_BILLING

SELECT DISTINCT MD5(''OSHAH'' || ''-'' || SC.SERVICECODEID || ''-'' || ''HHAEXCHANGE'') AS BILLING_KEY
		, 17 AS SOURCE_SYSTEM_ID		  	 
   	 	,CONCAT(''OSHAH - '',OFF.STATE)  AS SYSTEM_CODE --CHANGED HARDCODED SYSTEM_CODE
        , SC.SERVICECODEID AS BILL_CODE
		, SC.SERVICECODE AS BILL_NAME
		, SC.SERVICECODE AS BILL_DESCRIPTION
		, SC.RATETYPETEXT AS BILL_TYPE
		, CASE WHEN CR.UNITS = 1 THEN ''Hourly''
        	   WHEN CR.UNITS = 2 THEN ''Half Hours''
        	   WHEN CR.UNITS = 4 THEN ''Quarter Hours''
          ELSE NULL END AS BILL_UOM
		, COALESCE(CR.RATE,IR.BILLEDRATE) AS BILL_RATE
		, CR.FROMDATE AS RATE_EFFECTIVE_START_DATE
		, COALESCE(VOR.REVENUE_CATEGORY,''UNKNOWN'')
		, COALESCE(VOR.REVENUE_SUBCATEGORY_CODE,''UNKNOWN'')
		, COALESCE(VOR.REVENUE_SUBCATEGORY_NAME,''UNKNOWN'')
		, NULL AS GL_CODE
		, NULL AS GL_NAME
	 	, NULL AS GL_DESCRIPTION
		, CASE WHEN SC.STATUS = ''Active'' THEN TRUE ELSE FALSE END AS ACTIVE_FLAG
		, :STR_ETL_TASK_KEY AS ETL_TASK_KEY
	 	, :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
	    , Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
		, CURRENT_USER AS ETL_INSERTED_BY
		, Convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
		, CURRENT_USER AS ETL_LAST_UPDATED_BY
	 	, 0 AS ETL_DELETED_FLAG
		, CR.TODATE AS RATE_EFFECTIVE_END_DATE
FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.Contracts c  on SC.ContractID = c.ContractID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.STAGE_Payer_REPL PR ON  COALESCE(PR.ContractID,PR.PayerID) = SC.ContractID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYEROFFICES PO ON PR.PAYERID= PO.PAYERID 
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL OFF ON OFF.OFFICEID = PO.OFFICEID 
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTRATES CR ON CR.AGENCYID = SC.AGENCYID
    	AND CR.SERVICECODEID = SC.SERVICECODEID
    	AND CR.TODATE :: DATE > GETDATE()
    	AND CR.FROMDATE :: DATE <= GETDATE()
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.VW_OSHAH_REVENUE  vor ON vor.SERVICECODEID = sc.SERVICECODEID
LEFT JOIN (SELECT *FROM  DISC_PROD.HHAEXCHANGEOSHAH.TBLINVOICEDETAILS_REPL
			QUALIFY ROW_NUMBER() OVER(PARTITION BY INVSERVICECODEID ORDER BY VISITDATE DESC) = 1 )IR
		ON IR.INVSERVICECODEID = SC.SERVICECODEID
WHERE OFF.STATE IN (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE)  --CHANGED PR.STATE TO OFF.STATE
QUALIFY ROW_NUMBER() OVER(PARTITION BY BILLING_KEY ORDER BY RATE_EFFECTIVE_START_DATE DESC)= 1 ;


return ''SUCCESS'';
END;
';