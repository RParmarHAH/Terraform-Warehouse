CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_SANDATAIMPORT_DIM_SERVICES("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN
--*****************************************************************************************************************************
-- NAME:  SANDATA DIM SERVICES 
--
-- PURPOSE: Populates Stage DIM SERVICES  for SANDATA
--
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 01/04/23    Vijay Sharma          Initial version
-- 02/28/23	   Rajat Sapkal		     Modified logic to include services from Sandata visits, BI_REPOSITORY Visits and Client admissions
-- 04/12/23	   Vijay Sharma		     Remove Contract from SERVICE_KEY and update the SERVICE_LINE_CODE,SERVICE_LINE 
-- 06/26/23    Pankti Fadia          Modified logic for REVENUE_CATEGORY, REVENUE_SUBCATEGORY_NAME, REVENUE_SUBCATEGORY_CODE
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.SANDATAIMPORT_DIM_SERVICES

WITH Rev_cat AS (
  WITH cte AS (
  SELECT
    SERVICEID,
    REVCODE,
    ROW_NUMBER() OVER (PARTITION BY SERVICEID ORDER BY CASE 
        WHEN REVCODE IN (NULL,'''','' '') THEN 2 
        WHEN regexp_like(REVCODE, ''.*[0-9].*'') THEN 1
        ELSE 0 END) AS rn
  FROM DISC_PROD.SANDATAIMPORT.SANDATA_INVOICEDETAILS
)
SELECT SERVICEID,
IFF(TRIM(REVCODE) = '''',NULL,REVCODE) AS REVCODE 
 FROM cte WHERE rn = 1
ORDER BY SERVICEID ASC
), SERVICES AS(
--Taken Services from Sandata visits
SELECT DISTINCT 
	CASE WHEN F.SERVICEID IN (''CARECO'' , ''VBPCG'') 
	THEN MD5(''CC_''||IFNULL(F.AGENCYID,-1) || ''-'' || IFNULL(F.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
	ELSE MD5(IFNULL(F.AGENCYID,-1) || ''-'' || IFNULL(F.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'') 
	END AS SERVICE_KEY,
	''4'' AS SOURCE_SYSTEM_ID,
	CASE WHEN F.SERVICEID IN (''CARECO'' , ''VBPCG'')	
		THEN ''CC_''||F.AGENCYID
		ELSE F.AGENCYID END AS SYSTEM_CODE,	 
	IFNULL(F.SERVICEID , ''UNKNOWN'') AS SERVICE_CODE,
S.DESCRIPTION AS SERVICE_DESCRIPTION,
	NULL AS SERVICE_TYPE, --?
	CASE S.DEFAULTBILLTYPE WHEN ''01'' THEN ''Hourly'' WHEN ''02'' THEN ''Visit'' WHEN ''05'' THEN ''Hourly''
	ELSE NULL END AS SERVICE_RATE_TYPE,
--	COALESCE(M.REVENUE_CATEGORY, ''HC'') AS SERVICE_LINE_CODE,
--	COALESCE(M.REVENUE_SUBCATEGORY_NAME, ''HOME CARE'') AS SERVICE_LINE,
--	CASE WHEN S.SERVICECODE IN (''CARECO'' , ''VBPCG'') THEN ''CC'' ELSE ''HC'' END AS SERVICE_LINE_CODE,
	CASE
       WHEN RC.REVCODE LIKE ''%Home Care%'' OR RC.REVCODE LIKE ''%DD Hourly%'' THEN ''HC''
       WHEN RC.REVCODE LIKE ''%Care Coordination%'' THEN ''CC''
       ELSE COALESCE(RC.REVCODE,''UNKNOWN'')
       END AS REVENUE_CATEGORY,
REVENUE_CATEGORY AS REVENUE_SUBCATEGORY_CODE, 
RC.REVCODE AS REVENUE_SUBCATEGORY_NAME,
	TRUE AS ACTIVE_FLAG, --? 
	:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
	:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
	 convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	 CURRENT_USER as ETL_INSERTED_BY,
	 convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	 CURRENT_USER as ETL_LAST_UPDATED_BY,
	 0  as ETL_DELETED_FLAG      
FROM DISC_PROD.SANDATAIMPORT.SANDATA_VISITS F
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_SERVICES AS S
		ON S.agencyID = F.AgencyId
		AND S.SERVICECODE =F.SERVICEID
LEFT JOIN Rev_cat RC ON RC.SERVICEID = S.SERVICECODE 
LEFT JOIN  DISC_PROD.SANDATAIMPORT.SANDATA_INVOICEDETAILS R	
  ON S.SERVICECODE =R.SERVICEID 
--LEFT JOIN DW_PROD.HAH.FACT_REVENUE_SUBCATEGORY_CONTRACT_MAPPING M
--    	ON M.SOURCE_SYSTEM_ID = 4 AND M.SYSTEM_CODE = S.AGENCYID AND M.CONTRACT_CODE = F.CLIENTADMITTYPE
WHERE F.AGENCYID = ''8485''
UNION 
--Taken Services from BI_REPOSITORY Visits
SELECT DISTINCT 
CASE WHEN F.SERVICEID IN (''CARECO'' , ''VBPCG'') 
	THEN MD5(''CC_''||IFNULL(F.AGENCYID,-1) || ''-'' || IFNULL(F.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
	ELSE MD5(IFNULL(F.AGENCYID,-1) || ''-'' || IFNULL(F.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
END AS SERVICE_KEY,
''4'' AS SOURCE_SYSTEM_ID,
CASE WHEN F.SERVICEID IN (''CARECO'' , ''VBPCG'')	
		THEN ''CC_''||F.AGENCYID
		ELSE F.AGENCYID END AS SYSTEM_CODE,
IFNULL(F.SERVICEID , ''UNKNOWN'') AS SERVICE_CODE,
S.DESCRIPTION AS SERVICE_DESCRIPTION,
NULL AS SERVICE_TYPE, --?
CASE S.DEFAULTBILLTYPE WHEN ''01'' THEN ''Hourly'' WHEN ''02'' THEN ''Visit'' WHEN ''05'' THEN ''Hourly''
ELSE NULL END AS SERVICE_RATE_TYPE,
 CASE
       WHEN RC.REVCODE LIKE ''%Home Care%'' OR RC.REVCODE LIKE ''%DD Hourly%'' THEN ''HC''
       WHEN RC.REVCODE LIKE ''%Care Coordination%'' THEN ''CC''
       ELSE COALESCE(RC.REVCODE,''UNKNOWN'')
       END AS REVENUE_CATEGORY,
REVENUE_CATEGORY AS REVENUE_SUBCATEGORY_CODE,
RC.REVCODE AS REVENUE_SUBCATEGORY_NAME,
TRUE AS ACTIVE_FLAG,
:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
     CURRENT_USER as ETL_INSERTED_BY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
     CURRENT_USER as ETL_LAST_UPDATED_BY,
     0  as ETL_DELETED_FLAG         
FROM DISC_PROD.BI_REPOSITORY.SANDATAVISITS F
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_SERVICES AS S
		ON S.agencyID = F.AgencyId
		AND S.SERVICECODE =F.SERVICEID 
		LEFT JOIN Rev_cat RC ON RC.SERVICEID = S.SERVICECODE
		LEFT JOIN  DISC_PROD.SANDATAIMPORT.SANDATA_INVOICEDETAILS R	
  ON S.SERVICECODE =R.SERVICEID 
--LEFT JOIN DW_PROD.HAH.FACT_REVENUE_SUBCATEGORY_CONTRACT_MAPPING M
--    	ON M.SOURCE_SYSTEM_ID = 4 AND M.SYSTEM_CODE = S.AGENCYID AND M.CONTRACT_CODE = F.ADMISSIONTYPE
WHERE F.AGENCYID = ''8485''
UNION
--Taken Services from Client Admission 
SELECT DISTINCT 
CASE WHEN AUTH.SERVICEID IN (''CARECO'' , ''VBPCG'') 
	THEN MD5(''CC_''||IFNULL(CADs.AGENCYID,-1) || ''-'' || IFNULL(AUTH.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
	ELSE MD5(IFNULL(CADs.AGENCYID,-1) || ''-'' || IFNULL(AUTH.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'') 
END AS SERVICE_KEY,
''4'' AS SOURCE_SYSTEM_ID, 
CASE WHEN AUTH.SERVICEID IN (''CARECO'' , ''VBPCG'')	
		THEN ''CC_''||CADs.AGENCYID
		ELSE CADs.AGENCYID END AS SYSTEM_CODE,
IFNULL(AUTH.SERVICEID , ''UNKNOWN'') AS SERVICE_CODE,
S.DESCRIPTION AS SERVICE_DESCRIPTION,
NULL AS SERVICE_TYPE, --?
CASE S.DEFAULTBILLTYPE WHEN ''01'' THEN ''Hourly'' WHEN ''02'' THEN ''Visit'' WHEN ''05'' THEN ''Hourly''
ELSE NULL END AS SERVICE_RATE_TYPE,
--COALESCE(M.REVENUE_CATEGORY, ''HC'') AS SERVICE_LINE_CODE,
--COALESCE(M.REVENUE_SUBCATEGORY_NAME, ''HOME CARE'') AS SERVICE_LINE,
--CASE WHEN S.SERVICECODE IN (''CARECO'' , ''VBPCG'') THEN ''CC'' ELSE ''HC'' END AS SERVICE_LINE_CODE,
 CASE
       WHEN RC.REVCODE LIKE ''%Home Care%'' OR RC.REVCODE LIKE ''%DD Hourly%'' THEN ''HC''
       WHEN RC.REVCODE LIKE ''%Care Coordination%'' THEN ''CC''
       ELSE COALESCE(RC.REVCODE,''UNKNOWN'')
       END AS REVENUE_CATEGORY,
REVENUE_CATEGORY AS REVENUE_SUBCATEGORY_CODE, 
RC.REVCODE AS REVENUE_SUBCATEGORY_NAME,
TRUE AS ACTIVE_FLAG,
:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
     CURRENT_USER as ETL_INSERTED_BY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
     CURRENT_USER as ETL_LAST_UPDATED_BY,
     0  as ETL_DELETED_FLAG
FROM DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS CADs
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_AUTHORIZATIONS AS AUTH
	    ON CADs.agencyID = AUTH.AgencyId
	    AND CADs.admissionID = AUTH.AdmissionId
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_SERVICES S 
     			ON AUTH.AGENCYID = S.AGENCYID  AND AUTH.SERVICEID =S.SERVICECODE
     			LEFT JOIN Rev_cat RC ON RC.SERVICEID = S.SERVICECODE
     			LEFT JOIN  DISC_PROD.SANDATAIMPORT.SANDATA_INVOICEDETAILS R	
  ON S.SERVICECODE =R.SERVICEID 
--LEFT JOIN DW_PROD.HAH.FACT_REVENUE_SUBCATEGORY_CONTRACT_MAPPING M
--    	ON M.SOURCE_SYSTEM_ID = 4 AND M.SYSTEM_CODE = AUTH.AGENCYID AND M.CONTRACT_CODE = CADs.ADMISSIONTYPE
WHERE CADs.AGENCYID = ''8485''
UNION 
SELECT DISTINCT 
CASE WHEN s.SERVICECODE IN (''CARECO'' , ''VBPCG'') 
	THEN MD5(''CC_''||IFNULL(S.AGENCYID,-1) || ''-'' || IFNULL(s.SERVICECODE , ''UNKNOWN'') || ''-'' ||''SANDATAIMPORT'')
	ELSE MD5(IFNULL(S.AGENCYID,-1) || ''-'' || IFNULL(s.SERVICECODE , ''UNKNOWN'') || ''-'' ||''SANDATAIMPORT'')
 END AS SERVICE_KEY,
''4'' AS SOURCE_SYSTEM_ID,
CASE WHEN s.SERVICECODE IN (''CARECO'' , ''VBPCG'')	
		THEN ''CC_''||S.AGENCYID
		ELSE S.AGENCYID END AS SYSTEM_CODE,
S.SERVICECODE AS SERVICE_CODE,
S.DESCRIPTION AS SERVICE_DESCRIPTION,
NULL AS SERVICE_TYPE, --?
CASE S.DEFAULTBILLTYPE WHEN ''01'' THEN ''Hourly'' WHEN ''02'' THEN ''Visit'' WHEN ''05'' THEN ''Hourly''
ELSE NULL END AS SERVICE_RATE_TYPE,
--COALESCE(M.REVENUE_CATEGORY, ''HC'') AS SERVICE_LINE_CODE,
--COALESCE(M.REVENUE_SUBCATEGORY_NAME, ''HOME CARE'') AS SERVICE_LINE,
--CASE WHEN s.SERVICECODE IN (''CARECO'' , ''VBPCG'') THEN ''CC'' ELSE ''HC'' END AS SERVICE_LINE_CODE,
CASE
       WHEN RC.REVCODE LIKE ''%Home Care%'' OR RC.REVCODE LIKE ''%DD Hourly%'' THEN ''HC''
       WHEN RC.REVCODE LIKE ''%Care Coordination%'' THEN ''CC''
       ELSE COALESCE(RC.REVCODE,''UNKNOWN'')
       END AS REVENUE_CATEGORY,
REVENUE_CATEGORY AS REVENUE_SUBCATEGORY_CODE,
RC.REVCODE AS REVENUE_SUBCATEGORY_NAME,
TRUE AS ACTIVE_FLAG, --?  
:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
     CURRENT_USER as ETL_INSERTED_BY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
     CURRENT_USER as ETL_LAST_UPDATED_BY,
     0  as ETL_DELETED_FLAG     
FROM DISC_PROD.SANDATAIMPORT.SANDATA_SERVICES AS S
  LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_ADMISSIONSERVICES ADM_S
                   ON S.AGENCYID = ADM_S.AGENCYID AND ADM_S.SERVICEID  = S.SERVICECODE 
  LEFT JOIN Rev_cat RC ON RC.SERVICEID = S.SERVICECODE
  LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS CADs
	    ON CADs.agencyID = S.AgencyId
	    AND CADs.admissionID = ADM_S.AdmissionId
	    LEFT JOIN  DISC_PROD.SANDATAIMPORT.SANDATA_INVOICEDETAILS R	
  ON S.SERVICECODE =R.SERVICEID 
--LEFT JOIN DW_PROD.HAH.FACT_REVENUE_SUBCATEGORY_CONTRACT_MAPPING M
--    	ON M.SOURCE_SYSTEM_ID = 4 AND M.SYSTEM_CODE = S.AGENCYID AND M.CONTRACT_CODE = CADs.ADMISSIONTYPE
WHERE S.AGENCYID = ''8485'')
SELECT DISTINCT SERVICE_KEY,SOURCE_SYSTEM_ID,SYSTEM_CODE,SERVICE_CODE,SERVICE_DESCRIPTION,SERVICE_TYPE,SERVICE_RATE_TYPE,REVENUE_CATEGORY,REVENUE_SUBCATEGORY_NAME,REVENUE_SUBCATEGORY_CODE,ACTIVE_FLAG,ETL_TASK_KEY,ETL_INSERTED_TASK_KEY,
ETL_INSERTED_DATE,ETL_INSERTED_BY,ETL_LAST_UPDATED_DATE,ETL_LAST_UPDATED_BY,ETL_DELETED_FLAG FROM SERVICES;
SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
RETURN return_result;

END;

';