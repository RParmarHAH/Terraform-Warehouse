CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_MATRIXCARE_DIM_CLIENT("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
                BEGIN
    --*****************************************************************************************************************************
-- NAME:  MATRIXCARE_DIM_CLIENT
--
-- PURPOSE: Creates one row per client according to MATRIXCARE
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 04/27/21     Prateek Bhatt           Initial Development
-- 05/14/21		Mir Ali				 Added logic for Primary_Branch attributes
-- 08/06/21     Prateek Bhatt		 Remove duplicate client with mapping table
-- 06/23/21     Prateek 			 Master Client Key and Master client number added from Client Mapping table
-- 07/07/21		Mir Ali				 Added new attributes including email, fax number, salutation, and marital status
-- 12/20/21		Abhishek Sunil		 Added Logic to pick up First Service Date and Last Service Date
-- 03/31/23		Jashvant Patel		 Modified date format as per American time
-- 09/27/23     SANDESH GOSAVI       Add CONFIRMED_FLAG logic in CONFIRMED_VISITS CTE to avoid clients future last_service_date
-- 10/11/23		Jay Prajapati		 Added Logic for MEDICAID_ID column.
-- 10/18/23     SANDESH GOSAVI       Add Logic for CLIENT_STATUS column.
-- 11/08/23     TRUSHALI RAMOLIYA    ADD HISPANIC AND LATINO COLUMN AND UPDATED THE LOGIC FOR CLIENT_ETHNICITY AS PER IDDOX - 388
-- 11/21/23  Sandesh Gosavi       ADDED A LOGIC AND COLUMN FOR DISCHARGE_REASON
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.MATRIXCARE_DIM_CLIENT
WITH DISC_STATUS_DATA AS 
	(
		SELECT DISTINCT SCH.SCH_ID,7 AS SOURCE_SYSTEM_ID
		,CASE WHEN SCHSTATUS.SCHST_NAME = ''C'' THEN ''Completed''
		WHEN SCHSTATUS.SCHST_NAME = ''COR'' THEN ''Needs Correction''
		WHEN SCHSTATUS.SCHST_NAME = ''CV-19'' THEN ''Covid-19 Hold or Cancel''
		WHEN SCHSTATUS.SCHST_NAME = ''DD-AV'' THEN ''DD Annual Visit''
		WHEN SCHSTATUS.SCHST_NAME = ''DD-QV'' THEN ''DD Quarterly Visit''
		WHEN SCHSTATUS.SCHST_NAME = ''H'' THEN ''Hospitalization'' 
		WHEN SCHSTATUS.SCHST_NAME = ''R'' THEN ''Refused''
		WHEN SCHSTATUS.SCHST_NAME = ''S'' THEN ''Scheduled''
		WHEN SCHSTATUS.SCHST_NAME = ''NS'' THEN ''Caregiver No Show'' 
		WHEN SCHSTATUS.SCHST_NAME = ''T'' THEN ''Telephony Completed'' 
		WHEN SCHSTATUS.SCHST_NAME = ''AVAIL'' THEN ''Available Hours'' 	
	   	WHEN SCHSTATUS.SCHST_NAME = ''HOLD'' THEN ''On Hold- Misc Reason'' 
	   WHEN SCHSTATUS.SCHST_NAME = ''OPEN'' THEN ''Open Shift''
	   WHEN SCHSTATUS.SCHST_NAME = ''XCG'' THEN ''Cancelled by caregiver''
	   WHEN SCHSTATUS.SCHST_NAME = ''XC'' THEN ''Cancelled by client''
	   WHEN SCHSTATUS.SCHST_NAME = ''XO'' THEN ''Cancelled no staff''
   	   WHEN SCHSTATUS.SCHST_NAME = ''XX'' THEN ''Delete Shift''
   	   WHEN SCHSTATUS.SCHST_NAME IN (''NTS'',''NTS_'') THEN ''No Time Sheet''
   	   WHEN SCHSTATUS.SCHST_NAME = ''TCOR'' THEN ''Telephony Needs Correction''
   	   WHEN SCHSTATUS.SCHST_NAME = ''TH'' THEN ''Telehealth''
		ELSE NULL END AS DISC_VISIT_STATUS
		
		FROM DISC_PROD.MATRIXCARE.STVHC_T_SCHEDULES AS SCH
		LEFT JOIN DISC_PROD.MATRIXCARE.STVHC_T_SCHEDULESTATUS AS SCHSTATUS 
		ON SCH.SCH_SCHEDULESTATUSID = SCHSTATUS.SCHST_ID
		
	)
,CLIENT AS 
(
	SELECT * FROM 
	(
		SELECT CLI_ID,MASTER_ID
		FROM DISC_DEDUPE_PROD.MATRIXCARE.CLIENT_MASTER_LIST 
	) 
	UNION
	SELECT * FROM 
	(
		SELECT DISTINCT ID AS CLI_ID,MASTER_ID
		FROM DISC_DEDUPE_PROD.MATRIXCARE.CLIENT_MATCH_LIST
		WHERE CLI_ID NOT IN (SELECT CLI_ID FROM DISC_DEDUPE_PROD.MATRIXCARE.CLIENT_MASTER_LIST)
	)),
CONFIRMED_VISITS AS (
SELECT DISTINCT 
TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', SCH_STARTTIME))) AS VISIT_DATE --Convert timezone as per ''America/New_York''
,7 AS SOURCE_SYSTEM_ID		
,COALESCE(CLI.MASTER_ID,SCH_CLIENTID) AS CLIENT_NUMBER
,''MATRIXCARE'' AS SYSTEM_CODE
,CASE 
		WHEN DISC_VISIT_STATUS =''Scheduled'' AND SCH.SCH_CAREGIVERID IS NULL AND SCH.SCH_STARTTIME > CURRENT_DATE() THEN ''01OPENFUTURE'' 
		WHEN DISC_VISIT_STATUS =''Scheduled'' AND SCH.SCH_CAREGIVERID IS NOT NULL AND SCH.SCH_STARTTIME > CURRENT_DATE() THEN ''01FUTURE''
		WHEN DISC_VISIT_STATUS =''Scheduled'' AND SCH.SCH_CAREGIVERID IS NULL AND SCH.SCH_STARTTIME <= CURRENT_DATE() THEN ''01OPEN'' 
		WHEN DISC_VISIT_STATUS =''Scheduled'' AND SCH.SCH_CAREGIVERID IS NOT NULL AND SCH.SCH_STARTTIME <= CURRENT_DATE() THEN ''Scheduled'' 
		ELSE DISC_VISIT_STATUS END
		AS DERIVED_DISC_STATUS

FROM DISC_PROD.MATRIXCARE.STVHC_T_SCHEDULES AS SCH
LEFT JOIN CLIENT AS CLI ON CLI.CLI_ID = SCH.SCH_CLIENTID
LEFT JOIN DISC_STATUS_DATA 	ON DISC_STATUS_DATA.SCH_ID = SCH.SCH_ID 
WHERE DERIVED_DISC_STATUS IN (''Completed'',''Telephony Completed'',''Billed'',''Paid'',''Partially Paid'')) 
,CLIENT_PHONENUMBER_LIST AS (
	SELECT *
	FROM (
		SELECT T.CLPH_ID, T.CLPH_CLIENTID, T.CLPH_PHONETYPE, TRIM(T.CLPH_PHONE) AS CLPH_PHONE,
			ROW_NUMBER() OVER (PARTITION BY T.CLPH_CLIENTID, T.CLPH_PHONETYPE ORDER BY T.CLPH_SEQUENCE DESC) AS RN,
			MAX(T.ETL_LAST_UPDATED_DATE) OVER (PARTITION BY T.CLPH_CLIENTID) AS ETL_LAST_UPDATED_DATE
		FROM DISC_PROD.MATRIXCARE.STVHC_T_CLIENTPHONES T
	) AS L
	WHERE L.RN = 1
), 
CLIENT_PHONENUMBER AS
(
	SELECT L.CLPH_CLIENTID, L.ETL_LAST_UPDATED_DATE,
		FAX.CLPH_PHONE AS CLIENT_FAX_NUMBER,
		HOME.CLPH_PHONE AS CLIENT_HOME_PHONE,
		WORK.CLPH_PHONE AS CLIENT_WORK_PHONE,
		CELL.CLPH_PHONE AS CLIENT_CELL_PHONE
	FROM (
		SELECT DISTINCT CLPH_CLIENTID, ETL_LAST_UPDATED_DATE
		FROM CLIENT_PHONENUMBER_LIST
	) AS L
	LEFT JOIN CLIENT_PHONENUMBER_LIST AS FAX
		ON FAX.CLPH_CLIENTID = L.CLPH_CLIENTID AND FAX.CLPH_PHONETYPE = 1
	LEFT JOIN CLIENT_PHONENUMBER_LIST AS HOME
		ON HOME.CLPH_CLIENTID = L.CLPH_CLIENTID AND HOME.CLPH_PHONETYPE = 2
	LEFT JOIN CLIENT_PHONENUMBER_LIST AS WORK
		ON WORK.CLPH_CLIENTID = L.CLPH_CLIENTID AND WORK.CLPH_PHONETYPE = 3
	LEFT JOIN CLIENT_PHONENUMBER_LIST AS CELL
		ON CELL.CLPH_CLIENTID = L.CLPH_CLIENTID AND CELL.CLPH_PHONETYPE = 4
),
CLIENT_DISTINCT AS
( 
	SELECT * FROM 
	(
		SELECT A.* --, MASTER_CLIENT_KEY,MASTER_CLIENT_NUMBER
--		,CASE WHEN B.MASTER_CLIENT_KEY IS NOT NULL THEN 
--		ROW_NUMBER() OVER (PARTITION BY B.MASTER_CLIENT_KEY ORDER BY B.CLIENT_NUMBER DESC  ) 
--			ELSE 1  END AS RN 
		FROM DISC_DEDUPE_PROD.MATRIXCARE.CLIENT_MASTER_LIST A
--		LEFT JOIN DISC_PROD.MATRIXCARE.MATRIXCARE_MASTER_CLIENT_MAPPING_ALL B ON A.CLI_ID= B.CLIENT_NUMBER 
	) 	--WHERE RN =1
),
FIRST_SERVICE_DATE AS (
    SELECT A.CLIENT_NUMBER  AS CLIENTNUMBER, 
--MIN(TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', FSD.SERVICE_START_DATE)))) as SERVICE_START_DATE, 
MIN(A.VISIT_DATE) as SERVICE_START_DATE,  --Convert timezone as per ''America/New_York''
MAX(CASE WHEN A.VISIT_DATE <= current_date()THEN A.VISIT_DATE ELSE NULL END) as SERVICE_END_DATE     ----Convert timezone as per ''America/New_York''
--MAX(SCH_STARTTIME) as SERVICE_END_DATE 
    FROM CONFIRMED_VISITS A
--    LEFT JOIN DISC_DEDUPE_PROD.MATRIXCARE.CLIENT_MASTER_LIST B On A.CLIENTID = B.MASTER_ID
    GROUP BY A.CLIENT_NUMBER
),
DISCHARGE_REASON AS (SELECT DISTINCT ADM_CLIENTID,ADM_BRANCHID,
FIRST_VALUE(TRIM(ADM_DISCHARGEREASONID)) OVER (PARTITION BY ADM_CLIENTID,ADM_BRANCHID ORDER BY ADM_ACTUALSOCDATE DESC) AS ADM_DISCHARGEREASONID
FROM DISC_PROD.MATRIXCARE.STVHC_T_ADMISSIONS) 
SELECT DISTINCT
	--MD5( ''MATRIXCARE'' || ''-'' || NVL(COALESCE (MASTER_ID::STRING,CLI_ID::STRING),'''') || ''-'' || ''MATRIXCARE'') CLIENT_KEY
    MD5( ''MATRIXCARE'' || ''-'' || MASTER_ID::STRING || ''-'' || ''MATRIXCARE'') CLIENT_KEY
	--COALESCE (MASTER_CLIENT_KEY, MD5(''MATRIXCARE'' || ''-'' || CLI_ID || ''-'' || ''MATRIXCARE'')) AS CLIENT_KEY
	,COALESCE(MASTER_ID, CLI_ID) AS CLIENT_NUMBER
	,''MATRIXCARE'' AS SYSTEM_CODE
	,7 AS SOURCE_SYSTEM_ID
	,MD5(CLI_SSN) AS CLIENT_PID
	,NULL AS CLIENT_MEDICARE_ID
	,CASE COALESCE(CLIENT_BRANCH.OFFICE_STATE_CODE, ''IN'')
		WHEN ''MI'' THEN IFF(LEN(TRIM(REPLACE(CLI_HIC, ''-'')))=10 AND TRY_TO_NUMERIC(TRIM(REPLACE(CLI_HIC, ''-''))) IS NOT NULL, TRIM(REPLACE(CLI_HIC, ''-'')),NULL)
		WHEN ''IN'' THEN IFF(LEN(TRIM(REPLACE(CLI_HIC, ''-'')))=12 AND TRY_TO_NUMERIC(TRIM(REPLACE(CLI_HIC, ''-''))) IS NOT NULL, TRIM(REPLACE(CLI_HIC, ''-'')),NULL)
		ELSE NULL 
	 END AS MEDICAID_ID
	,TO_DATE(CLI_BIRTHDATE) AS CLIENT_DOB
	--,TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', CLI_BIRTHDATE))) AS CLIENT_DOB
	,NULL AS CLIENT_DATE_OF_DEATH
	,CASE WHEN UPPER(TRIM(CLI_SEX)) = ''M'' THEN ''MALE''
	WHEN UPPER(TRIM(CLI_SEX)) = ''F'' THEN ''FEMALE''
	ELSE NULL END AS CLIENT_GENDER
	,UPPER(CASE WHEN UPPER(TRIM(RACE.RCE_NAME)) LIKE ''%INDIAN%ALASKA%'' THEN ''American Indian or Alaska Native''
	WHEN UPPER(TRIM(RACE.RCE_NAME)) LIKE ''%MULTI%'' THEN ''Two or more''
	WHEN UPPER(TRIM(RACE.RCE_NAME)) LIKE ''%UNKNOWN%'' THEN NULL
	WHEN UPPER(TRIM(RACE.RCE_NAME)) LIKE ''%NATIVE HAWAIIAN OR PACIFIC ISLANDER%'' THEN ''NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER''
	WHEN  TRIM(RACE.RCE_NAME) ILIKE ''%HISPANIC%'' THEN NULL 
	ELSE REPLACE(RACE.RCE_NAME,''-'','' '')
	END) AS CLIENT_ETHNICITY,
	IFF(UPPER(TRIM(RACE.RCE_NAME)) = ''HISPANIC OR LATINO'' ,TRUE , FALSE ) AS HISPANIC_OR_LATINO
	,NULL AS CLIENT_GENDER_IDENTITY -- NA
	,NULL AS CLIENT_SEXUAL_ORIENTATION -- NA
	,NULL AS CLIENT_RACE -- NA
	,CASE TRIM(CLI.CLI_MARITALSTATUS) 
		WHEN ''D'' THEN ''Divorced''
		WHEN ''S'' THEN ''Single''
		WHEN ''W'' THEN ''Widowed''
		WHEN ''M'' THEN ''Married''
		ELSE NULL END AS CLIENT_MARITAL_STATUS
	,NULL AS CLIENT_SALUTATION
	,UPPER(TRIM(CLI_FIRSTNAME)) AS CLIENT_FIRST_NAME
	,SUBSTRING(UPPER(TRIM(CLI_MIDDLENAME)),1,10) AS CLIENT_MIDDLE_NAME
	,UPPER(TRIM(CLI_LASTNAME)) AS CLIENT_LAST_NAME
	,CONCAT(UPPER(TRIM(CLI_LASTNAME)), '', '' , UPPER(TRIM(CLI_FIRSTNAME)) , '' '',nvl(UPPER(TRIM(CLI_MIDDLENAME)),'''')) AS CLIENT_NAME
	,IFF((LEN(UPPER(CLI_ADDRESS1)))>150,NULL,(UPPER(CLI_ADDRESS1))) AS CLIENT_ADDRESS1
	,UPPER(CLI_ADDRESS2) AS CLIENT_ADDRESS2
	,UPPER(TRIM(CLI_CITY)) AS CLIENT_CITY
	,UPPER(TRIM(COALESCE(ST1.STATE_ISO_CODE, ST2.STATE_ISO_CODE, Z.STATE_ISO_CODE))) AS CLIENT_STATE_CODE
	,TRIM(CLI_POSTALCODE) AS CLIENT_ZIP
	,NULL AS CLIENT_CLN_ADDRESS1
	,NULL AS CLIENT_CLN_ADDRESS2
	,NULL AS CLIENT_CLN_CITY
	,NULL AS CLIENT_CLN_STATE_CODE
	,NULL AS CLIENT_CLN_ZIP
	,NULL AS CLIENT_STD_ADDRESS1
	,NULL AS CLIENT_STD_ADDRESS2
	,NULL AS CLIENT_STD_CITY
	,NULL AS CLIENT_STD_STATE_CODE
	,NULL AS CLIENT_STD_ZIP
	,CPH.CLIENT_HOME_PHONE
	,CPH.CLIENT_CELL_PHONE
	,CPH.CLIENT_WORK_PHONE
	,CPH.CLIENT_FAX_NUMBER
	,UPPER(TRIM(COALESCE(CLI_EMAIL,CLI_EMAIL2))) AS CLIENT_PERSONAL_EMAIL
	,CLI_CREATEDDATE AS REFERRAL_DATE
    --,TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', CLI_CREATEDDATE))) AS REFERRAL_DATE
	--,RD.ADM_REFERRALDATE
	,NULL AS DAYS_TO_SERVICE
	,NULL AS CONTRACT_BEGIN_DATE
	,NULL AS CONTRACT_END_DATE
	,FSD.SERVICE_START_DATE AS FIRST_SERVICE_DATE
    --,TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', FSD.SERVICE_START_DATE))) AS FIRST_SERVICE_DATE
	,FSD.SERVICE_END_DATE AS LAST_SERVICE_DATE
    --,TO_DATE(DATEADD (MINUTE , 0, CONVERT_TIMEZONE(''America/New_York'', FSD.SERVICE_END_DATE))) AS LAST_SERVICE_DATE
	,NULL AS BEGIN_DATE
	,NULL AS END_DATE
	,NULL AS ACTIVE_CLIENT_FLAG
	,UPPER(TRIM(CS.CLS_NAME)) AS CLIENT_STATUS									   
	,CASE  WHEN len(ADMDISC.ADMDCR_NAME) > 4995 
		   THEN LEFT(TRIM(ADMDISC.ADMDCR_NAME), 4995) 
		   ELSE TRIM(ADMDISC.ADMDCR_NAME) END AS DISCHARGE_REASON										 
	,0 AS ON_HOLD_FLAG
	,NULL AS ON_HOLD_START_DATE
	,NULL AS ON_HOLD_END_DATE
	,NULL AS ACQUIRED_FROM_COMPANY_KEY
	,NULL AS ACQUIRED_FROM_COMPANY_ID
	,NULL AS ACQUIRED_FROM_COMPANY_FULL_NAME
	,NULL AS ACQUISITION_DATE
	,NULL AS ACQUISITION_FLAG
	,NULL AS ADMISSION_DATE
	,NULL AS ADMISSION_FLAG
	,NULL AS CLIENT_CONVERTED_FLAG
	,NULL AS PRIMARY_SUPERVISOR_KEY
	,NULL AS PRIMARY_SUPERVISOR_CODE
	,NULL AS PRIMARY_SUPERVISOR_NAME
	,NULL AS SECONDARY_SUPERVISOR_KEY
	,NULL AS SECONDARY_SUPERVISOR_CODE
	,NULL AS SECONDARY_SUPERVISOR_NAME
	,COALESCE(BRANCH_MAPPING.CONVERGED_BRANCH_KEY, CLIENT_BRANCH.BRANCH_KEY, MD5(''MATRIXCARE'' || ''-'' || CLI.CLI_BRANCHID || ''-'' || ''MATRIXCARE'')) AS PRIMARY_BRANCH_KEY
	,COALESCE(CLIENT_BRANCH.DETAILED_OFFICE_NAME, BRANCH_MAPPING.CONVERGED_OFFICE_NAME, UPPER(TRIM(BR.BR_NAME)), ''Unknown'') AS PRIMARY_BRANCH_NAME
	,COALESCE(CLIENT_BRANCH.OFFICE_STATE_CODE, ''IN'') AS PRIMARY_BRANCH_STATE
	,NULL AS GUARANTOR_NAME
	,NULL AS NOTES
	,TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
	,TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE
,:STR_ETL_TASK_KEY AS ETL_TASK_KEY
,:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
	,convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE
	,CURRENT_USER as ETL_INSERTED_BY
	,convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE
	,CURRENT_USER as ETL_LAST_UPDATED_BY
	,0 as ETL_DELETED_FLAG
	,0 as ETL_INFERRED_MEMBER_FLAG
FROM CLIENT_DISTINCT CLI
LEFT JOIN FIRST_SERVICE_DATE FSD ON FSD.CLIENTNUMBER = COALESCE(MASTER_ID,CLI_ID)
LEFT JOIN HAH.DIM_STATE ST1 ON ST1.STATE_ISO_CODE = CLI.CLI_STATEORPROVINCE 
LEFT JOIN HAH.DIM_STATE ST2 ON ST1.STATE_ISO_CODE IS NULL AND UPPER(ST2.STATE_NAME) = UPPER(CLI.CLI_STATEORPROVINCE)
LEFT JOIN HAH.DIM_ZIP_CODE Z ON ST1.STATE_ISO_CODE IS NULL AND ST2.STATE_ISO_CODE IS NULL AND Z.ZIP_CODE = LEFT(TRIM(CLI.CLI_POSTALCODE), 5)
LEFT JOIN CLIENT_PHONENUMBER CPH ON CLI.MASTER_ID = CPH.CLPH_CLIENTID
LEFT JOIN DISC_PROD.MATRIXCARE.STVHC_T_RACE RACE ON RACE.RCE_ID = CLI.CLI_RACEID
LEFT JOIN DISC_PROD.MATRIXCARE.STVHC_T_CLIENTSTATUS CS ON TRIM(CLI.CLI_STATUSID) = TRIM(CS.CLS_ID)
LEFT JOIN DISCHARGE_REASON DRN ON TRIM(DRN.ADM_CLIENTID) = TRIM(CLI.CLI_ID) AND TRIM(DRN.ADM_BRANCHID) = TRIM(CLI.CLI_BRANCHID)
LEFT JOIN DISC_PROD.MATRIXCARE.STVHC_T_ADMISSIONSDISCHARGEREASONS ADMDISC ON TRIM(ADMDISC.ADMDCR_ID) = TRIM(DRN.ADM_DISCHARGEREASONID)																								 
LEFT JOIN DISC_PROD.MATRIXCARE.MATRIXCARE_MASTER_BRANCH_MAPPING AS BRANCH_MAPPING
	ON BRANCH_MAPPING.SOURCE_SYSTEM_ID = 7 AND BRANCH_MAPPING.SYSTEM_CODE = ''MATRIXCARE''
		AND BRANCH_MAPPING.OFFICE_CODE = CLI.CLI_BRANCHID::STRING
LEFT JOIN HAH.DIM_BRANCH AS CLIENT_BRANCH 
	ON CLIENT_BRANCH.SOURCE_SYSTEM_ID = 7 AND CLIENT_BRANCH.SYSTEM_CODE = ''MATRIXCARE''
		AND CLIENT_BRANCH.OFFICE_CODE = COALESCE(BRANCH_MAPPING.CONVERGED_OFFICE_CODE, CLI.CLI_BRANCHID::STRING)
LEFT JOIN DISC_PROD.MATRIXCARE.STVHC_T_BRANCHES BR ON BR.BR_ID = COALESCE(BRANCH_MAPPING.CONVERGED_OFFICE_CODE, CLI.CLI_BRANCHID::STRING)
--WHERE (CLI.ETL_LAST_UPDATED_DATE >=  
--:STR_CDC_START::timestamp_ntz
--OR CPH.ETL_LAST_UPDATED_DATE >=  
--:STR_CDC_START::timestamp_ntz
--OR RACE.ETL_LAST_UPDATED_DATE >=  
--:STR_CDC_START::timestamp_ntz
--OR CLIENT_BRANCH.ETL_LAST_UPDATED_DATE >=  
--:STR_CDC_START::timestamp_ntz)
;
;
    RETURN ''SUCCESS'';
    END;
    ';