CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_DIM_CONTRACT("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- NAME:  OSHAH_DIM_CONTRACT
--
-- PURPOSE: Creates one row per CONTRACT according to OSHAH
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 11/24/2022  Pankti Fadia           Initial Development
-- 07/12/2023  Sandesh Gosavi         update code to use config flag
-- 08/25/2023  Mirisha                updated system_code and state logic
--*****************************************************************************************************************************
INSERT OVERWRITE INTO "STAGE".OSHAH_DIM_CONTRACT

WITH STATES AS (
SELECT DISTINCT S.SERVICECODEID  ,C.STATE  FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES S
JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTS C
ON  S.CONTRACTID = C.LINKEDCONTRACTPAYERID
UNION ALL
SELECT DISTINCT S.SERVICECODEID  ,OFF.STATE  FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES S
JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYER_REPL PR ON IFNULL(PR.CONTRACTID,PR.PAYERID) = S.ContractID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYEROFFICES PO ON PR.PAYERID= PO.PAYERID 
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL OFF ON OFF.OFFICEID = PO.OFFICEID 
 ) 
SELECT DISTINCT 
--MD5(CONCAT(''OSHAH'' || ''-'' || SC.CONTRACTID  || ''-'' || NVL(CR.CONTRACTRATEID,-1) || ''-'' || NVL(SC.SERVICECODEID,-1) || ''-'' || ''HHAEXCHANGE'')
--            AS CONTRACT_KEY,
MD5(''OSHAH'' || ''-'' || SC.CONTRACTID  || ''-'' || NVL(CR.CONTRACTRATEID,-1) || ''-'' || NVL(SC.SERVICECODEID,-1)|| ''-'' || ''HHAEXCHANGE'')
            AS CONTRACT_KEY,
		SC.CONTRACTID AS CONTRACT_CODE
    	,CONCAT(''OSHAH - '',STATES.STATE) AS SYSTEM_CODE
    	, 17 AS SOURCE_SYSTEM_ID
    	, UPPER(TRIM(SC.CONTRACTNAME)) AS CONTRACT_NAME
    	, SC.SERVICECODEID::STRING AS SERVICE_CODE_ID
    	, MD5(''OSHAH'' || ''-'' || SC.SERVICECODEID || ''-'' || ''HHAEXCHANGE'') AS SERVICE_KEY
    	, NULL AS DEFAULT_BILL_CODE 
		, NULL AS PAYROLL_CODE
		, RP.REVENUE_CATEGORY AS REVENUE_CATEGORY
		, RP.REVENUE_SUBCATEGORY_CODE AS REVENUE_SUBCATEGORY_CODE
		, RP.REVENUE_SUBCATEGORY_NAME AS  REVENUE_SUBCATEGORY_NAME
    	, PR.PAYERID AS PAYOR_CODE
    	, UPPER(TRIM(PR.PAYERNAME))  AS PAYOR_DESCRIPTION
    	, REVENUE_CATEGORY AS SERVICE_LINE_CODE 
    	, UPPER(TRIM(SC.SERVICECODE)) AS SERVICE_LINE_DESCRIPTION
    	, STATES.STATE AS CONTRACT_STATE_CODE
	    , CASE
	        WHEN CR.UNITS = 1 THEN ''1HR''
	        WHEN CR.UNITS = 2 THEN ''.5HR''
	        WHEN CR.UNITS = 4 THEN ''.25HR''
	        ELSE NULL
	     END AS TIME_TRANSLATION_CODE
    	, CR.UNITS::NUMERIC AS TIME_TRANSLATION_DIVIDER
    	, NULL AS PAY_TRAVELS_CODE
    	, IFF(UPPER(VI.INCLUDEMILEAGEEXPENSE :: BOOLEAN) IS NULL,
		      UPPER(FALSE :: BOOLEAN),
		       UPPER(VI.INCLUDEMILEAGEEXPENSE :: BOOLEAN)
		     )::BOOLEAN AS MILEAGE_FLAG 
    	, NULL::BOOLEAN AS PAYABLE_FLAG
    	, CASE WHEN UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')THEN ''FALSE''
		       WHEN UPPER(VI.NONBILLABLE) = ''FALSE'' THEN UPPER(''TRUE'' :: BOOLEAN)
		       WHEN UPPER(VI.NONBILLABLE) = ''TRUE'' THEN UPPER(''FALSE'' :: BOOLEAN)
		       ELSE UPPER(VI.NONBILLABLE :: BOOLEAN)
		  END::BOOLEAN AS BILLABLE_FLAG 
    	, IFF(TIME_TRANSLATION_CODE = ''.25HR'', 1, 0)::BOOLEAN AS BILLED_BY_QUARTER_HOURS
    	, IFF(TIME_TRANSLATION_CODE = ''.5HR'', 1, 0)::BOOLEAN AS BILLED_BY_HALF_HOURS 
    	, TRIM(SC.RATETYPETEXT) AS BILL_UNIT_TYPE
    	, TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
    	, TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE
	    , :STR_ETL_TASK_KEY AS ETL_TASK_KEY
    	, :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY 
    	, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP) :: TIMESTAMP_NTZ as ETL_INSERTED_DATE
    	, CURRENT_USER as ETL_INSERTED_BY
    	, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP) :: TIMESTAMP_NTZ as ETL_UPDATED_DATE
    	, CURRENT_USER as ETL_LAST_UPDATED_BY
    	, 0::BOOLEAN AS ETL_DELETED_FLAG
    	, 0::BOOLEAN AS ETL_INFERRED_MEMBER_FLAG
FROM DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC
	LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.PAYER_REPL PR
		ON IFNULL(PR.CONTRACTID,PR.PAYERID) = sc.CONTRACTID 
	LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTS C  
 		ON SC.CONTRACTID = C.CONTRACTID
 	LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.VisitInfo_REPL VI
 		ON SC.SERVICECODEID = VI.PRIMARYSERVICECODEID
 	LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.VW_OSHAH_REVENUE RP
 	    ON SC.SERVICECODEID = RP.SERVICECODEID 
	LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.CONTRACTRATES CR ON SC.SERVICECODEID  = CR.SERVICECODEID 
    	AND CR.AGENCYID = SC.AGENCYID
    	AND CR.SERVICECODEID = SC.SERVICECODEID
    	AND CR.TODATE :: DATE > GETDATE()
    	AND CR.FROMDATE :: DATE <= GETDATE()
    LEFT JOIN STATES ON SC.SERVICECODEID = STATES.SERVICECODEID
WHERE STATES.STATE IN  (SELECT STATE FROM DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE);	   	
RETURN ''SUCCESS'';
END;
';