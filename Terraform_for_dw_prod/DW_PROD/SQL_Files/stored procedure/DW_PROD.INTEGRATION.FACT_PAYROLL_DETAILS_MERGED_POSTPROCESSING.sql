CREATE OR REPLACE PROCEDURE DW_PROD.INTEGRATION.FACT_PAYROLL_DETAILS_MERGED_POSTPROCESSING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN
	
INSERT OVERWRITE INTO DW_PROD.INTEGRATION.FACT_PAYROLL_DETAILS_MERGED
SELECT 
PD.PAYROLL_DETAIL_KEY  AS PAYROLL_DETAIL_KEY,
PD.PAYROLL_KEY  AS PAYROLL_KEY,
PD.REPORT_DATE  AS REPORT_DATE,
COALESCE(EMPLOYEE_MERGED.EMPLOYEE_KEY, PD.EMPLOYEE_KEY) AS EMPLOYEE_KEY,
PD.EMPLOYEE_KEY  AS ORIGINAL_EMPLOYEE_KEY,
COALESCE(BRANCH_MERGED.BRANCH_KEY, PD.BRANCH_KEY) AS BRANCH_KEY,
PD.BRANCH_KEY AS ORIGINAL_BRANCH_KEY,
COALESCE(EMPLOYEE_MERGED.SOURCE_SYSTEM_ID, PD.SOURCE_SYSTEM_ID) AS SOURCE_SYSTEM_ID,
PD.SOURCE_SYSTEM_ID AS ORIGINAL_SOURCE_SYSTEM_ID,
PD.PAYROLL_DATE AS PAYROLL_DATE,
COALESCE(EMPLOYEE_MERGED.EMPLOYEE_ID, PD.EMPLOYEE_ID) AS EMPLOYEE_ID,
PD.EMPLOYEE_ID AS ORIGINAL_EMPLOYEE_ID,
COALESCE(BRANCH_MERGED.DETAILED_OFFICE_NAME, PD.BRANCH_NAME) AS BRANCH_NAME,
PD.BRANCH_NAME AS ORIGINAL_BRANCH_NAME,
COALESCE(EMPLOYEE_MERGED.SYSTEM_CODE, PD.SYSTEM_CODE)  AS SYSTEM_CODE,
PD.SYSTEM_CODE AS ORIGINAL_SYSTEM_CODE,
PD.PAY_PERIOD_START_DATE AS PAY_PERIOD_START_DATE,
PD.PAY_PERIOD_END_DATE AS PAY_PERIOD_END_DATE,
PD.CHECK_NUMBER AS CHECK_NUMBER,
PD.PAY_CODE AS PAY_CODE,
PD.PAY_CODE_DESCRIPTION AS PAY_CODE_DESCRIPTION,
PD.PAY_CODE_TYPE AS PAY_CODE_TYPE,
PD.PAY_CODE_TYPE_DESCRIPTION AS PAY_CODE_TYPE_DESCRIPTION,
PD.PAY_CODE_CATEGORY AS PAY_CODE_CATEGORY,
PD.NUMBER_OF_UNITS AS NUMBER_OF_UNITS,
PD.UNIT_TYPE_CODE AS UNIT_TYPE_CODE,
PD.UNIT_TYPE_DESCRIPTION AS UNIT_TYPE_DESCRIPTION,
PD.RATE AS RATE,
PD.AMOUNT AS AMOUNT,
-1 AS ETL_TASK_KEY,
-1 AS ETL_INSERTED_TASK_KEY,
 CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
CURRENT_USER AS ETL_INSERTED_BY,
CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
CURRENT_USER AS ETL_LAST_UPDATED_BY,
 FALSE AS ETL_DELETED_FLAG
FROM DW_PROD.HAH.FACT_PAYROLL_DETAILS PD
LEFT JOIN DW_PROD.INTEGRATION.DIM_BRANCH_MERGED AS BRANCH_MERGED 
ON BRANCH_MERGED.ORIGINAL_BRANCH_KEY = PD.BRANCH_KEY
LEFT JOIN DW_PROD.INTEGRATION.DIM_EMPLOYEE_PAYROLL_MERGE_DEDUPE AS EMPLOYEE_MERGED 
ON EMPLOYEE_MERGED.ORIGINAL_EMPLOYEE_KEY = PD.EMPLOYEE_KEY
WHERE  PD.SOURCE_SYSTEM_ID NOT IN (''14'',''15'',''19'')
AND PD.SYSTEM_CODE NOT IN (''OPENSYSTEMS - PA'',''OPENSYSTEMS - DE'');

SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

return return_result;
END;

';