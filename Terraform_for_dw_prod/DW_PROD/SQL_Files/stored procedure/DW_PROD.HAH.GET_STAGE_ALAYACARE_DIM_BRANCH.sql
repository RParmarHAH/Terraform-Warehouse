CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ALAYACARE_DIM_BRANCH("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
	RETURN_RESULT VARCHAR(1000);
BEGIN
    --*****************************************************************************************************************************
-- NAME:  ALAYACARE_DIM_BRANCH
--
-- PURPOSE: Creates one row per branch according to AlayaCare 
--			Currently uses hard coding, but can build out with Discovery layer once more tables available
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 10/25/21     Mir Ali             Initial development
-- 11/03/21		Mir Ali				Revised to use independent logic
-- 05/29/23		Shikhar Saxena		Changed the logi to add SOURCE_SYSTEM_TYPE field
-- 13/10/23     TRUSHALI RAMOLIYA   ADDED A UNION INORDER TO ADD ORPHAN BRANCH_KEY
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.ALAYACARE_DIM_BRANCH 
WITH ALAYACARE_DATA AS (
	SELECT MD5(NVL(TRIM(COMPANY.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COMPANY.BRANCH_ID || '')'' || ''-'' || GROUPS.GROUP_ID || ''-'' || ''ALAYACARE'') AS BRANCH_KEY,
		UPPER(TRIM(GROUPS.PROFILE_COMPANY)) AS BRANCH_NAME,
		UPPER(TRIM(COALESCE(STATE.STATE_ISO_CODE, COMPANY.PROFILE_STATE))) AS STATE,
		NVL(TRIM(COMPANY.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COMPANY.BRANCH_ID || '')'' AS SYSTEM_CODE,
		9 AS SOURCE_SYSTEM_ID,
		GROUPS.GROUP_ID AS OFFICE_CODE,
		TRIM(REGEXP_SUBSTR(UPPER(GROUPS.PROFILE_REMARKS), ''\\\\([^)]*HAH_OFFICE_CODE:\\\\s*(\\\\w+)'', 1, 1, ''e'', 1)) AS HAH_OFFICE_CODE,
		NVL(TRY_CAST(REGEXP_SUBSTR(UPPER(GROUPS.PROFILE_REMARKS), ''\\\\([^)]*HAH_OFFICE_NUMBER:\\\\s*(\\\\w+)'', 1, 1, ''e'', 1) AS INT), -1) AS HAH_OFFICE_NUMBER
	FROM DISC_PROD.ALAYACARE.GROUPS AS GROUPS
	JOIN DISC_PROD.ALAYACARE.BRANCH AS COMPANY
		ON COMPANY.BRANCH_ID = GROUPS.BRANCH_ID 
	LEFT JOIN HAH.DIM_STATE AS STATE
		ON UPPER(TRIM(STATE.STATE_NAME)) = UPPER(TRIM(COMPANY.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION))
), RISKCONNECT_HIERARCHY AS (
	SELECT * FROM DISC_PROD.STAGE.RISKCONNECT_HIERARCHY 
), HR_OFFICE_MAPPING AS (
	SELECT * FROM DISC_PROD.STAGE.HR_OFFICE_MAPPING 
), COASTAL_OFFICE_MAPPING AS (
	SELECT * FROM DISC_PROD.STAGE.COASTAL_OFFICE_MAPPING 
), HAH_OFFICES AS (
	SELECT UPPER(TRIM(OFFICES.STATE)) AS STATE,
		TRY_CAST(OFFICES.OFFICENUMBER AS INT) AS OFFICE_NUMBER,
		OFFICES.OFFICENAME AS OFFICE_NAME,
		CASE WHEN OFFICES.OFFICENAME LIKE ''%DD%'' THEN ''DD''
			WHEN OFFICES.OFFICENAME LIKE ''%ADS%'' THEN ''ADS''
		END AS BRANCH_SERVICE_LINE,
		OFFICES.ADDRESS AS OFFICE_ADDRESS1,
		OFFICES.ADDRESS2 AS OFFICE_ADDRESS2,
		OFFICES.CITY AS OFFICE_CITY,
		OFFICES.ZIP AS OFFICE_ZIP,
		OFFICES.PHONE AS OFFICE_PHONE,
		OFFICES.TOLLFREE AS OFFICE_TOLL_FREE_PHONE,
		OFFICES.FAX AS OFFICE_FAX,
		TRIM( OFFICES.Email) AS Primary_Branch_Email,
		CAST(NULL AS VARCHAR(10)) AS Secondary_Branch_Email,
		OFFICES.OFFICEMANAGER AS OFFICEMANAGER1,
		CAST(NULL AS VARCHAR(10)) AS OFFICEMANAGER2,
		OFFICES.DATECREATED AS DATE_CREATED,
		OFFICES.ETL_LAST_UPDATED_DATE
	FROM DISC_PROD.HAHUSERS.LOGIN_OFFICE AS OFFICES
	WHERE TRY_CAST(OFFICES.OFFICENUMBER AS INT) IS NOT NULL
)
	SELECT ALAYACARE_OFFICES.BRANCH_KEY, ALAYACARE_OFFICES.BRANCH_NAME, UPPER(ALAYACARE_OFFICES.SYSTEM_CODE) AS SYSTEM_CODE, ALAYACARE_OFFICES.SOURCE_SYSTEM_ID, SOURCE_SYSTEM.SOURCE_SYSTEM_TYPE,
		ALAYACARE_OFFICES.HAH_OFFICE_NUMBER AS OFFICE_NUMBER, ALAYACARE_OFFICES.OFFICE_CODE, ALAYACARE_OFFICES.BRANCH_NAME AS OFFICE_NAME, ALAYACARE_OFFICES.BRANCH_NAME AS OFFICE_NAME_ALT,
		NULL AS DEPARTMENT_NAME, NULL AS BRANCH_SERVICE_LINE,
		TRUE AS PARENT_FLAG,
		ALAYACARE_OFFICES.BRANCH_KEY AS PARENT_BRANCH_KEY,
		ALAYACARE_OFFICES.HAH_OFFICE_NUMBER AS PARENT_OFFICE_NUMBER,
		ALAYACARE_OFFICES.OFFICE_CODE AS PARENT_OFFICE_CODE,
		ALAYACARE_OFFICES.STATE || '' - '' || ALAYACARE_OFFICES.BRANCH_NAME || '' ('' || NVL(ALAYACARE_OFFICES.HAH_OFFICE_NUMBER, -1) || ''-AC)'' AS PARENT_BRANCH_NAME,
		HAH_OFFICES.OFFICE_ADDRESS1,
		HAH_OFFICES.OFFICE_ADDRESS2,
		HAH_OFFICES.OFFICE_CITY,
		COALESCE(HAH_OFFICES.STATE, ALAYACARE_OFFICES.STATE) AS OFFICE_STATE_CODE,
		HAH_OFFICES.OFFICE_ZIP,
		HAH_OFFICES.OFFICE_PHONE,
		HAH_OFFICES.OFFICE_TOLL_FREE_PHONE,
		HAH_OFFICES.OFFICE_FAX,
		ALAYACARE_OFFICES.STATE || '' - '' || ALAYACARE_OFFICES.BRANCH_NAME || '' ('' || NVL(ALAYACARE_OFFICES.HAH_OFFICE_NUMBER, -1) || ''-AC)'' AS DETAILED_OFFICE_NAME,		
		REGIONS.REGIONNUMBER AS REGION_NUMBER,
		IFF(UPPER(TRIM(REGIONS.NAME)) = ''DD/MICHIGAN'', ''MICHIGAN'', UPPER(TRIM(REGIONS.NAME))) AS REGION_NAME,
		UPPER(TRIM(REGIONS.MANAGER)) AS REGION_MANAGER,
		NULL AS REGION_MANAGER_EMPLOYEE_KEY,
		NULL AS SUBREGION_NAME,
		UPPER(TRIM(HAH_OFFICES.OfficeManager1)) AS Primary_Branch_Manager_Name,
		TRIM(HAH_OFFICES.PRIMARY_BRANCH_EMAIL) AS PRIMARY_BRANCH_EMAIL,
		NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
		UPPER(TRIM(HAH_OFFICES.OfficeManager2)) AS Secondary_Branch_Manager_Name,
		TRIM(HAH_OFFICES.SECONDARY_BRANCH_EMAIL) AS SECONDARY_BRANCH_EMAIL,
		NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
		RISKCONNECT.NODE_KEY AS RISKCONNECT_NODE_KEY,
		RISKCONNECT.NODE_NAME AS RISKCONNECT_NAME,
		HR.HR_OFFICE_NUMBER,
		HR.HR_OFFICE_NAME,
		TRUE AS ACTIVE_FLAG,
		TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
		TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
		--- ETL FIELDS ---
        :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
        :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
        convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
		CURRENT_USER as ETL_INSERTED_BY ,
		convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
		CURRENT_USER as ETL_LAST_UPDATED_BY,
		0 as ETL_DELETED_FLAG,
		0 AS ETL_INFERRED_MEMBER_FLAG
	FROM ALAYACARE_DATA AS ALAYACARE_OFFICES
	LEFT JOIN HAH_OFFICES AS HAH_OFFICES
		ON HAH_OFFICES.STATE = ALAYACARE_OFFICES.STATE AND ALAYACARE_OFFICES.HAH_OFFICE_NUMBER = HAH_OFFICES.OFFICE_NUMBER
	LEFT JOIN HAH.DIM_STATE AS STATES 
		ON STATES.STATE_ISO_CODE = ALAYACARE_OFFICES.STATE
	LEFT OUTER JOIN RISKCONNECT_HIERARCHY AS RISKCONNECT
		ON RISKCONNECT.STATE = ALAYACARE_OFFICES.STATE AND RISKCONNECT.PARENT_LEVEL = 2
			-- If SC, h.OFFICE_CODE is Numeric office number; else for GA, it is alphanumeric location code	
			AND TRIM(RISKCONNECT.OFFICE_CODE) = IFF(TRIM(ALAYACARE_OFFICES.STATE) <> ''SC'', TRIM(ALAYACARE_OFFICES.HAH_OFFICE_CODE), ALAYACARE_OFFICES.HAH_OFFICE_NUMBER::STRING)
	LEFT OUTER JOIN HR_OFFICE_MAPPING AS HR
		ON TRIM(HR.OFFICE_CODE) = TRIM(ALAYACARE_OFFICES.HAH_OFFICE_CODE) AND TRIM(HR.STATE) = ALAYACARE_OFFICES.STATE
	LEFT JOIN DISC_PROD.HAH_REPORTING.KEYMETOFFICES AS REGION_OFFICES -- Only used for IL regions
		ON ALAYACARE_OFFICES.STATE = ''IL'' AND TRIM(REGION_OFFICES.OFFICESTATE) = ALAYACARE_OFFICES.STATE AND TRY_CAST(REGION_OFFICES.OFFICENUMBER AS INT) = ALAYACARE_OFFICES.HAH_OFFICE_NUMBER
	LEFT JOIN DISC_PROD.BI_REPOSITORY.KMREGIONS AS REGIONS
		ON (REGION_OFFICES.REGIONNUMBER IS NULL AND 
			CASE WHEN UPPER(STATES.STATE_NAME) = ''GEORGIA'' THEN ''GEORGIA/SOUTH CAROLINA''
				WHEN UPPER(STATES.STATE_NAME) = ''SOUTH CAROLINA'' THEN ''GEORGIA/SOUTH CAROLINA''
				WHEN UPPER(STATES.STATE_NAME) = ''MICHIGAN'' THEN ''DD/MICHIGAN''
				WHEN UPPER(STATES.STATE_NAME) = ''KANSAS'' THEN ''MISSOURI'' 
				WHEN UPPER(STATES.STATE_NAME) = ''IOWA'' THEN ''ILLINOIS - NORTH'' 
				WHEN UPPER(STATES.STATE_NAME) = ''MISSISSIPPI'' THEN ''MISSISSIPPI/TENNESSEE''
				WHEN UPPER(STATES.STATE_NAME) = ''TENNESSEE'' THEN ''MISSISSIPPI/TENNESSEE''
				ELSE UPPER(STATES.STATE_NAME) END = REGIONS.NAME) 
			OR (REGION_OFFICES.REGIONNUMBER = REGIONS.REGIONNUMBER)
	INNER JOIN DISC_PROD.ALAYACARE.CONFIGURATION  CONFIG
	ON CONFIG.OFFICE_STATE_CODE=COALESCE(HAH_OFFICES.STATE, ALAYACARE_OFFICES.STATE) 
	AND CONFIG.SYSTEM_CODE=ALAYACARE_OFFICES.SYSTEM_CODE
	LEFT JOIN HAH.DIM_SOURCE_SYSTEM AS SOURCE_SYSTEM ON ALAYACARE_OFFICES.SOURCE_SYSTEM_ID = SOURCE_SYSTEM.SOURCE_SYSTEM_ID
	WHERE CONFIGURATION_ACTIVE=''TRUE''
	
	-- INSERTED TWO ROWS FOR ORPHAN_BRANCH FOR BOTH AGENCY AL AND GA.-- TR 10/04/2023
UNION

SELECT 
MD5(''Georgia'' || '' ('' || ''1002'' || '')'' || ''-'' || ''Unknown'' || ''-'' || ''ALAYACARE'') AS BRANCH_KEY,
''UNKNOWN'' AS BRANCH_NAME,
''GEORGIA (1002)'' AS SYSTEM_CODE,
9 AS SOURCE_SYSTEM_ID,
''AMS'' AS SOURCE_SYSTEM_TYPE,
-1 AS OFFICE_NUMBER,
-1 AS OFFICE_CODE,
''UNKNOWN'' AS OFFICE_NAME,
''UNKNOWN'' AS OFFICE_NAME_ALT,
NULL AS DEPARTMENT_NAME,
NULL AS BRANCH_SERVICE_LINE,
FALSE AS PARENT_FLAG,
MD5(''Georgia'' || '' ('' || ''1002'' || '')'' || ''-'' || ''Unknown'' || ''-'' || ''ALAYACARE'') AS PARENT_BRANCH_KEY,
-1 AS PARENT_OFFICE_NUMBER,
-1 AS PARENT_OFFICE_CODE,
''GA - UNKNOWN(-1-AC)'' AS PARENT_BRANCH_NAME,
NULL AS OFFICE_ADDRESS1,
NULL AS OFFICE_ADDRESS2,
NULL AS OFFICE_CITY,
''GA'' AS OFFICE_STATE_CODE,
NULL AS OFFICE_ZIP,
NULL AS OFFICE_PHONE,
NULL AS OFFICE_TOLL_FREE_PHONE,
NULL AS OFFICE_FAX,
''GA - UNKNOWN(-1-AC)'' AS DETAILED_OFFICE_NAME,
-1 AS REGION_NUMBER,
NULL AS REGION_NAME,
NULL AS REGION_MANAGER,
NULL AS REGION_MANAGER_EMPLOYEE_KEY,
NULL AS SUBREGION_NAME,
NULL AS PRIMARY_BRANCH_MANAGER_NAME,
NULL AS PRIMARY_BRANCH_EMAIL,
NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
NULL AS SECONDARY_BRANCH_MANAGER_NAME,
NULL AS SECONDARY_BRANCH_EMAIL,
NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
NULL AS RISKCONNECT_NODE_KEY,
NULL AS RISKCONNECT_NAME,
NULL AS HR_OFFICE_NUMBER,
NULL AS HR_OFFICE_NAME,
FALSE AS ACTIVE_FLAG,
TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
-1 AS ETL_TASK_KEY,
-1 AS ETL_INSERTED_TASK_KEY,
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
CURRENT_USER AS ETL_INSERTED_BY,
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
CURRENT_USER AS ETL_LAST_UPDATED_BY,
0 AS ETL_DELETED_FLAG,
0 AS ETL_INFERRED_MEMBER_FLAG

UNION

SELECT 
MD5(''Alabama'' || '' ('' || ''3554'' || '')'' || ''-'' || ''Unknown'' || ''-'' || ''ALAYACARE'') AS BRANCH_KEY,
''UNKNOWN'' AS BRANCH_NAME,
''ALABAMA (3554)'' AS SYSTEM_CODE,
9 AS SOURCE_SYSTEM_ID,
''AMS'' AS SOURCE_SYSTEM_TYPE,
-1 AS OFFICE_NUMBER,
-1 AS OFFICE_CODE,
''UNKNOWN'' AS OFFICE_NAME,
''UNKNOWN'' AS OFFICE_NAME_ALT,
NULL AS DEPARTMENT_NAME,
NULL AS BRANCH_SERVICE_LINE,
FALSE AS PARENT_FLAG,
MD5(''Alabama'' || '' ('' || ''3554'' || '')'' || ''-'' || ''Unknown'' || ''-'' || ''ALAYACARE'') AS PARENT_BRANCH_KEY,
-1 AS PARENT_OFFICE_NUMBER,
-1 AS PARENT_OFFICE_CODE,
''AL - UNKNOWN(-1-AC)'' AS PARENT_BRANCH_NAME,
NULL AS OFFICE_ADDRESS1,
NULL AS OFFICE_ADDRESS2,
NULL AS OFFICE_CITY,
''AL'' AS OFFICE_STATE_CODE,
NULL AS OFFICE_ZIP,
NULL AS OFFICE_PHONE,
NULL AS OFFICE_TOLL_FREE_PHONE,
NULL AS OFFICE_FAX,
''AL - UNKNOWN(-1-AC)'' AS DETAILED_OFFICE_NAME,
-1 AS REGION_NUMBER,
NULL AS REGION_NAME,
NULL AS REGION_MANAGER,
NULL AS REGION_MANAGER_EMPLOYEE_KEY,
NULL AS SUBREGION_NAME,
NULL AS PRIMARY_BRANCH_MANAGER_NAME,
NULL AS PRIMARY_BRANCH_EMAIL,
NULL AS PRIMARY_BRANCH_MANAGER_EMPLOYEE_KEY,
NULL AS SECONDARY_BRANCH_MANAGER_NAME,
NULL AS SECONDARY_BRANCH_EMAIL,
NULL AS SECONDARY_BRANCH_MANAGER_EMPLOYEE_KEY,
NULL AS RISKCONNECT_NODE_KEY,
NULL AS RISKCONNECT_NAME,
NULL AS HR_OFFICE_NUMBER,
NULL AS HR_OFFICE_NAME,
FALSE AS ACTIVE_FLAG,
TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE,
TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
-1 AS ETL_TASK_KEY,
-1 AS ETL_INSERTED_TASK_KEY,
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
CURRENT_USER AS ETL_INSERTED_BY,
convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
CURRENT_USER AS ETL_LAST_UPDATED_BY,
0 AS ETL_DELETED_FLAG,
0 AS ETL_INFERRED_MEMBER_FLAG;

	SELECT CONCAT (''MESSAGE : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
	RETURN return_result;
          
END;
';