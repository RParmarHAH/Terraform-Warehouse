CREATE OR REPLACE PROCEDURE DW_PROD.REPORT.GET_REPORT_RPT_UNBILLED_METRICS("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN

--*****************************************************************************************************************************
-- NAME:  UNBILLED METRICS
--
-- PURPOSE: FOR RCM
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 08/06/2022  POOJA SHAH           Initial development
--*****************************************************************************************************************************

/* 
grant ownership on all procedures in schema DW_PROD.INTEGRATION TO ETL_MANAGEMENT_dEV COPY CURRENT GRANTS;
grant ownership on all procedures in schema DW_PROD.report TO ETL_MANAGEMENT_dEV COPY CURRENT GRANTS;
grant ownership on all tables in schema DW_PROD.report TO ETL_MANAGEMENT_dEV COPY CURRENT GRANTS;
CALL DW_PROD.REPORT.GET_REPORT_UNBILLED_METRICS()
*/

INSERT OVERWRITE INTO REPORT.RPT_UNBILLED_METRICS 
SELECT 
SERVICE_DATE,
REPORT_DATE  ,
ORIGINAL_BRANCH_KEY,
BRANCH_NAME, 
BRANCH_SERVICE_LINE,
OFFICE_CITY , 
OFFICE_STATE_CODE, 
STATE_BRANCH,
REGION_NAME,  
ORIGINAL_CLIENT_KEY,
CLIENT_NUMBER ,
CONTRACT_KEY,
CONTRACT_CODE ,
EMPLOYEE_ID ,
EMPLOYEENAME ,  
SYSTEM_CODE ,
SUPERVISOR_CODE ,
SUPERVISOR_NAME , 
STATUS_CODE,
STATUS_NAME,
STATUS_DESCRIPTION,
SUM(No_Of_Visits) AS NO_OF_VISITS,
SUM(HOURS_SERVED) AS HOURS_SERVED,
SUM(HOURS_AUTHORIZED) AS HOURS_AUTHORIZED, -- NEED TO BE INCLUDED AS PER MAIL BY RIHAM ON 07/04
SUM(Unbilled_Hrs) AS UNBILLED_HRS,
SUM(BILLED_HRS) AS BILLED_HRS,
SUM(REMAINING_HOURS) AS UNUSED_HOURS,
REVENUE_CATEGORY,  -- Added ON 19042022
--SOURCE_SYSTEM_NAME  
SOURCE_SYSTEM_ID,
ORIGINAL_SOURCE_SYSTEM_ID
FROM
(
SELECT 
date_trunc(''MONTH'', VISIT.SERVICE_DATE) as SERVICE_DATE,
date_trunc(''MONTH'', VISIT.REPORT_DATE) as REPORT_DATE,
BRANCH_MERGED.ORIGINAL_BRANCH_KEY, -- ADDED BY PJSHAH ON 07/04
BRANCH_MERGED.BRANCH_NAME, 
BRANCH_MERGED.BRANCH_SERVICE_LINE,
BRANCH_MERGED.OFFICE_CITY , -- Added BY PJShah ON 240320222
BRANCH_MERGED.OFFICE_STATE_CODE, -- Added BY PJShah ON 240320222
CONCAT( nvl(BRANCH_MERGED.OFFICE_STATE_CODE,''''), '' - '', nvl(BRANCH_MERGED.BRANCH_NAME,'''')) AS STATE_BRANCH,
BRANCH_MERGED.REGION_NAME,  -- Added BY PJShah ON 240320222
VISIT.ORIGINAL_CLIENT_KEY, -- ADDED BY PJSHAH ON 07/04
VISIT.CLIENT_NUMBER ,
VISIT.CONTRACT_KEY, -- ADDED BY PJSHAH ON 07/04
VISIT.CONTRACT_CODE ,
VISIT.EMPLOYEE_ID ,
(EMPLOYEE_MERGED.EMPLOYEE_FIRST_NAME || '' '' || EMPLOYEE_MERGED.EMPLOYEE_MIDDLE_NAME || '' '' ||  EMPLOYEE_MERGED.EMPLOYEE_LAST_NAME) AS EMPLOYEENAME ,  -- Added BY PJShah ON 240320222
VISIT.SYSTEM_CODE ,
VISIT.SUPERVISOR_CODE ,
SUPERVISOR_MERGED.SUPERVISOR_NAME , -- Added BY PJShah ON 240320222
--VISIT.STATUS_CODE ,
--VISIT.STATUS_DESCRIPTION
VISIT.VISIT_STATUS_CODE AS STATUS_CODE,
VISIT.VISIT_STATUS_NAME AS STATUS_NAME,
VISIT.VISIT_STATUS_DESCRIPTION AS STATUS_DESCRIPTION,
COUNT(DISTINCT VISIT_KEY) No_Of_Visits,
SUM(HOURS_SERVED) HOURS_SERVED,
SUM(INTAKE.HOURS_AUTHORIZED) HOURS_AUTHORIZED,
--CASE WHEN STATUS_CODE    IN (''02'')  THEN SUM(HOURS_SERVED) END Unbilled_Hrs,
--CASE WHEN STATUS_CODE    IN (''04'',''05'')  THEN SUM(HOURS_SERVED) END BILLED_HRS,
CASE WHEN VISIT.INVOICE_STATUS_CODE IN (''i02'')  THEN SUM(HOURS_SERVED) END Unbilled_Hrs,
CASE WHEN VISIT.INVOICE_STATUS_CODE IN (''i03'')  THEN SUM(HOURS_SERVED) END BILLED_HRS,
IFF(IFF(NVL(SUM(INTAKE.HOURS_AUTHORIZED) , 0) <= 0, NULL, NVL(SUM(VISIT.HOURS_SERVED), 0) / SUM(INTAKE.HOURS_AUTHORIZED))>1, 1, 0) AS OVER_AUTHED_CONTRACT,
--IFF(SUM(INTAKE.HOURS_AUTHORIZED)>SUM(VISIT.HOURS_SERVED), 1, NULL) AS HOURS_PENDING
IFF(SUM(INTAKE.HOURS_AUTHORIZED)>SUM(VISIT.HOURS_SERVED), SUM(INTAKE.HOURS_AUTHORIZED) - SUM(NVL(VISIT.HOURS_SERVED, 0)) , NULL) REMAINING_HOURS
,CT.REVENUE_CATEGORY  -- Added ON 19042022
,INTAKE.PRE_AUTH_NUMBER				-- Added by PJShah on 12052022
,INTAKE.BEGIN_SERVICE_DATE      	-- Added by PJShah on 12052022                 
,INTAKE.END_SERVICE_DATE			-- Added by PJShah on 12052022
,INTAKE.LATEST_AUTH_BEGIN_DATE		-- Added by PJShah on 12052022            
,INTAKE.LATEST_AUTH_END_DATE		-- Added by PJShah on 12052022
--,DS.SOURCE_SYSTEM_NAME  -- Added BY PJShah ON 12052022
,VISIT.SOURCE_SYSTEM_ID
,VISIT.ORIGINAL_SOURCE_SYSTEM_ID
,DATEDIFF(DAY,CURRENT_DATE(),INTAKE.LATEST_AUTH_END_DATE) AS EXP_AUTHS_DAYS
,IFF(INTAKE.LATEST_AUTH_END_DATE IS NOT NULL, -- NVL(INTAKE.LATEST_AUTH_END_DATE)<>'''',
CASE  WHEN (DATEDIFF(DAY,CURRENT_DATE(),INTAKE.LATEST_AUTH_END_DATE)<=15 AND DATEDIFF(DAY,CURRENT_DATE(),INTAKE.LATEST_AUTH_END_DATE) >=0 ) 
THEN ''EXPIRING''
WHEN DATEDIFF(DAY,CURRENT_DATE(),INTAKE.LATEST_AUTH_END_DATE)<0 THEN ''EXPIRED''
ELSE ''INFORCE'' END 
, ''NA'')
AS EXP_AUTHS
--SELECT COUNT(1)
FROM --DW_PROD.HAH.VW_FACT_VISIT_MERGED
	DW_PROD.INTEGRATION.FACT_VISIT_MERGED AS VISIT
	LEFT JOIN DW_PROD.INTEGRATION.DIM_BRANCH_MERGED AS BRANCH_MERGED		ON BRANCH_MERGED.ORIGINAL_BRANCH_KEY = VISIT.BRANCH_KEY
	LEFT JOIN DW_PROD.INTEGRATION.DIM_CLIENT_MERGED AS CLIENT_MERGED		ON CLIENT_MERGED.ORIGINAL_CLIENT_KEY = VISIT.CLIENT_KEY
	LEFT JOIN DW_PROD.INTEGRATION.DIM_EMPLOYEE_MERGED AS EMPLOYEE_MERGED		ON EMPLOYEE_MERGED.ORIGINAL_EMPLOYEE_KEY = VISIT.EMPLOYEE_KEY
    LEFT JOIN DW_PROD.INTEGRATION.DIM_SUPERVISOR_MERGED AS SUPERVISOR_MERGED     	ON SUPERVISOR_MERGED.ORIGINAL_SUPERVISOR_KEY = VISIT.SUPERVISOR_KEY
    LEFT JOIN DW_PROD.HAH.DIM_CONTRACT CT ON CT.CONTRACT_KEY = VISIT.CONTRACT_KEY  
    LEFT JOIN DW_PROD.INTEGRATION.FACT_INTAKE_MERGED AS INTAKE	ON INTAKE.REPORT_DATE = date_trunc(''MONTH'', VISIT.REPORT_DATE) AND INTAKE.CLIENT_KEY = VISIT.CLIENT_KEY AND INTAKE.CONTRACT_KEY = VISIT.CONTRACT_KEY
	--LEFT JOIN DW_PROD.HAH.DIM_SOURCE_SYSTEM AS DS ON DS.SOURCE_SYSTEM_ID =VISIT.ORIGINAL_SOURCE_SYSTEM_ID   ---SOURCE_SYSTEM_ID 
GROUP BY 
date_trunc(''MONTH'', VISIT.SERVICE_DATE),
date_trunc(''MONTH'', VISIT.REPORT_DATE),
BRANCH_MERGED.BRANCH_NAME,
BRANCH_MERGED.BRANCH_SERVICE_LINE,
BRANCH_MERGED.OFFICE_CITY, 
BRANCH_MERGED.OFFICE_STATE_CODE,
BRANCH_MERGED.REGION_NAME,
VISIT.CLIENT_NUMBER,
VISIT.CONTRACT_CODE,
VISIT.EMPLOYEE_ID ,
EMPLOYEE_MERGED.EMPLOYEE_FIRST_NAME ,
EMPLOYEE_MERGED.EMPLOYEE_MIDDLE_NAME ,  
EMPLOYEE_MERGED.EMPLOYEE_LAST_NAME,  -- Added BY PJShah ON 240320222
VISIT.SYSTEM_CODE ,
VISIT.SUPERVISOR_CODE ,
SUPERVISOR_MERGED.SUPERVISOR_NAME , 
--VISIT.STATUS_CODE ,
--VISIT.STATUS_DESCRIPTION,
VISIT.VISIT_STATUS_CODE ,
VISIT.VISIT_STATUS_NAME,
VISIT.VISIT_STATUS_DESCRIPTION,
VISIT.INVOICE_STATUS_CODE,
CT.REVENUE_CATEGORY
,INTAKE.PRE_AUTH_NUMBER				-- Added by PJShah on 12052022
,INTAKE.BEGIN_SERVICE_DATE      	-- Added by PJShah on 12052022                 
,INTAKE.END_SERVICE_DATE			-- Added by PJShah on 12052022
,INTAKE.LATEST_AUTH_BEGIN_DATE		-- Added by PJShah on 12052022            
,INTAKE.LATEST_AUTH_END_DATE		-- Added by PJShah on 12052022;
--,SOURCE_SYSTEM_NAME
,VISIT.SOURCE_SYSTEM_ID
,VISIT.ORIGINAL_SOURCE_SYSTEM_ID
,BRANCH_MERGED.ORIGINAL_BRANCH_KEY
,VISIT.ORIGINAL_CLIENT_KEY
,VISIT.CONTRACT_KEY
)T 
GROUP BY 
SERVICE_DATE,
REPORT_DATE  ,
ORIGINAL_BRANCH_KEY,
BRANCH_NAME,
BRANCH_SERVICE_LINE, 
OFFICE_CITY , 
OFFICE_STATE_CODE, 
STATE_BRANCH,
REGION_NAME,  
ORIGINAL_CLIENT_KEY,
CLIENT_NUMBER ,
CONTRACT_KEY,
CONTRACT_CODE ,
EMPLOYEE_ID ,
EMPLOYEENAME ,  
SYSTEM_CODE ,
SUPERVISOR_CODE ,
SUPERVISOR_NAME , 
STATUS_CODE,
STATUS_NAME,
STATUS_DESCRIPTION,
REVENUE_CATEGORY,  
--,SOURCE_SYSTEM_NAME
SOURCE_SYSTEM_ID,
ORIGINAL_SOURCE_SYSTEM_ID;
	
SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
';