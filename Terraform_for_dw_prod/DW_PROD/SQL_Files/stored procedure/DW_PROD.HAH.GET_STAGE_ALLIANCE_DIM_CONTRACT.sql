CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ALLIANCE_DIM_CONTRACT("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS 'BEGIN
--*****************************************************************************************************************************
-- NAME:  ALLIANCE_DIM_CONTRACT
--
-- PURPOSE: Creates one row per contract according to ALLIANCE
--
-- DEVELOPMENT LOG:
-- DATE					AUTHOR								NOTES:
-- --------			-------------------		---------------------------------------------------------------------------------------
-- 2022-07-29		Mirisha Jarecha			Initial Development
-- 2023-01-17		Mohit Vaghadiya			Made minor changes to populate Private Pay Contract where there is no Client payor 
--											associated with Client
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.ALLIANCE_DIM_CONTRACT
WITH ALLIANCE_CONTRACTS AS
(
	SELECT DISTINCT CASE WHEN (CONTAINS(UPPER(P.BADDRESS1), C.FIRSTNAME) AND CONTAINS(UPPER(P.BADDRESS1), C.LASTNAME)) 
								OR (
										CONTAINS(UPPER(C.LASTNAME), REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\\\\\\\\\S+$''))
										OR CONTAINS(REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\\\\\\\\\S+$''), UPPER(C.LASTNAME)
										)
								) OR CT.NAME = ''Private Pay''
								  OR P.PAYORID IS NULL
								THEN TRUE
						 ELSE FALSE 
					END IS_PRIAVATE_PAY
					, MD5(''ALLIANCE'' 
								||  ''-'' || NVL(P.PAYORID, ''-1'')
								|| ''-'' || SR.SERVICECODE 
								|| ''-'' || IFF(IS_PRIAVATE_PAY, ''PRIVATEPAY'', '''')
								-- || ''-'' || IFF( C.CLIENTTYPEID=1 , ''PRIVATEPAY'',TRIM(SR.DESCRIPTION))
								|| ''-'' || ''GENERATIONS''
							) AS CONTRACT_KEY
					, CONCAT(NVL(P.PAYORID, ''-1''),''-'',SR.SERVICECODE) AS CONTRACT_CODE  
					, ''ALLIANCE'' AS SYSTEM_CODE
					, 19 AS SOURCE_SYSTEM_ID
					/*
					,	CASE WHEN C.CLIENTTYPEID=1 THEN CONCAT(''PRIVATEPAY'', '' - '', SR.DESCRIPTION)
								 WHEN C.CLIENTTYPEID !=1 OR(C.CLIENTTYPEID IS NULL AND P.BADDRESS1 IS NOT NULL AND SR.DESCRIPTION IS NOT NULL)
										THEN CONCAT(P.BADDRESS1,''-'',TRIM(SR.DESCRIPTION))	     
								 ELSE NULL 
						END AS CONTRACT_NAME
						, CONCAT(P.BADDRESS1,'' - '',TRIM(SR.DESCRIPTION)) AS CONTRACT_NAME
					*/
					, TRIM(CONCAT(NVL(P.BADDRESS1, '''')
								, IFF(IS_PRIAVATE_PAY, '' (Private Pay)'','''')
								, '' - ''
								, TRIM(SR.DESCRIPTION))
						   ) AS CONTRACT_NAME
					, SR.SERVICECODE AS SERVICE_CODE_ID
					, MD5(''ALLIANCE'' || ''-'' || SR.SERVICECODE || ''-'' || ''GENERATIONS'') AS SERVICE_KEY
					, NULL AS DEFAULT_BILL_CODE
					, NULL AS PAYROLL_CODE
					, ''HC'' AS REVENUE_CATEGORY
					, REVENUE_CATEGORY AS REVENUE_SUBCATEGORY_CODE
					, ''HOME CARE''AS REVENUE_SUBCATEGORY_NAME 
					, NVL(P.PAYORID, ''-1'') AS PAYOR_CODE
					, IFF(IS_PRIAVATE_PAY AND P.BADDRESS1 IS NULL, ''Private Pay'', P.BADDRESS1) AS PAYOR_DESCRIPTION 
					, REVENUE_CATEGORY AS SERVICE_LINE_CODE
					, REVENUE_CATEGORY AS SERVICE_LINE_DESCRIPTION
					, UPPER(TRIM(P.BSTATE)) AS CONTRACT_STATE_CODE
					, IFF(NOT(SR.FLATRATE), ''1HR'', NULL) AS TIME_TRANSLATION_CODE
					, IFF(NOT(SR.FLATRATE), 1, NULL) AS TIME_TRANSLATION_DIVIDER
					, NULL AS PAY_TRAVELS_CODE
					, IFF(SR.DESCRIPTION ILIKE ''%MIL%'', TRUE, FALSE) AS MILEAGE_FLAG
					, TRUE AS PAYABLE_FLAG
					, IFF(SR.DESCRIPTION ILIKE ''%NON%BILL%'' OR NVL(SR.COST, 0) = 0, FALSE, TRUE) AS BILLABLE_FLAG
					, FALSE AS BILLED_BY_QUARTER_HOURS 
					, FALSE AS BILLED_BY_HALF_HOURS
					, CASE WHEN SR.FLATRATE THEN ''Visit''
						   WHEN NOT(SR.FLATRATE) THEN ''Hourly''
						   ELSE NULL 
					  END AS BILL_UNIT_TYPE
	FROM DISC_PROD.GENERATIONSALLIANCE.SCHEDULES SCH
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.SERVICES SR
	    ON SR.SERVICECODE  = SCH.SERVICECODE
   	LEFT JOIN  DISC_PROD.GENERATIONSALLIANCE.CLIENT C 
	    ON C.CLIENTID = SCH.CLIENTID 
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.CLIENTPAYORS CPY
	    ON SCH.CLIENTID = CPY.CLIENTID
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.PAYOR P
	    ON P.PAYORID = CPY.PAYORID
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.CLIENTTYPE CT 
	    ON CT.CLIENTTYPEID = C.CLIENTTYPEID
	WHERE C.CLIENTID NOT IN (SELECT CLIENT_NUMBER FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_CLIENT_NUMBER WHERE SOURCE_SYSTEM_ID = 19 AND SYSTEM_CODE = ''GENERATIONS'')
			AND SCH."DATE"::DATE <= ''2022-09-30''::DATE
	UNION
	SELECT DISTINCT CASE WHEN (CONTAINS(UPPER(P.BADDRESS1), C.FIRSTNAME) AND CONTAINS(UPPER(P.BADDRESS1), C.LASTNAME)) 
							OR (
									CONTAINS(UPPER(C.LASTNAME), REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\S+$''))
									OR CONTAINS(REGEXP_SUBSTR(UPPER(P.BADDRESS1), ''\\\\\\\\S+$''), UPPER(C.LASTNAME)
									)
							) OR CT.NAME = ''Private Pay''
							  OR P.PAYORID IS NULL
							THEN TRUE
					 ELSE FALSE 
				END IS_PRIAVATE_PAY
				, MD5(''ALLIANCE'' 
							||  ''-'' || NVL(P.PAYORID, -1)
							|| ''-'' || SR.SERVICECODE 
							|| ''-'' || IFF(IS_PRIAVATE_PAY, ''PRIVATEPAY'', '''')
							-- || ''-'' || IFF( C.CLIENTTYPEID=1 , ''PRIVATEPAY'',TRIM(SR.DESCRIPTION))
							|| ''-'' || ''GENERATIONS''
						) AS CONTRACT_KEY
				, CONCAT(NVL(P.PAYORID, -1), ''-'', SR.SERVICECODE) AS CONTRACT_CODE 
				, ''ALLIANCE'' AS SYSTEM_CODE
				, 19 AS SOURCE_SYSTEM_ID
				, TRIM(CONCAT(NVL(P.BADDRESS1, '''')
							, IFF(IS_PRIAVATE_PAY, '' (Private Pay)'','''')
							, '' - ''
							, TRIM(SR.DESCRIPTION))
					  ) AS CONTRACT_NAME
				, SR.SERVICECODE AS SERVICE_CODE_ID
				, MD5(''ALLIANCE'' || ''-'' || SR.SERVICECODE || ''-'' || ''GENERATIONS'') AS SERVICE_KEY
				, NULL AS DEFAULT_BILL_CODE
				, NULL AS PAYROLL_CODE
				, ''HC'' AS REVENUE_CATEGORY
				, REVENUE_CATEGORY AS REVENUE_SUBCATEGORY_CODE
				, ''HOME CARE''AS REVENUE_SUBCATEGORY_NAME 
				, NVL(P.PAYORID, -1) AS PAYOR_CODE
				, IFF(IS_PRIAVATE_PAY AND P.BADDRESS1 IS NULL, ''Private Pay'', P.BADDRESS1) AS PAYOR_DESCRIPTION 
				, REVENUE_CATEGORY AS SERVICE_LINE_CODE
				, REVENUE_CATEGORY AS SERVICE_LINE_DESCRIPTION
				, UPPER(TRIM(P.BSTATE)) AS CONTRACT_STATE_CODE
				, IFF(NOT(SR.FLATRATE), ''1HR'', NULL) AS TIME_TRANSLATION_CODE
				, IFF(NOT(SR.FLATRATE), 1, NULL) AS TIME_TRANSLATION_DIVIDER
				, NULL AS PAY_TRAVELS_CODE
				, IFF(SR.DESCRIPTION ILIKE ''%MIL%'', TRUE, FALSE) AS MILEAGE_FLAG
				, TRUE AS PAYABLE_FLAG
				, IFF(SR.DESCRIPTION ILIKE ''%NON%BILL%'' OR NVL(SR.COST, 0) = 0, FALSE, TRUE) AS BILLABLE_FLAG
				, FALSE AS BILLED_BY_QUARTER_HOURS 
				, FALSE AS BILLED_BY_HALF_HOURS
				, CASE WHEN SR.FLATRATE THEN ''Visit''
					   WHEN NOT(SR.FLATRATE) THEN ''Hourly''
					   ELSE NULL 
				  END AS BILL_UNIT_TYPE
	FROM DISC_PROD.GENERATIONSALLIANCE.SERVICEREQUEST SRE
	INNER JOIN DISC_PROD.GENERATIONSALLIANCE.SERVICES SR
	    ON SR.SERVICECODE  = SRE.SERVICECODE
	INNER JOIN  DISC_PROD.GENERATIONSALLIANCE.CLIENT C 
	    ON C.CLIENTID = SRE.CLIENTID 
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.CLIENTPAYORS CPY
		ON CPY.CLIENTID = SRE.CLIENTID
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.PAYOR P
	    ON P.PAYORID = CPY.PAYORID
	LEFT JOIN DISC_PROD.GENERATIONSALLIANCE.CLIENTTYPE CT 
	    ON CT.CLIENTTYPEID = C.CLIENTTYPEID
	WHERE C.CLIENTID NOT IN (SELECT CLIENT_NUMBER FROM DATA_MANAGEMENT.DATA_QUALITY.INVALID_CLIENT_NUMBER WHERE SOURCE_SYSTEM_ID = 19 AND SYSTEM_CODE = ''GENERATIONS'')
	QUALIFY DENSE_RANK() OVER(PARTITION BY SRE.SERVICEREQUESTID, CPY.CLIENTID 
					  	 ORDER BY IFF(NVL(SRE.PAYORID, 0) = CPY.PAYORID, 2, NVL(CPY.ISPRIMARY, 0)::INT) DESC
						  		, IFF(NVL(SRE.PAYORID, 0) = CPY.PAYORID, 2, NVL(CPY.CURRENTPAYOR, 0)::INT) DESC) = 1
)
SELECT CONTRACT_KEY
			, CONTRACT_CODE
			, SYSTEM_CODE
			, SOURCE_SYSTEM_ID
			, CONTRACT_NAME
			, SERVICE_CODE_ID
			, SERVICE_KEY
			, DEFAULT_BILL_CODE
			, PAYROLL_CODE
			, REVENUE_CATEGORY
			, REVENUE_SUBCATEGORY_CODE
			, REVENUE_SUBCATEGORY_NAME
			, PAYOR_CODE
			, PAYOR_DESCRIPTION
			, SERVICE_LINE_CODE
			, SERVICE_LINE_DESCRIPTION
			, CONTRACT_STATE_CODE
			, TIME_TRANSLATION_CODE
			, TIME_TRANSLATION_DIVIDER
			, PAY_TRAVELS_CODE
			, MILEAGE_FLAG
			, PAYABLE_FLAG
			, BILLABLE_FLAG
			, BILLED_BY_QUARTER_HOURS
			, BILLED_BY_HALF_HOURS
			, BILL_UNIT_TYPE
			, TO_DATE(''1900-01-01'', ''YYYY-MM-DD'') AS EFFECTIVE_FROM_DATE
			, TO_DATE(''9999-12-31'', ''YYYY-MM-DD'') AS EFFECTIVE_TO_DATE,
			:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
			:STR_ETL_TASK_KEY ETL_INSERTED_TASK_KEY
--			 -1 AS ETL_TASK_KEY
--			, -1 AS ETL_INSERTED_TASK_KEY
			, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
			, CURRENT_USER AS ETL_INSERTED_BY
			, CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE
			, CURRENT_USER AS ETL_LAST_UPDATED_BY
			, 0 AS ETL_DELETED_FLAG
			, 0 AS ETL_INFERRED_MEMBER_FLAG
FROM ALLIANCE_CONTRACTS;
RETURN ''SUCCESS'';
END';