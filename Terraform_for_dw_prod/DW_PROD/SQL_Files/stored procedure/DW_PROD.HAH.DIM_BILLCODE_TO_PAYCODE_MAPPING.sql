CREATE OR REPLACE PROCEDURE DW_PROD.HAH.DIM_BILLCODE_TO_PAYCODE_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS '
        var sql = `
    INSERT OVERWRITE INTO DW_PROD.HAH.DIM_BILLCODE_TO_PAYCODE_MAPPING
WITH Z1 as 
(SELECT 
  ZIP,
  MAX(CASE WHEN COUNTY=''COOK'' THEN 1 ELSE 0 END ) AS HAS_COOK_COUNTY,
  MAX(ISCHICAGOZIP) AS HAS_CHICAGO,
  MAX(ZIPINMULTIPLECITIES) AS HAS_CITIES,
  MAX(ISCITYOPTOUT) AS HAS_OPT_OUT
  FROM "DISC_PROD"."HAH_APPS"."DF_PAYROLL_VILLINOISZIPCITYINFO"
  GROUP BY ZIP
),
Z2 AS
(
  SELECT 
  ZIP,
  COMPARABLECITYNAME,
  MAX(CASE WHEN COUNTY=''COOK'' THEN 1 ELSE 0 END) AS HAS_COOK_COUNTY,
  MAX(ISCHICAGOZIP) AS HAS_CHICAGO,
  MAX(ZIPINMULTIPLECITIES) AS HAS_CITIES,
  MAX(ISCITYOPTOUT) AS HAS_OPT_OUT
  FROM "DISC_PROD"."HAH_APPS"."DF_PAYROLL_VILLINOISZIPCITYINFO"
  GROUP BY ZIP,COMPARABLECITYNAME
),
IL_BILLCODE AS
(
SELECT DISTINCT
T.DBNAME,
T.BILLCODE,
CASE WHEN Z1.HAS_CHICAGO = 1 THEN 
        CASE WHEN Z1.HAS_CITIES = 1 THEN Z2.HAS_CHICAGO ELSE 1 END
    ELSE 0 END AS CLIENT_IN_CHICAGO,
CASE WHEN Z1.HAS_COOK_COUNTY = 1 THEN 
        CASE WHEN Z1.HAS_CITIES = 1 THEN Z2.HAS_COOK_COUNTY - Z2.HAS_OPT_OUT ELSE 1-Z2.HAS_OPT_OUT END
    ELSE 0 END AS CLIENT_IN_COOK,
CASE WHEN CLIENT_IN_CHICAGO = 1 THEN CONCAT(RTRIM(T.BILLCODE),''CH'') 
        ELSE CASE WHEN CLIENT_IN_COOK = 1 THEN CONCAT(RTRIM(T.BILLCODE),''CO'') ELSE CONCAT(RTRIM(T.BILLCODE),''IL'') END
        END AS PAYCODE,
CASE WHEN CLIENT_IN_CHICAGO = 1 THEN CONCAT(RTRIM(T.BILLCODE),''JG'') 
        ELSE CASE WHEN CLIENT_IN_COOK = 1 THEN CONCAT(RTRIM(T.BILLCODE),''JK'') ELSE CONCAT(RTRIM(T.BILLCODE),''IL'') END
        END AS PRIORTOJUNE_PAYCODE
FROM "DISC_PROD"."DATAFLEXSYNCDATA"."DFTIMESHEETS" T
LEFT JOIN "DISC_PROD"."DATAFLEXSYNCDATA"."DFCLIENTS" C ON T.DBNAME=C.DBNAME AND T.CLIENTNUMBER=C.NUMBER
LEFT JOIN Z1 ON Z1.ZIP = C.ZIP
LEFT JOIN Z2 ON Z2.ZIP = C.ZIP AND Z2.COMPARABLECITYNAME = C.CITY
LEFT JOIN "DISC_PROD"."DATAFLEXSYNCDATA"."APP_PAYROLL_PAYCODEMAPPING"  PayCodeMapping
ON PayCodeMapping.DbName = T.DbName
AND PayCodeMapping.DfBillCode = T.BillCode
where COALESCE(PayCodeMapping.Exclude, 0) = 0  AND T.BILLCODE NOT IN (''OTM'')
AND T.DBNAME = ''IL''
),
AL_DATA AS (
SELECT DISTINCT DBNAME,DFBILLCODE AS BILL_CODE,NULL AS CLIENT_IN_CHICAGO,NULL AS CLIENT_IN_COOK,
  GPPAYCODE AS PAY_CODE
FROM "DISC_PROD"."DATAFLEXSYNCDATA"."APP_PAYROLL_PAYCODEMAPPING" M WHERE M.EXCLUDE=0 
)
SELECT DISTINCT 
T.DBNAME AS SYSTEM_CODE,
T.BILLCODE AS BILL_CODE,
CASE WHEN T.DBNAME=''IL'' THEN IL.PAYCODE ELSE
    CASE WHEN T.DBNAME=''AL'' THEN COALESCE(AL.PAY_CODE,RTRIM(T.BILLCODE)) ELSE
        RTRIM(T.BILLCODE) END 
     END AS PAY_CODE,
CASE WHEN T.DBNAME=''IL'' THEN IL.PRIORTOJUNE_PAYCODE ELSE
    CASE WHEN T.DBNAME=''AL'' THEN COALESCE(AL.PAY_CODE,RTRIM(T.BILLCODE)) ELSE
        RTRIM(T.BILLCODE) END 
     END AS PRIORTOJULY_PAYCODE,
3 AS BILL_CODE_SOURCE_SYSTEM_ID,
5 AS PAY_CODE_SOURCE_SYSTEM_ID,
COALESCE(IL.CLIENT_IN_COOK,0) AS CLIENT_IN_COOK,
COALESCE(IL.CLIENT_IN_CHICAGO,0) AS CLIENT_IN_CHICAGO
FROM "DISC_PROD"."DATAFLEXSYNCDATA"."DFTIMESHEETS" T
LEFT JOIN IL_BILLCODE IL ON T.BILLCODE=IL.BILLCODE AND T.DBNAME=IL.DBNAME AND T.DBNAME=''IL''
LEFT JOIN AL_DATA AL ON T.BILLCODE=AL.BILL_CODE AND T.DBNAME=AL.DBNAME AND T.DBNAME=''AL'';
`;
          try {
                snowflake.execute (
                    {sqlText: sql}
                    );
                return "Succeeded.";   // Return a success/error indicator.
                }
            catch (err)  {
                return "Failed: " + err;   // Return a success/error indicator.
                }  
          ';