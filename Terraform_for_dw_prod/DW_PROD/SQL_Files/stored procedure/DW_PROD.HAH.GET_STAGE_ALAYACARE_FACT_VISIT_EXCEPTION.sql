CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ALAYACARE_FACT_VISIT_EXCEPTION("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '

BEGIN
--*****************************************************************************************************************************
-- NAME:  ALAYACARE_FACT_VISIT_EXCEPTION
--
-- PURPOSE: Creates one row per visit per exception according to ALAYACARE
--
-- DEVELOPMENT LOG:
-- DATE			AUTHOR					NOTES:
-- --------		-------------------		---------------------------------------------------------------------------------------
-- 12/1/2022	Abhishek Sunil			Initial Development
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.ALAYACARE_FACT_VISIT_EXCEPTION
WITH CLIENT AS
(
	SELECT * FROM 
	(
		SELECT CLIENT_ID,MASTER_ID,CLIENT_ID AS ORIGINAL_RECORD_ID,GUID,BRANCH_ID
		FROM  DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MASTER_LIST 
	)
	UNION
	SELECT * FROM 
	(
		SELECT DISTINCT ID,MASTER_ID,ID AS ORIGINAL_RECORD_ID,GUID,BRANCH_ID
		FROM DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MATCH_LIST 
		WHERE ID NOT IN (SELECT CLIENT_ID FROM DISC_DEDUPE_PROD.ALAYACARE.CLIENT_MASTER_LIST) 
	)
)
, DUP_VISIT_HANDLING AS (
	SELECT
		*
	FROM
		DISC_PROD.ALAYACARE.EVV_VISIT VISITS
	QUALIFY ROW_NUMBER() OVER (PARTITION BY ALAYACARE_VISIT_ID, BRANCH_ID ORDER BY UPDATED_ON DESC) = 1
) --1,129,185
, EXCEPTIONS AS (
	SELECT
		DISTINCT
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' || ''-'' || VISITS.ALAYACARE_VISIT_ID || ''-'' || exc.value:"code"::STRING || ''-'' || NVL(TRIM(exc.value:reason_code::STRING),''Unknown'') || ''-'' || ''ALAYACARE'') AS VISIT_EXCEPTION_KEY,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' || ''-'' || VISITS.ALAYACARE_VISIT_ID || ''-'' || ''ALAYACARE'') AS VISIT_KEY,
		VISITS.START_AT::DATE AS SERVICE_DATE,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' || ''-'' || NVL(TRIM(GROUPS.GROUP_ID),''Unknown'') || ''-'' || ''ALAYACARE'') AS BRANCH_KEY,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')''|| ''-'' || NVL(TO_VARCHAR(SERVICES.SERVICE_FUNDER_ID), ''Unknown'') || ''-'' || NVL(TO_VARCHAR(NVL(VISITS.SERVICE_SERVICE_CODE_ID::INT,SERVICES.SERVICE_CODE_ID::INT)), ''Unknown'') || ''-'' || ''ALAYACARE'') AS CONTRACT_KEY, 
		9 AS SOURCE_SYSTEM_ID,
		NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'' AS SYSTEM_CODE,
		exc.value:"code"::STRING AS EXCEPTION_CODE,
		exc.value:"name"::STRING AS EXCEPTION_DESC,
		CASE
			WHEN exc.value:"ACKNOWLEDGED_FLAG"::BOOLEAN = TRUE THEN TRUE
			WHEN exc.value:"ACKNOWLEDGED_FLAG"::BOOLEAN = FALSE AND UPPER(exc.value:"status"::STRING) = ''RESOLVED'' THEN TRUE
			WHEN exc.value:"ACKNOWLEDGED_FLAG"::BOOLEAN = FALSE THEN FALSE 
		END AS ACKNOWLEDGED_FLAG,
		CASE UPPER(exc.value:"status"::STRING)
			WHEN ''RESOLVED'' THEN TRUE
			WHEN ''UNRESOLVED'' THEN FALSE
		END AS RESOLVED_FLAG,
		TRIM(exc.value:reason_code::STRING) AS REASON_CODE,
		TRIM(exc.value:reason_name::STRING) AS REASON_NAME,
		TRIM(exc.value:resolution_code::STRING) AS RESOLUTION_CODE,
		TRIM(exc.value:resolution_name::STRING) AS RESOLUTION_NAME
	FROM
		DUP_VISIT_HANDLING VISITS
	INNER JOIN -- TO ONLY GET exceptions OF the visits that ARE IN FACT_VISIT AND EXCLUDE ORPHANS
		DISC_PROD.ALAYACARE.VISIT V
		ON V.VISIT_ID = VISITS.ALAYACARE_VISIT_ID
	LEFT JOIN CLIENT C 
		ON VISITS.ALAYACARE_CLIENT_ID = C.CLIENT_ID
			AND VISITS.BRANCH_ID = C.BRANCH_ID
	LEFT JOIN DISC_PROD.ALAYACARE.BRANCH B
		ON VISITS.BRANCH_ID = B.BRANCH_ID
	LEFT JOIN DISC_PROD.ALAYACARE.SERVICE AS SERVICES 
		ON VISITS.ALAYACARE_SERVICE_ID = SERVICES.SERVICE_ID 
			AND VISITS.BRANCH_ID = SERVICES.BRANCH_ID
	LEFT JOIN DISC_PROD.ALAYACARE.TBL_GUID_COST_CENTRE_TIER_4 COST_CENTRE_MAPPING 
		ON COST_CENTRE_MAPPING.GUID_TO = C.GUID
	LEFT JOIN DISC_PROD.ALAYACARE.TBL_COST_CENTRES_TIER_4 AS COST_CENTRE 
		ON COST_CENTRE.ID = COST_CENTRE_MAPPING.COST_CENTRE_ID
	LEFT JOIN DISC_PROD.ALAYACARE.GROUPS AS GROUPS 
		ON GROUPS.BRANCH_ID = COST_CENTRE.PROPERTIES_BRANCH_ID
			AND GROUPS.PROFILE_COMPANY = COST_CENTRE.PROPERTIES_DESCRIPTION
	,LATERAL FLATTEN(INPUT => VISITS.EXCEPTIONS) exc 
)
SELECT
	DATA.VISIT_EXCEPTION_KEY,
	DATA.VISIT_KEY,
	VE.EXCEPTION_KEY,
	DATA.SERVICE_DATE,
	DATA.SOURCE_SYSTEM_ID,
	UPPER(DATA.SYSTEM_CODE) AS SYSTEM_CODE,
	VE.EXCEPTION_CODE,
	DATA.ACKNOWLEDGED_FLAG,
	DATA.RESOLVED_FLAG,
	DATA.REASON_CODE,
	DATA.REASON_NAME,
	DATA.RESOLUTION_CODE,
	DATA.RESOLUTION_NAME,
	:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
	:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
	CURRENT_USER AS ETL_INSERTED_BY ,
	convert_timezone(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_LAST_UPDATED_DATE,
	CURRENT_USER AS ETL_LAST_UPDATED_BY,
	FALSE AS ETL_DELETED_FLAG
FROM
	EXCEPTIONS DATA
LEFT JOIN 
	HAH.DIM_VISIT_EXCEPTION VE 
	ON VE.EXCEPTION_CODE = DATA.EXCEPTION_CODE 
	AND VE.SOURCE_SYSTEM_ID = DATA.SOURCE_SYSTEM_ID 
	AND VE.SYSTEM_CODE = UPPER(DATA.SYSTEM_CODE)
LEFT JOIN
	HAH.FACT_SYSTEM_CUTOVER_DATE AS CUTOVER 
	ON CUTOVER.SOURCE_SYSTEM_ID = DATA.SOURCE_SYSTEM_ID
	AND CUTOVER.SYSTEM_CODE = DATA.SYSTEM_CODE
	AND NVL(CUTOVER.BRANCH_KEY, DATA.BRANCH_KEY) = DATA.BRANCH_KEY
	AND NVL(CUTOVER.CONTRACT_KEY, DATA.CONTRACT_KEY) = DATA.CONTRACT_KEY
INNER JOIN 
	DISC_PROD.ALAYACARE.CONFIGURATION CONFIG 
	ON CONFIG.SYSTEM_CODE = DATA.SYSTEM_CODE
	AND CONFIG.CONFIGURATION_ACTIVE = TRUE
	AND CONFIG.SYSTEM_CODE IS NOT NULL
WHERE 
	DATA.SERVICE_DATE BETWEEN NVL(CUTOVER.START_DATE, DATA.SERVICE_DATE)
	AND NVL(CUTOVER.END_DATE, DATA.SERVICE_DATE); --641120
	
RETURN ''SUCCESS'';
END;

';