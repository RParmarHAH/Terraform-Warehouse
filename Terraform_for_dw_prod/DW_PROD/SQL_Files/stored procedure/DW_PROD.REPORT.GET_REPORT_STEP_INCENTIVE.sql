CREATE OR REPLACE PROCEDURE DW_PROD.REPORT.GET_REPORT_STEP_INCENTIVE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN

INSERT OVERWRITE INTO REPORT.STEP_INCENTIVE
SELECT
	IP.REGION,
	IP.STEP,
	IP.HRS_GOAL_BIWEEKLY,
	IP.FLAT_INCREASE,
	IP.REGION_NUMBER,
	CASE
		WHEN SUM(HOURS_SERVED) > (IP.HRS_GOAL_BIWEEKLY) THEN p.PERIOD_START_DATE
		ELSE NULL
	END PERIOD_START_DATE,
	CASE
		WHEN SUM(HOURS_SERVED) > (IP.HRS_GOAL_BIWEEKLY) THEN p.PERIOD_END_DATE
		ELSE NULL
	END PERIOD_END_DATE,
	CASE
		WHEN SUM(HOURS_SERVED) > (IP.HRS_GOAL_BIWEEKLY) THEN P.CHECK_DATE
		ELSE NULL
	END AS PAY_PERIOD_CHECK_DATE,
	SUM(CASE
		WHEN DC.INCLUDE_FOR_EXEC_OPS_HOURS = 1 
		 THEN HOURS_SERVED
	END) HOURS_SERVED_EXEC_OPS_HOURS,
	SUM(CASE
		WHEN DC.INCLUDE_FOR_EXEC_OPS_CLIENTS = 1
		 THEN HOURS_SERVED
		ELSE NULL
	END) HOURS_SERVED_EXEC_OPS_CLIENTS,
	SUM(CASE
		WHEN DC.INCLUDE_FOR_OPS_PERF_HOURS = 1
		 THEN HOURS_SERVED
		ELSE NULL
	END) HOURS_SERVED_OPS_PERF_HOURS,
	SUM(CASE
		WHEN DC.INCLUDE_FOR_OPS_PERF_CLIENTS = 1
		THEN HOURS_SERVED
		ELSE NULL
	END) HOURS_SERVED_OPS_PERF_CLIENTS,
	SUM(HOURS_SERVED) HOURS_SERVED,
	p.PERIOD_START_DATE ,
	p.PERIOD_END_DATE,
	P.CHECK_DATE
FROM
	REPORT.VW_REGION_BRANCH_KEY_MAPPING RB
LEFT JOIN HAH.FACT_VISIT V ON
	RB.BRANCH_KEY = V.BRANCH_KEY
LEFT JOIN REPORT.VW_DASHBOARD_CONTRACTS DC ON
	DC.CONTRACT_KEY = V.CONTRACT_KEY
LEFT JOIN HAH.FACT_BRANCH_PAYROLL_PERIODS P ON
	P.BRANCH_KEY = RB.BRANCH_KEY
	AND V.SERVICE_DATE BETWEEN P.PERIOD_START_DATE AND P.PERIOD_END_DATE
LEFT JOIN (
	SELECT
		wm.$1 AS Region,
		wm.$2 AS Step,
		wm.$3 AS Hrs_Goal_biweekly,
		wm.$4 AS Flat_Increase,
		TRIM(wm.$5) AS Region_Number
	FROM
		@DISC_PROD.STAGE.AWSAZSTAGEPROD/Files/Incentive_data (file_format => DISC_PROD.STAGE.CSV_Format) wm ) IP ON
	RB.DISPLAY_REGION_NUMBER = IP.Region_Number
WHERE
 	P.CHECK_DATE = V.PAYROLL_DATE
	AND p.PERIOD_START_DATE >= ''2022-05-15''  --2021-03-15
	AND v.PAYROLL_DATE >= ''2022-05-27''  --2021-04-02
	AND v.SOURCE_SYSTEM_ID = 3
	AND v.SYSTEM_CODE = ''IL''
	AND (DC.INCLUDE_FOR_EXEC_OPS_CLIENTS =1 OR DC.INCLUDE_FOR_EXEC_OPS_HOURS =1 
	OR DC.INCLUDE_FOR_OPS_PERF_CLIENTS =1 OR DC.INCLUDE_FOR_OPS_PERF_HOURS =1)
GROUP BY p.PERIOD_START_DATE,
	p.PERIOD_END_DATE,
	P.CHECK_DATE ,
	IP.REGION,
	IP.STEP,
	IP.HRS_GOAL_BIWEEKLY,
	IP.FLAT_INCREASE,
	IP.REGION_NUMBER
ORDER BY
	IP.REGION,
	IP.STEP;

SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

return return_result;
END;

';