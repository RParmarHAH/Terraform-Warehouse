CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_ALAYACARE_DIM_VISIT_STATUS_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
  RETURN_RESULT VARCHAR(1000);
BEGIN
    --*****************************************************************************************************************************
-- NAME:  		ALAYACARE_DIM_VISIT_STATUS_MAPPING
--
-- PURPOSE: 	Creates one row per Discovery layer status mapped with Business layer Status
--
-- DEVELOPMENT LOG:
-- DATE        	AUTHOR              	NOTES:
-- --------------------------------------------------------------------------------------------------------------------------
-- 08/10/22    	Saurav Purohit      	Initial Development
--*****************************************************************************************************************************
INSERT OVERWRITE INTO STAGE.ALAYACARE_DIM_VISIT_STATUS_MAPPING(VISIT_STATUS_KEY,SOURCE_SYSTEM_ID,
	SYSTEM_CODE,
	DERIVED_DISC_STATUS,
	DISC_SCHEDULE_STATUS,
	DISC_VISIT_STATUS,
	DISC_INVOICE_STATUS,
	DISC_PAYROLL_STATUS,
	SCHEDULE_STATUS_CODE,
	SCHEDULE_STATUS_NAME,
	SCHEDULE_STATUS_DESCRIPTION,
	VISIT_STATUS_CODE,
	VISIT_STATUS_NAME,
	VISIT_STATUS_DESCRIPTION,
	INVOICE_STATUS_CODE,
	INVOICE_STATUS_NAME,
	INVOICE_STATUS_DESCRIPTION,
	PAYROLL_STATUS_CODE,
	PAYROLL_STATUS_NAME,
	PAYROLL_STATUS_DESCRIPTION,
	CONFIRMED_FLAG,
	CONSISTENT_FLAG)
WITH 
INVOICE_STATUS AS (
SELECT VISITS.VISIT_ID,
--MASTER_INVOICE_STATUS,
CASE 
WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS IN (''paid'',''sent'') THEN 1 END) > 0 THEN ''BILLED''
WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS = ''void'' THEN 1 END ) > 0 THEN ''VOID''
WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS = ''deleted'' THEN 1 END ) > 0 THEN ''DELETED''
WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS = ''draft'' THEN 1 END ) > 0 THEN ''DRAFT''
--WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS IS NULL AND VISITS.IS_PAID = 1 THEN 1 END) > 0 THEN ''PAID''						---- CONFIRMED: FOR PAYROLL
WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS IS NULL AND VISITS.IS_INVOICED = 1 THEN 1 END ) > 0 THEN ''BILLED''
WHEN COUNT(CASE WHEN MASTER_INVOICE_STATUS IS NULL AND VISITS.IS_INVOICED = 0 THEN 1 END ) > 0 THEN NULL
ELSE ''UNKNOWN''
END AS INVOICE_STATUS
FROM
DISC_PROD.ALAYACARE.VISIT VISITS
LEFT JOIN  DISC_PROD.ALAYACARE.INVOICE_ITEM I ON
I.VISIT_ID = VISITS.VISIT_ID
GROUP BY VISITS.VISIT_ID
),
STATUS AS
(SELECT DISTINCT
	9 AS SOURCE_SYSTEM_ID,
	UPPER(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')'')  AS SYSTEM_CODE,
	NULL AS DISC_SCHEDULE_STATUS, 
	--
	CASE WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID = ''2'' THEN ''On Hold''
	WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NOT NULL 
	AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID <> ''2'' THEN ''Cancelled''
	WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NULL --AND VISITS.START_AT > current_timestamp() 
		AND VISITS.EMPLOYEE_ID = 2 AND OFFER.OFFER_STATUS IS NULL THEN ''Vacant''  
	WHEN WORK_SESSION.START_TIME IS NOT NULL AND WORK_SESSION.END_TIME IS NOT NULL THEN ''Completed'' 
	WHEN WORK_SESSION.START_TIME IS NOT NULL AND WORK_SESSION.END_TIME IS NULL THEN ''Clocked In''
	WHEN VISITS.END_AT < current_timestamp() AND VISITS.EMPLOYEE_ID <> 2 AND WORK_SESSION.START_TIME IS NULL THEN ''Missed''
	WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NULL AND VISITS.START_AT > current_timestamp() 
		AND VISITS.EMPLOYEE_ID <> 2 THEN ''Scheduled''
	WHEN VISITS.START_AT < current_timestamp() AND VISITS.END_AT > current_timestamp() AND WORK_SESSION.START_TIME IS NULL THEN ''Late''
	WHEN OFFER.OFFER_STATUS = ''sent'' THEN ''Offered''
ELSE NULL 
END AS DISC_VISIT_STATUS,
--
	CASE WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID = ''2'' THEN ''On Hold''
		WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NOT NULL 
				AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID <> ''2'' THEN ''Cancelled''
		WHEN ((WORK_SESSION.START_TIME IS NOT NULL AND WORK_SESSION.END_TIME IS NOT NULL AND VISITS.EMPLOYEE_ID <> 2)
				OR (VISITS.END_AT < current_timestamp() AND VISITS.EMPLOYEE_ID <> 2 AND WORK_SESSION.START_TIME IS NULL))
			AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS <> ''1'' THEN ''In Review''
		WHEN VISITS.END_AT < current_timestamp() AND VISITS.EMPLOYEE_ID <> 2 AND WORK_SESSION.START_TIME IS NULL THEN ''Missed''
		WHEN WORK_SESSION.START_TIME IS NOT NULL AND WORK_SESSION.END_TIME IS NOT NULL
			AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NULL --AND VISITS.START_AT > current_timestamp() 
			AND VISITS.EMPLOYEE_ID = 2 AND OFFER.OFFER_STATUS IS NULL
			AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS = ''1'' THEN ''Vacant - Completed''
		WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NULL --AND VISITS.START_AT > current_timestamp() 
			AND VISITS.EMPLOYEE_ID = 2  
			THEN CASE WHEN OFFER.OFFER_STATUS IS NULL 
							THEN CASE WHEN VISITS.START_AT > current_timestamp() THEN ''Vacant - Future'' ELSE ''Vacant'' END
						WHEN OFFER.OFFER_STATUS = ''closed'' THEN ''Vacant - Closed'' 
						WHEN OFFER.OFFER_STATUS = ''sent'' THEN ''Vacant - Offered''
						END
		WHEN WORK_SESSION.START_TIME IS NOT NULL AND WORK_SESSION.END_TIME IS NOT NULL THEN ''Completed''
		WHEN VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_CANCELLED_CODE_ID IS NULL AND VISITS.START_AT > current_timestamp() 
		AND VISITS.EMPLOYEE_ID <> 2 THEN ''Scheduled''
		WHEN VISITS.START_AT < current_timestamp() AND VISITS.END_AT > current_timestamp() AND WORK_SESSION.START_TIME IS NULL THEN ''Late''
		WHEN WORK_SESSION.START_TIME IS NOT NULL AND WORK_SESSION.END_TIME IS NULL THEN ''Clocked In''
		ELSE ''UNKNOWN''
	END AS DERIVED_DISC_STATUS,			-- should not be null
		--
	INVOICE_STATUS.INVOICE_STATUS AS DISC_INVOICE_STATUS,
	IFF(nvl(VISITS.VISIT_HOURS_BILL,0)>0 OR NVL(VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_HOURS_PAY,0)>0, ''Billed'', ''Unbilled'') AS INV_STATUS,				  
	--
	iff(VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS = ''1'', TRUE, FALSE) AS APPROVAL,
	md5(9 ||''-''||NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || NVL(VISITS.BRANCH_ID,-1) || '')''||''-''||NVL(DERIVED_DISC_STATUS,''Unknown'')||''-''||NVL(DISC_VISIT_STATUS,''Unknown'')||''-''||NVL(DISC_INVOICE_STATUS,''Unknown'')||''-''||INV_STATUS||''-''||APPROVAL) AS VISIT_STATUS_KEY,
	NULL AS DISC_PAYROLL_STATUS,
	--
	CASE 
		WHEN DERIVED_DISC_STATUS = ''Cancelled'' THEN ''s05''
		WHEN DERIVED_DISC_STATUS = ''On Hold'' THEN ''s04''
		WHEN DERIVED_DISC_STATUS IN (''Vacant'',''Vacant - Closed'',''Vacant - Completed'',''Vacant - Future'',''Vacant - Offered'') THEN ''s02''
		ELSE ''s01'' END AS SCHEDULE_STATUS_CODE,
--
	CASE 
		WHEN DERIVED_DISC_STATUS = ''Cancelled'' THEN ''Cancelled''
		WHEN DERIVED_DISC_STATUS = ''On Hold'' THEN ''Hold''
		WHEN DERIVED_DISC_STATUS IN (''Vacant'',''Vacant - Closed'',''Vacant - Completed'',''Vacant - Future'',''Vacant - Offered'') THEN ''Scheduled-Open''
		ELSE ''Scheduled'' END AS SCHEDULE_STATUS_NAME,
--
	CASE 
		WHEN DERIVED_DISC_STATUS = ''Cancelled'' THEN ''The visit was scheduled or rescheduled and then cancelled at a later date, the visit never happened and it has a Cancel Code''
		WHEN DERIVED_DISC_STATUS = ''On Hold'' THEN ''Either client service status or client admission status is on hold. The caregiver cannot clock in and out. The visit either needs to be manually confirmed or cancelled''
		WHEN DERIVED_DISC_STATUS IN (''Vacant'',''Vacant - Closed'',''Vacant - Completed'',''Vacant - Future'',''Vacant - Offered'') THEN ''The visit has no employee assigned or it is assigned to the Vacant user (employee id = 2), and is not cancelled, on hold or offered''
		ELSE ''The visit is scheduled with an employee assigned'' END AS SCHEDULE_STATUS_DESCRIPTION,
	--
	CASE
		WHEN INVOICE_STATUS.INVOICE_STATUS IN (''BILLED'') THEN ''i03''
		WHEN INVOICE_STATUS.INVOICE_STATUS IN (''VOID'',''DELETED'',''DRAFT'') OR INVOICE_STATUS.INVOICE_STATUS IS NULL THEN 
				CASE WHEN nvl(VISITS.VISIT_HOURS_BILL,0)>0 OR NVL(VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_HOURS_PAY,0)>0 THEN ''i03'' ELSE ''i02'' END
		ELSE INVOICE_STATUS.INVOICE_STATUS
	END AS INVOICE_STATUS_CODE,
	--
	CASE
		WHEN INVOICE_STATUS.INVOICE_STATUS IN (''BILLED'') THEN ''Billed''
		WHEN INVOICE_STATUS.INVOICE_STATUS in (''VOID'',''DELETED'',''DRAFT'') OR INVOICE_STATUS.INVOICE_STATUS IS NULL THEN 
				CASE WHEN nvl(VISITS.VISIT_HOURS_BILL,0)>0 OR NVL(VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_HOURS_PAY,0)>0 THEN ''Billed'' ELSE ''Unbilled'' END
	ELSE INVOICE_STATUS.INVOICE_STATUS
	END AS INVOICE_STATUS_NAME,
	--
	CASE
		WHEN INVOICE_STATUS.INVOICE_STATUS IN (''BILLED'') THEN ''The Invoice has been generated''
		WHEN INVOICE_STATUS.INVOICE_STATUS in (''VOID'',''DELETED'',''DRAFT'') OR INVOICE_STATUS.INVOICE_STATUS IS NULL THEN 
				CASE WHEN nvl(VISITS.VISIT_HOURS_BILL,0)>0 OR NVL(VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_HOURS_PAY,0)>0 THEN ''The Visit has a valid Bill or Pay amount'' ELSE ''Unbilled'' END
	ELSE INVOICE_STATUS.INVOICE_STATUS
	END AS	INVOICE_STATUS_DESCRIPTION,
--	
	CASE 
		WHEN DERIVED_DISC_STATUS IN (''Completed'',''Vacant - Completed'')
		OR (SCHEDULE_STATUS_NAME IN (''Scheduled'',''Scheduled-Open'') 
		AND INVOICE_STATUS_NAME = ''Billed'' AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS = ''1'') THEN ''v04''
		WHEN DERIVED_DISC_STATUS IN (''Cancelled'',''Missed'') THEN ''v03''
		WHEN DERIVED_DISC_STATUS IN (''Scheduled'',''Vacant - Future'') THEN ''v01''
		WHEN DERIVED_DISC_STATUS IN (''Clocked In'',''In Review'',''Late'') THEN ''v02''
		WHEN DERIVED_DISC_STATUS IN (''Vacant'',''Vacant - Closed'',''Vacant - Offered'',''On Hold'') THEN NULL
		ELSE ''UNKNOWN'' END AS VISIT_STATUS_CODE,
	--
	CASE 
		WHEN DERIVED_DISC_STATUS IN (''Completed'',''Vacant - Completed'') 
		OR (SCHEDULE_STATUS_NAME IN (''Scheduled'',''Scheduled-Open'') 
		AND INVOICE_STATUS_NAME = ''Billed'' AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS = ''1'') THEN ''Completed''
		WHEN DERIVED_DISC_STATUS IN (''Cancelled'',''Missed'') THEN ''Did not happen''
		WHEN DERIVED_DISC_STATUS IN (''Scheduled'',''Vacant - Future'') THEN ''Future''
		WHEN DERIVED_DISC_STATUS IN (''Clocked In'',''In Review'',''Late'') THEN ''In Review''
		WHEN DERIVED_DISC_STATUS IN (''Vacant'',''Vacant - Closed'',''Vacant - Offered'',''On Hold'') THEN NULL
		ELSE ''UNKNOWN'' END AS VISIT_STATUS_NAME,
--
	CASE 
		WHEN DERIVED_DISC_STATUS IN (''Completed'',''Vacant - Completed'')
		OR (SCHEDULE_STATUS_NAME IN (''Scheduled'',''Scheduled-Open'') 
		AND INVOICE_STATUS_NAME = ''Billed'' AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS = ''1'')
		THEN ''The visit has atleast one work session completed or it is billed and approved''
		WHEN DERIVED_DISC_STATUS IN (''Cancelled'',''Missed'') THEN ''The visit has a cancelled code or the visit date has passed and it has no work session recorded''
		WHEN DERIVED_DISC_STATUS IN (''Scheduled'',''Vacant - Future'') THEN ''Visit has not happened yet, the schedule is in the future and it is not cancelled or on hold either''
		WHEN DERIVED_DISC_STATUS IN (''Clocked In'',''In Review'',''Late'') THEN ''The visit date has passed and it was either missed or it was completed but errored out and needs to be reviewed by the branch staff. A visit which is clocked in and not clocked out yet or clocked in late is also considered to be in review''
		WHEN DERIVED_DISC_STATUS IN (''Vacant'',''Vacant - Closed'',''Vacant - Offered'',''On Hold'') THEN NULL
		ELSE ''UNKNOWN'' END AS VISIT_STATUS_DESCRIPTION,	
---
NULL AS PAYROLL_STATUS_CODE,
	NULL AS PAYROLL_STATUS_NAME,
	NULL AS PAYROLL_STATUS_DESCRIPTION,
	CASE WHEN visit_status_name = ''Completed''
			THEN ''YES''
		WHEN SCHEDULE_STATUS_NAME IN (''Cancelled'',''Hold'')
			THEN ''NO''
		WHEN SCHEDULE_STATUS_NAME IN (''Scheduled'',''Scheduled-Open'') AND COALESCE(VISIT_STATUS_NAME,''NULL'') <> ''Completed'' 
					AND (NVL(INVOICE_STATUS_NAME,''NULL'') = ''Unbilled'' OR (INVOICE_STATUS_NAME = ''Billed'' AND VISITS.PROPERTIES_TBL_SCHEDULER_ITEM_APPROVAL_STATUS <> ''1''))
				THEN ''NO'' 
		ELSE ''UNKNOWN'' 
		END AS CONFIRMED_FLAG,
	NULL AS CONSISTENT_FLAG
FROM DISC_PROD.ALAYACARE.VISIT AS VISITS
LEFT JOIN INVOICE_STATUS ON
INVOICE_STATUS.VISIT_ID = VISITS.VISIT_ID
LEFT JOIN DISC_PROD.ALAYACARE.BRANCH B ON
VISITS.BRANCH_ID = B.BRANCH_ID
LEFT JOIN DISC_PROD.ALAYACARE.WORK_SESSION_TIER_4 WORK_SESSION ON WORK_SESSION.VISIT_ID = VISITS.VISIT_ID
LEFT JOIN DISC_PROD.ALAYACARE.OFFER_RESPONSE OFFER ON OFFER.OFFER_GUID_TO = VISITS.GUID)
SELECT VISIT_STATUS_KEY,SOURCE_SYSTEM_ID,
	SYSTEM_CODE,
	DERIVED_DISC_STATUS,
	DISC_SCHEDULE_STATUS,
	DISC_VISIT_STATUS,
	DISC_INVOICE_STATUS,
	DISC_PAYROLL_STATUS,
	SCHEDULE_STATUS_CODE,
	SCHEDULE_STATUS_NAME,
	SCHEDULE_STATUS_DESCRIPTION,
	VISIT_STATUS_CODE,
	VISIT_STATUS_NAME,
	VISIT_STATUS_DESCRIPTION,
	INVOICE_STATUS_CODE,
	INVOICE_STATUS_NAME,
	INVOICE_STATUS_DESCRIPTION,
	PAYROLL_STATUS_CODE,
	PAYROLL_STATUS_NAME,
	PAYROLL_STATUS_DESCRIPTION,
	CONFIRMED_FLAG,
	CONSISTENT_FLAG FROM STATUS;
SELECT CONCAT (''MESSAGE : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
	RETURN return_result;
    END;
    ';