CREATE OR REPLACE PROCEDURE DW_PROD.HAH.MERGE_STAGE_DOCEBO_FACT_DOCEBO_PAYROLL()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN
    MERGE INTO HAH.FACT_DOCEBO_PAYROLL TGT USING STAGE.DOCEBO_FACT_DOCEBO_PAYROLL STAGE 
ON TGT.USER_UNIQUE_ID = STAGE.USER_UNIQUE_ID
AND TGT.COURSE_UNIQUE_ID = STAGE.COURSE_UNIQUE_ID
WHEN MATCHED THEN 
UPDATE SET 
    TGT.EMPLOYEE_PAYROLL_ID= STAGE.EMPLOYEE_PAYROLL_ID
   ,TGT.CREDIT_HOURS= STAGE.CREDIT_HOURS
   ,TGT.LOCATION= STAGE.LOCATION
   ,TGT.ETL_TASK_KEY= STAGE.ETL_TASK_KEY
   ,TGT.ETL_LAST_UPDATED_DATE= STAGE.ETL_LAST_UPDATED_DATE
   ,TGT.ETL_LAST_UPDATED_BY= STAGE.ETL_LAST_UPDATED_BY
   ,TGT.ETL_DELETED_FLAG= STAGE.ETL_DELETED_FLAG
   ,TGT.ETL_INFERRED_MEMBER_FLAG= STAGE.ETL_INFERRED_MEMBER_FLAG
WHEN NOT MATCHED THEN 
INSERT ( 
    PAYROLL_BATCH_ID
   ,PAYROLL_GROUP
   ,EMPLOYEE_PAYROLL_ID
   ,USER_UNIQUE_ID
   ,COURSE_UNIQUE_ID
   ,CREDIT_HOURS
   ,PAY_CODE
   ,PAY_DATE
   ,PAY_PERIOD_BEGIN_DATE
   ,PAY_PERIOD_END_DATE
   ,LOCATION
   ,SUPPLEMENT_DATA
   ,TIMESTAMP
   ,ETL_TASK_KEY
   ,ETL_INSERTED_TASK_KEY
   ,ETL_INSERTED_DATE
   ,ETL_INSERTED_BY
   ,ETL_LAST_UPDATED_DATE
   ,ETL_LAST_UPDATED_BY
   ,ETL_DELETED_FLAG
   ,ETL_INFERRED_MEMBER_FLAG
) 
VALUES (
    STAGE.PAYROLL_BATCH_ID
   ,STAGE.PAYROLL_GROUP
   ,STAGE.EMPLOYEE_PAYROLL_ID
   ,STAGE.USER_UNIQUE_ID
   ,STAGE.COURSE_UNIQUE_ID
   ,STAGE.CREDIT_HOURS
   ,STAGE.PAY_CODE
   ,STAGE.PAY_DATE
   ,STAGE.PAY_PERIOD_BEGIN_DATE
   ,STAGE.PAY_PERIOD_END_DATE
   ,STAGE.LOCATION
   ,STAGE.SUPPLEMENT_DATA
   ,STAGE.TIMESTAMP
   ,STAGE.ETL_TASK_KEY
   ,STAGE.ETL_INSERTED_TASK_KEY
   ,STAGE.ETL_INSERTED_DATE
   ,STAGE.ETL_INSERTED_BY
   ,STAGE.ETL_LAST_UPDATED_DATE
   ,STAGE.ETL_LAST_UPDATED_BY
   ,STAGE.ETL_DELETED_FLAG
   ,STAGE.ETL_INFERRED_MEMBER_FLAG
);
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Insrted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;
    ';