CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_COSTALSYNCDATA_DIM_INVOICE_VISIT_LINKAGE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- NAME:  COSTALSYNCDATA_DIM_INVOICE_VISIT_LINKAGE
--
-- DEVELOPMENT LOG:A
-- DATE         AUTHOR              NOTES:
-- --------     ------------------- -----------------------------------------------------------------------------------------------
-- 06/12/2023   Pradeep Thippani    Initial Developement

--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.COSTALSYNCDATA_DIM_INVOICE_VISIT_LINKAGE
SELECT  
	MD5(TRIM(TRANSACTIONS.DB) || ''-'' || TRIM(TRANSACTIONS.BILL_NUMBER) || ''-'' || CHARGES.SERVICE_DATE || ''-'' || TRIM(TRANSACTIONS.PLAN_CODE) || ''-'' || TRIM(CHARGES.PROCCODE)  || ''-'' || NVL(TRIM(UPPER(SCHEDULES.NURSE_ID)), '''') || ''-'' || ''COSTALSYNCDATA'') AS REVENUE_KEY,
	MD5(COALESCE(SCHEDULES.SCHEDULE_NUMBER,TRANSACTIONS.SCHEDULE_NUMBER) || ''-'' || COALESCE(SCHEDULES.DB,TRANSACTIONS.DB)  || ''-''  || ''COSTALSYNCDATA'') AS VISIT_KEY,
    CAST(COALESCE(SCHEDULES.SCHEDULE_NUMBER,TRANSACTIONS.SCHEDULE_NUMBER) AS VARCHAR) AS VISIT_ID,
    DATE_TRUNC(DAY,CHARGES.SERVICE_DATE::DATE) AS SERVICE_DATE,
    TRIM(TRANSACTIONS.DB) AS SYSTEM_CODE,
    CASE TRIM(TRANSACTIONS.DB) WHEN ''SHC_ALTRUS'' THEN 1 WHEN ''SHC_SAVANNAH'' THEN 2 ELSE -1 END AS SOURCE_SYSTEM_ID,
    :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
    :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,                    
    convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
    CURRENT_USER as ETL_INSERTED_BY,
    convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_UPDATED_DATE,
    CURRENT_USER as ETL_LAST_UPDATED_BY,
    0 as ETL_DELETED_FLAG
	FROM DISC_PROD.COSTALSYNCDATA.CV_BILLINGTRANSACTIONS AS TRANSACTIONS
	LEFT JOIN DISC_PROD.COSTALSYNCDATA.CV_CHARGES AS CHARGES
		ON CHARGES.DB = TRANSACTIONS.DB AND CHARGES.PATIENT_NUMBER = TRANSACTIONS.PATIENT_NUMBER AND CHARGES.BILL_NUMBER = TRANSACTIONS.BILL_NUMBER 
	LEFT JOIN DISC_PROD.COSTALSYNCDATA.CV_SCHEDULES AS SCHEDULES
		ON SCHEDULES.DB = TRANSACTIONS.DB AND SCHEDULES.SCHEDULE_NUMBER = TRANSACTIONS.SCHEDULE_NUMBER 
			AND TRIM(SCHEDULES.CONFIRMED_DURATION) NOT IN ('''', ''0000'') 
	WHERE CHARGES.SERVICE_DATE >= ''2010-01-01''
	GROUP BY TRANSACTIONS.DB, TRANSACTIONS.BILL_NUMBER,TRANSACTIONS.SCHEDULE_NUMBER, 
		TRANSACTIONS.PLAN_CODE, CHARGES.PROCCODE, 
		SCHEDULES.SCHEDULE_NUMBER, CHARGES.SERVICE_DATE,SCHEDULES.DB, 
		SCHEDULES.NURSE_ID
; 
RETURN ''SUCCESS'';
END;
';