CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_OSHAH_DIM_VISIT_STATUS_MAPPING("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
--*****************************************************************************************************************************
-- NAME:  OSHAH_DIM_VISIT_STATUS_MAPPING
--
-- PURPOSE: Mapping all visit status according to OPAL
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 12/06/2022	Leo Joy     		   Initial development
-- 07/12/2023   Sandesh Gosavi         update code to use config flag
-- 07/30/2023	Leo Joy			       Added logic for In Review status in visit_status	
-- 07/11/2023   Harshala Kadam         Updated VISIT_STATUS logic
-- 01/19/24	   Shubham Khunare	       schedule/visit Status name correction
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.OSHAH_DIM_VISIT_STATUS_MAPPING
--if a visit is rescheduled it means that visit has to deleted and on the same date another visit must be created
WITH RESCHEDULED AS 
( 
	WITH DELETEDVISIT AS 
	( 
		SELECT PATIENTID,VISITDATE FROM DISC_PROD.HHAEXCHANGEOSHAH.TBLVISITS_REPL
		WHERE DELETED=TRUE 
		GROUP BY PATIENTID ,VISITDATE 
	)
	SELECT *
	FROM DISC_PROD.HHAEXCHANGEOSHAH.TBLVISITS_REPL VISIT 
	INNER JOIN DELETEDVISIT DT 
	ON VISIT.PATIENTID =DT.PATIENTID AND VISIT.VISITDATE=DT.VISITDATE
	WHERE DELETED =FALSE 
),
--fetching the possible scenarios of the visit status from this CTE
STATUS AS ( 
SELECT 
17 AS SOURCE_SYSTEM_ID,
CONCAT(''OSHAH - '', OFFICE.STATE) AS SYSTEM_CODE,
CASE
	WHEN VISIT.ISMISSEDVISIT = 1 AND  VISIT.BILLED =1 
    THEN ''Cancelled Billed''
  	WHEN VISIT.ISMISSEDVISIT = 1 AND  UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE 
    THEN ''Cancelled Notbillable''
    WHEN  RE.VISITID IS NULL AND VISIT.ISMISSEDVISIT =''0'' AND VISIT.VISITDATE <=current_date  
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL ) 
  	    AND UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE 
    THEN ''Scheduled Notbilled In Review''
    WHEN  RE.VISITID IS NULL AND VISIT.ISMISSEDVISIT =''0'' AND VISIT.VISITDATE <=current_date  
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL ) AND  VISIT.BILLED =0 
    THEN ''Scheduled Unbilled In Review''
    WHEN  RE.VISITID IS NULL AND VISIT.ISMISSEDVISIT =''0'' AND VISIT.VISITDATE <=current_date  
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL ) AND  VISIT.BILLED =1 
    THEN ''Scheduled Billed In Review''
    WHEN  RE.VISITID IS NULL  AND VISIT.ISMISSEDVISIT = 0 AND (VISIT.VISITDATE::DATE <= GETDATE()AND VISIT.VISITSTARTTIME IS NOT NULL AND VISIT."VISITENDTIME" IS NOT NULL)AND UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE 
    THEN ''Scheduled Completed Notbilled''
    WHEN (VISIT.VISITDATE::DATE > GETDATE() OR RE.VISITID IS NULL ) AND UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE 
    THEN ''Scheduled Future Notbilled''
    WHEN VISIT.VISITDATE::DATE > GETDATE() AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = 0 AND NVL(VISIT.ISMISSEDVISIT,0)=0 AND RE.VISITID IS NULL AND  VISIT.BILLED =0 
    THEN ''Scheduled-Open Future Unbilled''
    WHEN (VISIT.VISITDATE::DATE > GETDATE() AND RE.VISITID IS NULL ) AND VISIT.BILLED =0 AND NVL(VISIT.ISMISSEDVISIT,0) =''0''
    THEN ''Scheduled Future Unbilled''
    WHEN VISIT.ISMISSEDVISIT = 1 AND  VISIT.BILLED =0 
    THEN ''Cancelled Unbilled''
    WHEN RE.VISITID IS NULL  AND VISIT.ISMISSEDVISIT = 0 AND (VISIT.VISITDATE::DATE <= GETDATE()AND VISIT.VISITSTARTTIME IS NOT NULL AND VISIT."VISITENDTIME" IS NOT NULL) AND  VISIT.BILLED =0 
    THEN ''Scheduled Completed Unbilled''
    WHEN RE.VISITID IS NULL  AND VISIT.ISMISSEDVISIT = 0 AND (VISIT.VISITDATE::DATE <=GETDATE() AND VISIT.VISITSTARTTIME IS NOT NULL AND VISIT."VISITENDTIME" IS NOT NULL ) AND  ((VISIT.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = ''0'') OR (INVOICE.VISITPAYMENTSTATUS IN (''1'',''2''))) 
    THEN ''Scheduled Completed Billed''
    WHEN  RE.VISITID IS NOT NULL AND (VISIT.BILLED =0) AND VISIT.VISITDATE <=current_date AND VISIT.ISMISSEDVISIT =''0'' 
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL )
    THEN  ''ReScheduled In Review Unbilled''
    WHEN  RE.VISITID IS NOT NULL AND VISIT.VISITDATE::DATE <= GETDATE()AND VISIT.ISMISSEDVISIT = 0 AND VISIT.VISITSTARTTIME IS NOT NULL AND VISIT."VISITENDTIME" IS NOT NULL AND UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE  
    THEN  ''ReScheduled Notbillable Completed''
    WHEN  RE.VISITID IS NOT NULL AND VISIT.VISITDATE::DATE <= GETDATE() AND VISIT.ISMISSEDVISIT = 0 AND VISIT.VISITSTARTTIME IS NOT NULL AND VISIT."VISITENDTIME" IS NOT NULL  AND  VISIT.BILLED = 0
 	THEN  ''ReScheduled Unbilled Completed''
  	WHEN  RE.VISITID IS NOT NULL  AND VISIT.VISITDATE::DATE <= GETDATE()AND VISIT.ISMISSEDVISIT = 0 AND VISIT.VISITSTARTTIME IS NOT NULL AND VISIT."VISITENDTIME" IS NOT NULL AND  ((VISIT.BILLED = 1 AND INVOICE.VISITPAYMENTSTATUS = ''0'') OR (INVOICE.VISITPAYMENTSTATUS in(''1'',''2'')))
    THEN ''ReScheduled billed Completed''
   -- WHEN (VISIT.VISITDATE::DATE < GETDATE() AND RE.VISITID IS NULL ) AND INVOICE.VISITID IS NULL AND IV.VISITID IS NOT NULL AND ((VISIT.DELETED =FALSE AND VISIT.BILLED = 1) OR ( INVOICE.VISITPAYMENTSTATUS = ''0'') OR (INVOICE.VISITPAYMENTSTATUS = ''1''))--DONE
   -- THEN ''Scheduled Completed In Review''
  	WHEN (VISIT.VISITDATE::DATE > GETDATE() OR RE.VISITID IS NULL ) AND UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE  AND IV.VISITID IS NOT NULL  AND INVOICE.VISITID IS NULL
    THEN ''Scheduled Notbilled In Review''
    WHEN (VISIT.VISITDATE::DATE > GETDATE() OR RE.VISITID IS NULL ) AND (VISIT.VISITDATE::DATE > GETDATE()) AND  VISIT.BILLED =0 AND VISIT.DELETED = TRUE 
    THEN ''Scheduled Future Unbilled''
    WHEN (VISIT.VISITDATE::DATE > GETDATE() AND  RE.VISITID IS NOT NULL ) AND  (VISIT.BILLED =0 )AND NVL(VISIT.ISMISSEDVISIT,0) =''0''
    THEN ''Rescheduled Future Unbilled''
    WHEN  RE.VISITID IS NOT NULL  AND VISIT.VISITDATE <=current_date AND VISIT.ISMISSEDVISIT =''0'' 
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL ) AND UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE 
    THEN  ''ReScheduled Notbillable In Review''
    WHEN  RE.VISITID IS NOT NULL  AND VISIT.VISITDATE <=current_date AND VISIT.ISMISSEDVISIT =''0'' 
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL )AND UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE 
		  AND VISIT.VISITSTARTTIME::DATE < GETDATE() AND VISIT.VISITENDTIME ::DATE < GETDATE()
    THEN  ''ReScheduled Notbillable Completed In Review''
    WHEN  RE.VISITID IS NOT NULL AND UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE 
    THEN  ''ReScheduled Notbillable''
    WHEN (VISIT.ISMISSEDVISIT = 1 AND VISIT.VISITDATE::DATE <= GETDATE())
    THEN ''Cancelled'' ELSE NULL
END    AS DERIVED_DISC_STATUS,
NULL AS DISC_SCHEDULE_STATUS,
NULL AS DISC_VISIT_STATUS,
NULL AS DISC_INVOICE_STATUS,
NULL AS DISC_PAYROLL_STATUS,
CASE 
		WHEN VISIT.VISITDATE::DATE > GETDATE() AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = 0 AND NVL(VISIT.ISMISSEDVISIT,0)=0 AND RE.VISITID IS NULL THEN ''s02''
		WHEN RE.VISITID IS NULL  AND VISIT.ISMISSEDVISIT = 0   THEN ''s01''
	--	WHEN VISIT.VISITDATE::DATE > GETDATE() AND INVOICE.VISITPAYMENTSTATUS = 0 THEN ''s02''
		WHEN RE.VISITID IS NOT NULL THEN ''s03''
		WHEN VISIT.ISMISSEDVISIT = 1  THEN ''s05''
	--	WHEN RE.VISITID IS NULL THEN ''s01''
END AS SCHEDULE_STATUS_CODE,
CASE 
	   	WHEN VISIT.VISITDATE::DATE > GETDATE() AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = 0 AND NVL(VISIT.ISMISSEDVISIT,0)=0 AND RE.VISITID IS NULL THEN ''Scheduled-Open''
		WHEN RE.VISITID IS NULL  AND VISIT.ISMISSEDVISIT = 0 THEN ''Scheduled''
		--WHEN VISIT.VISITDATE::DATE > GETDATE() AND INVOICE.VISITPAYMENTSTATUS = 0 THEN ''Scheduled-Open''
		WHEN RE.VISITID IS NOT NULL THEN ''Rescheduled''
		WHEN VISIT.ISMISSEDVISIT = 1  THEN ''Cancelled''
		--WHEN RE.VISITID IS NULL THEN ''Scheduled''
END AS SCHEDULE_STATUS_NAME,
CASE 
	   	WHEN VISIT.VISITDATE::DATE > GETDATE() AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = 0 AND NVL(VISIT.ISMISSEDVISIT,0)=0 AND RE.VISITID IS NULL THEN ''Scheduled-No Payement Recieved''
	    WHEN RE.VISITID IS NULL  AND VISIT.ISMISSEDVISIT = 0 THEN ''Scheduled Visit''
		--WHEN VISIT.VISITDATE::DATE > GETDATE() AND INVOICE.VISITPAYMENTSTATUS = 0 THEN ''Scheduled-No Payement Recieved''
		WHEN RE.VISITID IS NOT NULL THEN ''ReScheduled''
		WHEN VISIT.ISMISSEDVISIT = 1  THEN ''Cancelled''
	--	WHEN RE.VISITID IS NULL THEN ''Scheduled''
END AS SCHEDULE_STATUS_DESCRIPTION,
CASE 
	    WHEN VISIT.VISITDATE::DATE > GETDATE() THEN ''v01''
		WHEN VISIT.VISITDATE <=current_date AND VISIT.ISMISSEDVISIT =''0'' 
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL ) THEN ''v02''
	    WHEN VISIT.ISMISSEDVISIT = 1 AND VISIT.VISITDATE::DATE <= GETDATE() THEN ''v03''  
	    WHEN VISIT.VISITDATE::DATE <= GETDATE() AND VISIT.ISMISSEDVISIT = 0 AND VISIT.VISITSTARTTIME IS NOT NULL
        AND VISIT."VISITENDTIME" IS NOT NULL THEN  ''v04''
        ELSE NULL  
END AS VISIT_STATUS_CODE,
CASE 
        WHEN VISIT.VISITDATE::DATE > GETDATE() THEN ''Future''
		WHEN VISIT.VISITDATE <=current_date AND VISIT.ISMISSEDVISIT =''0'' 
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL ) THEN ''In Review''
	    WHEN VISIT.ISMISSEDVISIT = 1 AND VISIT.VISITDATE::DATE <= GETDATE() THEN ''Did not happen''
        WHEN VISIT.VISITDATE::DATE <= GETDATE() AND VISIT.ISMISSEDVISIT = 0 AND VISIT.VISITSTARTTIME IS NOT NULL
        AND VISIT."VISITENDTIME" IS NOT NULL THEN  ''Completed''
        ELSE NULL 
END AS VISIT_STATUS_NAME,
CASE 
		WHEN VISIT.VISITDATE::DATE > GETDATE() THEN ''Visit In Future''
		WHEN VISIT.VISITDATE <= GETDATE() AND VISIT.ISMISSEDVISIT =''0'' 
  	    AND (VISIT.VISITSTARTTIME IS NULL OR VISIT.VISITENDTIME  IS NULL ) THEN ''Visit IN Review''
	    WHEN VISIT.ISMISSEDVISIT = 1 AND VISIT.VISITDATE::DATE <= GETDATE() THEN ''Did Not Happen''  
	    WHEN VISIT.VISITDATE::DATE <= GETDATE() AND VISIT.ISMISSEDVISIT = 0 AND VISIT.VISITSTARTTIME IS NOT NULL 
	    AND VISIT."VISITENDTIME" IS NOT NULL THEN  ''Completed''
        ELSE NULL
END AS VISIT_STATUS_DESCRIPTION,
CASE 
	     WHEN UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE  THEN ''i01''
	     WHEN VISIT.BILLED =0 THEN ''i02''
	     WHEN VISIT.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) =''0'' THEN ''i03'' 
         WHEN INVOICE.VISITPAYMENTSTATUS IN (1,2) THEN ''i03''
		 ELSE NULL  
END AS INVOICE_STATUS_CODE,
CASE 
	     WHEN UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE  
	     THEN ''Not Billable''
	     WHEN VISIT.BILLED =0 THEN ''UnBIlled''
	     WHEN VISIT.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = ''0'' THEN ''Billed'' 
         WHEN INVOICE.VISITPAYMENTSTATUS IN (1,2) THEN ''Billed''
         ELSE NULL 
END AS INVOICE_STATUS_NAME,
CASE 
	  	 WHEN UPPER(SC.SERVICECODE) ILIKE ANY (''%NON-BILLABLE%'' , ''%NON BILLABLE%'')OR VINFO.NONBILLABLE=TRUE 
	     THEN ''Not BIllable''
	     WHEN VISIT.BILLED =0 THEN ''UnBIlled''
	     WHEN VISIT.BILLED = 1 AND NVL(INVOICE.VISITPAYMENTSTATUS,0) = ''0'' THEN ''Billed'' 
         WHEN INVOICE.VISITPAYMENTSTATUS IN (1,2) THEN ''Billed''
         ELSE NULL    
END AS INVOICE_STATUS_DESCRIPTION,
NULL AS PAYROLL_STATUS_CODE,
NULL AS PAYROLL_STATUS_NAME,
NULL AS PAYROLL_STATUS_DESCRIPTION,
OFFICE.STATE
FROM DISC_PROD.HHAEXCHANGEOSHAH.VISITINFO_REPL VINFO
JOIN DISC_PROD.HHAEXCHANGEOSHAH.TBLVISITS_REPL VISIT
     ON VISIT.VISITID = VINFO.VISITID
     AND VISIT.AGENCYID = VINFO.AGENCYID
JOIN DISC_PROD.HHAEXCHANGEOSHAH.VISITS VST 
	 ON VISIT.VISITID = VST.VISITID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.TBLINVOICEDETAILS_REPL INVOICE
     ON VINFO.VISITID = INVOICE.VISITID
     AND VINFO.PRIMARYSERVICECODEID = INVOICE.INVSERVICECODEID
JOIN DISC_PROD.HHAEXCHANGEOSHAH.OFFICE_OFFICES_REPL  OFFICE
     ON OFFICE.OFFICEID = VINFO.OFFICEID
LEFT JOIN RESCHEDULED RE ON VINFO.VISITID=RE.VISITID 
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.SERVICECODES SC
    ON VINFO.PRIMARYSERVICECODEID=SC.SERVICECODEID
LEFT JOIN DISC_PROD.HHAEXCHANGEOSHAH.VISITUNBILLEDDETAILS IV
	 ON IV.VISITID=VINFO.VISITID  
WHERE OFFICE.STATE IN (SELECT STATE FROM  DISC_PROD.HHAEXCHANGEOSHAH.CONFIGURATION WHERE CONFIG = TRUE)
)
SELECT DISTINCT --MD5(''OSHAH'' ||''-'' || SYSTEM_CODE ||''-'' || NVL(DERIVED_DISC_STATUS,''UNKNOWN'') || ''-'' || ''HHAEXCHANGE'') AS VISIT_STATUS_KEY,
MD5(''17'' || ''-'' || ''OSHAH'' || ''-'' || SYSTEM_CODE ||''-'' || NVL(SCHEDULE_STATUS_NAME,''S'')||NVL(VISIT_STATUS_NAME,''S'')||NVL(INVOICE_STATUS_NAME,''S'')) AS VISIT_STATUS_KEY,
SOURCE_SYSTEM_ID,SYSTEM_CODE,
DERIVED_DISC_STATUS,DISC_SCHEDULE_STATUS,DISC_VISIT_STATUS,DISC_INVOICE_STATUS,DISC_PAYROLL_STATUS,SCHEDULE_STATUS_CODE,
SCHEDULE_STATUS_NAME,SCHEDULE_STATUS_DESCRIPTION,VISIT_STATUS_CODE,VISIT_STATUS_NAME,VISIT_STATUS_DESCRIPTION,
INVOICE_STATUS_CODE,INVOICE_STATUS_NAME,INVOICE_STATUS_DESCRIPTION,PAYROLL_STATUS_CODE,PAYROLL_STATUS_NAME,
PAYROLL_STATUS_DESCRIPTION,
CASE WHEN DERIVED_DISC_STATUS IN (''Scheduled Notbilled Completed'',''ReScheduled billed Completed'',''ReScheduled Notbillable Completed'',''Scheduled Completed Billed'',''Scheduled Completed Unbilled'',''Scheduled Completed Notbilled'',''ReScheduled Unbilled Completed'')
	 THEN ''YES''
	 WHEN DERIVED_DISC_STATUS IN (''Cancelled Billed'',''Cancelled Notbillable'',''Cancelled Unbilled'',''Scheduled Billed In Review'',''Scheduled Notbilled In Review'',''Scheduled Future Notbilled'',''Scheduled Future Unbilled'',''ReScheduled In Review Unbilled'',''Rescheduled Future Unbilled'',''Scheduled Unbilled In Review'',''Scheduled-Open Future Unbilled'') OR DERIVED_DISC_STATUS IS NULL
	 THEN ''NO'' 
	 ELSE ''UNKNOWN'' 
END AS CONFIRMED_FLAG,
NULL AS CONSISTENT_FLAG FROM STATUS
ORDER BY DERIVED_DISC_STATUS ;
RETURN ''SUCCESS'';
END;
';