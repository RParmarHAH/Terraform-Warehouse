CREATE OR REPLACE PROCEDURE DW_PROD.HAH.GET_STAGE_SANDATAIMPORT_FACT_ADMISSION("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
    return_result VARCHAR;
BEGIN
--*****************************************************************************************************************************
-- NAME:  SANDATA FACT ADMISSION
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 01/04/23    Vijay Sharma          Initial version
-- 01/18/23	Rajat Sapkal		  Modified client admission key to include payerid and serviceid. Also added service key and removed REFERRAL_NOTE_KEY
-- 01/18/23	Rajat Sapkal		  Modified logic to include Client Admission from Sandata visits, BI_REPOSITORY Visits and Client admissions
-- 04/12/23    Vijay Sharma          Remove CONTRACT from SERVICE_KEY
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.SANDATAIMPORT_FACT_ADMISSION

WITH ADMISSION_DIAGNOSIS AS (
SELECT * FROM (
	select ROW_NUMBER () OVER(PARTITION BY AGENCYID,ADMISSIONID,PERIODID,"RANK"  ORDER BY  ADMISSIONID DESC) AS RN,
	AGENCYID,ADMISSIONID,PERIODID,"RANK",ICD9CODE,ICD10CODE,DESCRIPTION
    FROM DISC_PROD.SANDATAIMPORT.SANDATA_ADMISSIONDIAGNOSES 
 	WHERE AGENCYID = ''8485''
 	AND TRIM("RANK") = ''P''
) WHERE rn=1 ),
--,ADMISSION_PAYOR AS (
--SELECT * FROM (
--	 	SELECT ROW_NUMBER() OVER(PARTITION BY AGENCYID,ADMISSIONID,PAYORID ORDER BY PAYORID ASC) AS PAYOR_RN, 
--		AGENCYID,ADMISSIONID,PAYORID
--		FROM DISC_PROD.SANDATAIMPORT.SANDATA_ADMISSIONSPAYORS
--		WHERE AGENCYID = ''8485'' 
--		--AND PAYORID <> 0
--) WHERE PAYOR_RN = 1 )
clu as (
	    select
	           (CASE WHEN try_to_numeric(OTHERID) is null AND try_to_numeric(CUSTOMID) is null THEN -1
	                WHEN try_to_numeric(OTHERID) is not null AND try_to_numeric(CUSTOMID) is null THEN OTHERID
	                WHEN try_to_numeric(CUSTOMID) is not null AND try_to_numeric(OTHERID) is null THEN CUSTOMID
	                ELSE coalesce(OTHERID, CUSTOMID)
	            END)::INTEGER as DF_CLIENT_NUMBER,
	           AGENCYID,
	           max(CLIENTID) AS CLIENTID
	    from DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTS
	    group by 1,2
	),
max_client as (
	    select DF_CLIENT_NUMBER,
	            max(CLIENTID) AS CLIENTID
	    from clu
	    GROUP BY 1
	    ),
CLIENT AS
(
	SELECT * FROM
	(
		SELECT CLIENTID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MASTER_LIST
        WHERE AGENCYID=8485 
	)
	UNION
	SELECT * FROM
	(
		SELECT DISTINCT CLIENTID, MASTER_ID, AGENCYID
		FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MATCH_LIST
		WHERE CLIENTID NOT IN (SELECT CLIENTID FROM DISC_DEDUPE_PROD.SANDATAIMPORT.CLIENT_MASTER_LIST ) 
        AND AGENCYID=8485
	)
)
-- Taken Client Admission from Sandata Client admissions
SELECT DISTINCT 
CASE WHEN AUTH.SERVICEID IN (''CARECO'' , ''VBPCG'')
THEN MD5(''CC_''||IFNULL(CLIENT.AGENCYID,''-1'') || ''-'' || IFNULL(CA.ADMISSIONID,''-1'') || ''-'' || IFNULL(CLIENT.MASTER_ID,''-1'')  
|| ''-'' || IFNULL(CA.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || IFNULL(AUTH.PAYORID,''-1'') || ''-'' || IFNULL(AUTH.SERVICEID, ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
ELSE MD5(IFNULL(CLIENT.AGENCYID,''-1'') || ''-'' || IFNULL(CA.ADMISSIONID,''-1'') || ''-'' || IFNULL(CLIENT.MASTER_ID,''-1'')  
|| ''-'' || IFNULL(CA.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || IFNULL(AUTH.PAYORID,''-1'') || ''-'' || IFNULL(AUTH.SERVICEID, ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'') END AS CLIENT_ADMISSION_KEY,
4 AS SOURCE_SYSTEM_ID,
CASE WHEN AUTH.SERVICEID IN (''CARECO'' , ''VBPCG'')	
		THEN ''CC_''||CA.AGENCYID
		ELSE CA.AGENCYID END AS SYSTEM_CODE,	 
MD5(CLIENT.AGENCYID || ''-'' || CLIENT.MASTER_ID || ''-'' || ''SANDATAIMPORT'') AS CLIENT_KEY,
MD5(RS.AGENCYID || ''-'' || RS.REFERRALID || ''-'' || ''SANDATAIMPORT'') AS REFERRER_KEY, 
CASE WHEN AUTH.SERVICEID IS NOT NULL OR CA.ADMISSIONTYPE IS NOT NULL 
THEN CASE WHEN AUTH.SERVICEID IN (''CARECO'' , ''VBPCG'') 
	THEN MD5(''CC_''||IFNULL(CA.AGENCYID,-1) || ''-'' || IFNULL(AUTH.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
	ELSE COALESCE (MD5(IFNULL(CA.AGENCYID,-1) || ''-'' || IFNULL(AUTH.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT''),''-1'') 
	END END AS SERVICE_KEY,
CASE WHEN AUTH.SERVICEID IN (''CARECO'' , ''VBPCG'')
THEN MD5(''CC_''||IFNULL(CA.AGENCYID,''-1'') || ''-'' || IFNULL(AUTH.PAYORID,''-1'') || ''-'' ||  
IFNULL(CA.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
ELSE MD5(IFNULL(CA.AGENCYID,''-1'') || ''-'' || IFNULL(AUTH.PAYORID,''-1'') || ''-'' ||  
IFNULL(CA.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'') END AS PARTNER_CONTRACT_KEY,
--
NULL AS PRIMARY_DIAGNOSIS_KEY,--DIAGNOSIS.DIAGNOSIS_KEY AS PRIMARY_DIAGNOSIS_KEY,
CA.ROC AS REFERRAL_DATE,
NULL AS REFERRAL_TAKEN_BY_EMP_KEY, --? Need to Check Data 
NULL AS REFERRAL_ACCEPTED_SERVICES,
--CA.REFERRALSOURCETYPE AS REFERRAL_NOTES,
IFNULL(RS.SOURCETYPE, ''UNKNOWN'') AS REFERRAL_CAMPAIGN,
NULL AS PREVIOUS_PROVIDER, 
CA.SOC AS ADMISSION_DATE, 
--
COALESCE(ADM_D.ICD10CODE,ADM_D.ICD9CODE) AS PRIMARY_DIAGNOSIS, --DIAGNOSIS.DIAGNOSIS_CODE AS PRIMARY_DIAGNOSIS,
ADM_D.DESCRIPTION AS DIAGNOSIS_NOTES, 
--
CASE WHEN CA.ADMISSIONSTATUS = ''04'' THEN CA.EOC ELSE NULL END AS DISCHARGE_DATE,
CASE WHEN CA.ADMISSIONSTATUS = ''04'' THEN 
	(CASE WHEN CA.ADMISSIONSTATUS2 = ''01'' THEN ''Admmited to Hospital''
		  WHEN CA.ADMISSIONSTATUS2 = ''02'' THEN ''Client Changed for Payor''
		  WHEN CA.ADMISSIONSTATUS2 = ''03'' THEN ''non compliant''
		  WHEN CA.ADMISSIONSTATUS2 = ''04'' THEN ''Lack of Progress''
		  WHEN CA.ADMISSIONSTATUS2 = ''05'' THEN ''Admitted to Nursing Home''
		  WHEN CA.ADMISSIONSTATUS2 = ''06'' THEN ''Care Completed''
		  WHEN CA.ADMISSIONSTATUS2 = ''07'' THEN ''MD Ordered Discharge''
		  WHEN CA.ADMISSIONSTATUS2 = ''08'' THEN ''Patient Expired''
		  WHEN CA.ADMISSIONSTATUS2 = ''09'' THEN ''Goals met''
		  WHEN CA.ADMISSIONSTATUS2 = ''10'' THEN ''Transferred to Another Agency''
		  WHEN CA.ADMISSIONSTATUS2 = ''11'' THEN ''Patient Request''
		  WHEN CA.ADMISSIONSTATUS2 = ''12'' THEN ''No Longer Eligible for Service''
		  WHEN CA.ADMISSIONSTATUS2 = ''13'' THEN ''Transferred to Hospice''
		  WHEN CA.ADMISSIONSTATUS2 = ''14'' THEN ''Moved Out of Service Area''
		  --
		  WHEN CA.ADMISSIONSTATUS2 = ''D01'' THEN ''Client - Admitted to Long Term Care Facility''
		  WHEN CA.ADMISSIONSTATUS2 = ''D02'' THEN ''Client - Changed Payor/Admission''
		  WHEN CA.ADMISSIONSTATUS2 = ''D03'' THEN ''Field Staff - Non Compliant''
		  WHEN CA.ADMISSIONSTATUS2 = ''D04'' THEN ''Lack of Progress''
		  WHEN CA.ADMISSIONSTATUS2 = ''D06'' THEN ''Care Completed'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D07'' THEN ''Payor - Billing Issues''
		  WHEN CA.ADMISSIONSTATUS2 = ''D08'' THEN ''Client - DECEASED''
		  WHEN CA.ADMISSIONSTATUS2 = ''D09'' THEN ''Client - 30 DAY NOTICE ISSUED''
		  WHEN CA.ADMISSIONSTATUS2 = ''D10'' THEN ''SWITCHED AGENCIES''
		  WHEN CA.ADMISSIONSTATUS2 = ''D11'' THEN ''Patient Request'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D12'' THEN ''Payor - 4021- INELIGIBLE''
		  WHEN CA.ADMISSIONSTATUS2 = ''D13'' THEN ''Transferred to Hospice'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D14'' THEN ''Client - Moved Out of Service Area''
		  WHEN CA.ADMISSIONSTATUS2 = ''D15'' THEN ''Operations - Unable to Staff''
		  WHEN CA.ADMISSIONSTATUS2 = ''D16'' THEN ''Field Staff - EVV''
		  WHEN CA.ADMISSIONSTATUS2 = ''D17'' THEN ''Payroll - Payment Issues''
		  WHEN CA.ADMISSIONSTATUS2 = ''D18'' THEN ''Case Mgmt - Communication''
		  WHEN CA.ADMISSIONSTATUS2 = ''D19'' THEN ''Case Mgmt - Customer Service''
		  WHEN CA.ADMISSIONSTATUS2 = ''D20'' THEN ''Field Staff - Payrate''
		  WHEN CA.ADMISSIONSTATUS2 = ''D21'' THEN ''Operations - SOPs''
		  WHEN CA.ADMISSIONSTATUS2 = ''D22'' THEN ''Authorization Voided''
	ELSE CA.ADMISSIONSTATUS2 END )
ELSE NULL END
AS DISCHARGE_REASON, -- Values taken from Sandata UI
:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
     CURRENT_USER as ETL_INSERTED_BY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
     CURRENT_USER as ETL_LAST_UPDATED_BY,
     0  as ETL_DELETED_FLAG,
CASE WHEN CA.ADMISSIONSTATUS = ''01'' THEN ''Referral''
WHEN CA.ADMISSIONSTATUS = ''02'' THEN ''Active''
WHEN CA.ADMISSIONSTATUS = ''03'' THEN ''Hold''
WHEN CA.ADMISSIONSTATUS = ''04'' THEN ''Discharge''
WHEN CA.ADMISSIONSTATUS = ''05'' THEN ''Cancelled''
ELSE NULL END AS STATUS -- Values taken from Sandata UI
	FROM CLIENT AS CLIENT
         LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS CA
                   ON CA.CLIENTID = CLIENT.CLIENTID and ca.AGENCYID = client.AGENCYID
         LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_REFERRALSOURCES RS
                   ON CA.REFERRALSOURCEID = RS.REFERRALID AND CA.AGENCYID = RS.AGENCYID
         LEFT JOIN ADMISSION_DIAGNOSIS AS ADM_D           
            		ON ADM_D.ADMISSIONID = ca.ADMISSIONID and adm_d.AGENCYID = ca.AGENCYID  
        --LEFT JOIN DW_PROD.HAH.DIM_DIAGNOSIS_2_0 AS DIAGNOSIS 
        	--ON  COALESCE(ADM_D.ICD10CODE,regexp_replace(ADM_D.ICD9CODE,''\\\\.'','')) = DIAGNOSIS.DIAGNOSIS_CODE 
		--LEFT JOIN (Select distinct AGENCYID,ADMISSIONID,PAYORID from DISC_PROD.SANDATAIMPORT.SANDATA_ADMISSIONSPAYORS) AS PAYOR 
				--ON PAYOR.ADMISSIONID = CA.ADMISSIONID and PAYOR.AGENCYID = CA.AGENCYID  
        --LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_PAYORS AS PY 	
	        --ON PAYOR.PAYORID = PY.PAYORID and PY.AGENCYID = CA.AGENCYID
	    LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_AUTHORIZATIONS AUTH
	    	ON AUTH.ADMISSIONID =CA.ADMISSIONID AND AUTH.AGENCYID=CA.AGENCYID 
	    --LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_ADMISSIONSERVICES ADM_S
	    	--ON ADM_S.ADMISSIONID = CA.ADMISSIONID AND ADM_S.AGENCYID = CA.AGENCYID
	    --LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_SERVICES SS 
     			--ON CA.AGENCYID = SS.AGENCYID  AND ADM_S.SERVICEID =SS.SERVICECODE
WHERE CA.AGENCYID = ''8485''
UNION 
-- Client Admission from Sandata Visits
SELECT DISTINCT 
CASE WHEN F.SERVICEID IN (''CARECO'' , ''VBPCG'') 
THEN MD5(''CC_''||IFNULL(F.AGENCYID,''-1'') || ''-'' || IFNULL(F.ADMISSIONID,''-1'') || ''-'' || IFNULL(CLIENT.MASTER_ID,''-1'')  
|| ''-'' || IFNULL(F.CLIENTADMITTYPE , ''UNKNOWN'') || ''-'' || IFNULL(INV_H.PAYORID,''-1'') || ''-'' || IFNULL(F.SERVICEID, ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
ELSE MD5(IFNULL(F.AGENCYID,''-1'') || ''-'' || IFNULL(F.ADMISSIONID,''-1'') || ''-'' || IFNULL(CLIENT.MASTER_ID,''-1'')  
|| ''-'' || IFNULL(F.CLIENTADMITTYPE , ''UNKNOWN'') || ''-'' || IFNULL(INV_H.PAYORID,''-1'') || ''-'' || IFNULL(F.SERVICEID, ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'') END AS CLIENT_ADMISSION_KEY,
4 AS SOURCE_SYSTEM_ID,
CASE WHEN F.SERVICEID IN (''CARECO'' , ''VBPCG'')	
		THEN ''CC_''||F.AGENCYID
		ELSE F.AGENCYID END AS SYSTEM_CODE,
IFNULL(MD5(CLIENT.AGENCYID || ''-'' || CLIENT.MASTER_ID || ''-'' || ''SANDATAIMPORT''),''-1'') AS CLIENT_KEY,
MD5(RS.AGENCYID || ''-'' || RS.REFERRALID || ''-'' || ''SANDATAIMPORT'') AS REFERRER_KEY, 
CASE WHEN F.SERVICEID IS NOT NULL OR F.CLIENTADMITTYPE IS NOT NULL 
THEN CASE WHEN F.SERVICEID IN (''CARECO'' , ''VBPCG'') 
	THEN MD5(''CC_''||IFNULL(F.AGENCYID,-1) || ''-'' || IFNULL(F.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
	ELSE COALESCE (MD5(IFNULL(F.AGENCYID,-1) || ''-'' || IFNULL(F.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT''),''-1'') 
	END END AS SERVICE_KEY,
CASE WHEN F.SERVICEID IN (''CARECO'' , ''VBPCG'') 
THEN MD5(''CC_''||IFNULL(CA.AGENCYID,''-1'') || ''-'' || IFNULL(INV_H.PAYORID,''-1'') || ''-'' ||  
IFNULL(CA.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
ELSE MD5(IFNULL(CA.AGENCYID,''-1'') || ''-'' || IFNULL(INV_H.PAYORID,''-1'') || ''-'' ||  
IFNULL(CA.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'') END  AS PARTNER_CONTRACT_KEY,
--
NULL AS PRIMARY_DIAGNOSIS_KEY,--DIAGNOSIS.DIAGNOSIS_KEY AS PRIMARY_DIAGNOSIS_KEY,
CA.ROC AS REFERRAL_DATE,
NULL AS REFERRAL_TAKEN_BY_EMP_KEY, --? Need to Check Data 
NULL AS REFERRAL_ACCEPTED_SERVICES,
--CA.REFERRALSOURCETYPE AS REFERRAL_NOTES,
IFNULL(RS.SOURCETYPE, ''UNKNOWN'') AS REFERRAL_CAMPAIGN,
NULL AS PREVIOUS_PROVIDER, 
CA.SOC AS ADMISSION_DATE, 
--
COALESCE(ADM_D.ICD10CODE,ADM_D.ICD9CODE) AS PRIMARY_DIAGNOSIS, --DIAGNOSIS.DIAGNOSIS_CODE AS PRIMARY_DIAGNOSIS,
ADM_D.DESCRIPTION AS DIAGNOSIS_NOTES, 
--
CASE WHEN CA.ADMISSIONSTATUS = ''04'' THEN CA.EOC ELSE NULL END AS DISCHARGE_DATE,
CASE WHEN CA.ADMISSIONSTATUS = ''04'' THEN 
	(CASE WHEN CA.ADMISSIONSTATUS2 = ''01'' THEN ''Admmited to Hospital''
		  WHEN CA.ADMISSIONSTATUS2 = ''02'' THEN ''Client Changed for Payor''
		  WHEN CA.ADMISSIONSTATUS2 = ''03'' THEN ''non compliant''
		  WHEN CA.ADMISSIONSTATUS2 = ''04'' THEN ''Lack of Progress''
		  WHEN CA.ADMISSIONSTATUS2 = ''05'' THEN ''Admitted to Nursing Home''
		  WHEN CA.ADMISSIONSTATUS2 = ''06'' THEN ''Care Completed''
		  WHEN CA.ADMISSIONSTATUS2 = ''07'' THEN ''MD Ordered Discharge''
		  WHEN CA.ADMISSIONSTATUS2 = ''08'' THEN ''Patient Expired''
		  WHEN CA.ADMISSIONSTATUS2 = ''09'' THEN ''Goals met''
		  WHEN CA.ADMISSIONSTATUS2 = ''10'' THEN ''Transferred to Another Agency''
		  WHEN CA.ADMISSIONSTATUS2 = ''11'' THEN ''Patient Request''
		  WHEN CA.ADMISSIONSTATUS2 = ''12'' THEN ''No Longer Eligible for Service''
		  WHEN CA.ADMISSIONSTATUS2 = ''13'' THEN ''Transferred to Hospice''
		  WHEN CA.ADMISSIONSTATUS2 = ''14'' THEN ''Moved Out of Service Area''
		  --
		  WHEN CA.ADMISSIONSTATUS2 = ''D01'' THEN ''Client - Admitted to Long Term Care Facility''
		  WHEN CA.ADMISSIONSTATUS2 = ''D02'' THEN ''Client - Changed Payor/Admission''
		  WHEN CA.ADMISSIONSTATUS2 = ''D03'' THEN ''Field Staff - Non Compliant''
		  WHEN CA.ADMISSIONSTATUS2 = ''D04'' THEN ''Lack of Progress''
		  WHEN CA.ADMISSIONSTATUS2 = ''D06'' THEN ''Care Completed'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D07'' THEN ''Payor - Billing Issues''
		  WHEN CA.ADMISSIONSTATUS2 = ''D08'' THEN ''Client - DECEASED''
		  WHEN CA.ADMISSIONSTATUS2 = ''D09'' THEN ''Client - 30 DAY NOTICE ISSUED''
		  WHEN CA.ADMISSIONSTATUS2 = ''D10'' THEN ''SWITCHED AGENCIES''
		  WHEN CA.ADMISSIONSTATUS2 = ''D11'' THEN ''Patient Request'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D12'' THEN ''Payor - 4021- INELIGIBLE''
		  WHEN CA.ADMISSIONSTATUS2 = ''D13'' THEN ''Transferred to Hospice'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D14'' THEN ''Client - Moved Out of Service Area''
		  WHEN CA.ADMISSIONSTATUS2 = ''D15'' THEN ''Operations - Unable to Staff''
		  WHEN CA.ADMISSIONSTATUS2 = ''D16'' THEN ''Field Staff - EVV''
		  WHEN CA.ADMISSIONSTATUS2 = ''D17'' THEN ''Payroll - Payment Issues''
		  WHEN CA.ADMISSIONSTATUS2 = ''D18'' THEN ''Case Mgmt - Communication''
		  WHEN CA.ADMISSIONSTATUS2 = ''D19'' THEN ''Case Mgmt - Customer Service''
		  WHEN CA.ADMISSIONSTATUS2 = ''D20'' THEN ''Field Staff - Payrate''
		  WHEN CA.ADMISSIONSTATUS2 = ''D21'' THEN ''Operations - SOPs''
		  WHEN CA.ADMISSIONSTATUS2 = ''D22'' THEN ''Authorization Voided''
	ELSE CA.ADMISSIONSTATUS2 END )
ELSE NULL END
AS DISCHARGE_REASON, -- Values taken from Sandata UI
:STR_ETL_TASK_KEY AS ETL_TASK_KEY,
:STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
     CURRENT_USER as ETL_INSERTED_BY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
     CURRENT_USER as ETL_LAST_UPDATED_BY,
     0  as ETL_DELETED_FLAG,
CASE WHEN CA.ADMISSIONSTATUS = ''01'' THEN ''Referral''
WHEN CA.ADMISSIONSTATUS = ''02'' THEN ''Active''
WHEN CA.ADMISSIONSTATUS = ''03'' THEN ''Hold''
WHEN CA.ADMISSIONSTATUS = ''04'' THEN ''Discharge''
WHEN CA.ADMISSIONSTATUS = ''05'' THEN ''Cancelled''
ELSE NULL END AS STATUS -- Values taken from Sandata UI
FROM DISC_PROD.SANDATAIMPORT.SANDATA_VISITS F
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS CA
	ON CA.AGENCYID = F.AGENCYID AND CA.ADMISSIONID = F.ADMISSIONID
left join clu clu
	    on (CASE WHEN try_to_numeric(F.CLIENTOTHERID) is null THEN -1
	            ELSE f.CLIENTOTHERID
	        END)::INTEGER = clu.DF_CLIENT_NUMBER
	    and f.AGENCYID = clu.AGENCYID
left join max_client mc
	    on (CASE WHEN try_to_numeric(f.CLIENTOTHERID) is null THEN -1
	            ELSE f.CLIENTOTHERID
	        END)::INTEGER = mc.DF_CLIENT_NUMBER
LEFT JOIN CLIENT AS CLIENT ON CLIENT.AGENCYID= NVL(clu.AGENCYID, CA.AGENCYID)
                         AND CLIENT.CLIENTID = coalesce(CA.CLIENTID,clu.CLIENTID,mc.CLIENTID)
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_REFERRALSOURCES RS
    ON CA.REFERRALSOURCEID = RS.REFERRALID AND CA.AGENCYID = RS.AGENCYID
LEFT JOIN ADMISSION_DIAGNOSIS AS ADM_D           
    ON ADM_D.ADMISSIONID = ca.ADMISSIONID and adm_d.AGENCYID = ca.AGENCYID
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_INVOICEHEADER INV_H ON INV_H.INVOICENUMBER =F.INVOICENUMBER AND INV_H.AGENCYID =8485 
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_AUTHORIZATIONS AUTH
	    	ON AUTH.ADMISSIONID =CA.ADMISSIONID AND AUTH.AGENCYID=CA.AGENCYID 
WHERE F.AGENCYID = ''8485''
UNION 
-- Client Admission from BI_REPOSITORY Visits
SELECT DISTINCT 
CASE WHEN SV.SERVICEID IN (''CARECO'' , ''VBPCG'')
THEN MD5(''CC_''||IFNULL(SV.AGENCYID,''-1'') || ''-'' || IFNULL(SV.ADMISSIONID,''-1'') || ''-'' || IFNULL(CLIENT.MASTER_ID,''-1'')  
|| ''-'' || IFNULL(SV.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || IFNULL(P.PAYORID,''-1'') || ''-'' || IFNULL(SV.SERVICEID, ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
ELSE MD5(IFNULL(SV.AGENCYID,''-1'') || ''-'' || IFNULL(SV.ADMISSIONID,''-1'') || ''-'' || IFNULL(CLIENT.MASTER_ID,''-1'')  
|| ''-'' || IFNULL(SV.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || IFNULL(P.PAYORID,''-1'') || ''-'' || IFNULL(SV.SERVICEID, ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'') END AS CLIENT_ADMISSION_KEY,
4 AS SOURCE_SYSTEM_ID,
CASE WHEN SV.SERVICEID IN (''CARECO'' , ''VBPCG'')	
		THEN ''CC_''||SV.AGENCYID
		ELSE SV.AGENCYID END AS SYSTEM_CODE,
IFNULL(MD5(CLIENT.AGENCYID || ''-'' || CLIENT.MASTER_ID || ''-'' || ''SANDATAIMPORT''),''-1'') AS CLIENT_KEY,
MD5(RS.AGENCYID || ''-'' || RS.REFERRALID || ''-'' || ''SANDATAIMPORT'') AS REFERRER_KEY, 
CASE WHEN SV.SERVICEID IS NOT NULL OR SV.ADMISSIONTYPE IS NOT NULL 
THEN CASE WHEN SV.SERVICEID IN (''CARECO'' , ''VBPCG'') 
	THEN MD5(''CC_''||IFNULL(SV.AGENCYID,-1) || ''-'' || IFNULL(SV.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
	ELSE COALESCE (MD5(IFNULL(SV.AGENCYID,-1) || ''-'' || IFNULL(SV.SERVICEID , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT''),''-1'') 
	END END AS SERVICE_KEY,
CASE WHEN SV.SERVICEID IN (''CARECO'' , ''VBPCG'')
THEN MD5(''CC_''||IFNULL(CA.AGENCYID,''-1'') || ''-'' || IFNULL(P.PAYORID,''-1'') || ''-'' ||
IFNULL(CA.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'')
ELSE MD5(IFNULL(CA.AGENCYID,''-1'') || ''-'' || IFNULL(P.PAYORID,''-1'') || ''-'' || 
IFNULL(CA.ADMISSIONTYPE , ''UNKNOWN'') || ''-'' || ''SANDATAIMPORT'') END  AS PARTNER_CONTRACT_KEY,
--
NULL AS PRIMARY_DIAGNOSIS_KEY,--DIAGNOSIS.DIAGNOSIS_KEY AS PRIMARY_DIAGNOSIS_KEY,
CA.ROC AS REFERRAL_DATE,
NULL AS REFERRAL_TAKEN_BY_EMP_KEY, --? Need to Check Data 
NULL AS REFERRAL_ACCEPTED_SERVICES,
--CA.REFERRALSOURCETYPE AS REFERRAL_NOTES,
IFNULL(RS.SOURCETYPE, ''UNKNOWN'') AS REFERRAL_CAMPAIGN,
NULL AS PREVIOUS_PROVIDER, 
CA.SOC AS ADMISSION_DATE, 
--
COALESCE(ADM_D.ICD10CODE,ADM_D.ICD9CODE) AS PRIMARY_DIAGNOSIS, --DIAGNOSIS.DIAGNOSIS_CODE AS PRIMARY_DIAGNOSIS,
ADM_D.DESCRIPTION AS DIAGNOSIS_NOTES, 
--
CASE WHEN CA.ADMISSIONSTATUS = ''04'' THEN CA.EOC ELSE NULL END AS DISCHARGE_DATE,
CASE WHEN CA.ADMISSIONSTATUS = ''04'' THEN 
	(CASE WHEN CA.ADMISSIONSTATUS2 = ''01'' THEN ''Admmited to Hospital''
		  WHEN CA.ADMISSIONSTATUS2 = ''02'' THEN ''Client Changed for Payor''
		  WHEN CA.ADMISSIONSTATUS2 = ''03'' THEN ''non compliant''
		  WHEN CA.ADMISSIONSTATUS2 = ''04'' THEN ''Lack of Progress''
		  WHEN CA.ADMISSIONSTATUS2 = ''05'' THEN ''Admitted to Nursing Home''
		  WHEN CA.ADMISSIONSTATUS2 = ''06'' THEN ''Care Completed''
		  WHEN CA.ADMISSIONSTATUS2 = ''07'' THEN ''MD Ordered Discharge''
		  WHEN CA.ADMISSIONSTATUS2 = ''08'' THEN ''Patient Expired''
		  WHEN CA.ADMISSIONSTATUS2 = ''09'' THEN ''Goals met''
		  WHEN CA.ADMISSIONSTATUS2 = ''10'' THEN ''Transferred to Another Agency''
		  WHEN CA.ADMISSIONSTATUS2 = ''11'' THEN ''Patient Request''
		  WHEN CA.ADMISSIONSTATUS2 = ''12'' THEN ''No Longer Eligible for Service''
		  WHEN CA.ADMISSIONSTATUS2 = ''13'' THEN ''Transferred to Hospice''
		  WHEN CA.ADMISSIONSTATUS2 = ''14'' THEN ''Moved Out of Service Area''
		  --
		  WHEN CA.ADMISSIONSTATUS2 = ''D01'' THEN ''Client - Admitted to Long Term Care Facility''
		  WHEN CA.ADMISSIONSTATUS2 = ''D02'' THEN ''Client - Changed Payor/Admission''
		  WHEN CA.ADMISSIONSTATUS2 = ''D03'' THEN ''Field Staff - Non Compliant''
		  WHEN CA.ADMISSIONSTATUS2 = ''D04'' THEN ''Lack of Progress''
		  WHEN CA.ADMISSIONSTATUS2 = ''D06'' THEN ''Care Completed'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D07'' THEN ''Payor - Billing Issues''
		  WHEN CA.ADMISSIONSTATUS2 = ''D08'' THEN ''Client - DECEASED''
		  WHEN CA.ADMISSIONSTATUS2 = ''D09'' THEN ''Client - 30 DAY NOTICE ISSUED''
		  WHEN CA.ADMISSIONSTATUS2 = ''D10'' THEN ''SWITCHED AGENCIES''
		  WHEN CA.ADMISSIONSTATUS2 = ''D11'' THEN ''Patient Request'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D12'' THEN ''Payor - 4021- INELIGIBLE''
		  WHEN CA.ADMISSIONSTATUS2 = ''D13'' THEN ''Transferred to Hospice'' --NOT FOUND ON UI (?)
		  WHEN CA.ADMISSIONSTATUS2 = ''D14'' THEN ''Client - Moved Out of Service Area''
		  WHEN CA.ADMISSIONSTATUS2 = ''D15'' THEN ''Operations - Unable to Staff''
		  WHEN CA.ADMISSIONSTATUS2 = ''D16'' THEN ''Field Staff - EVV''
		  WHEN CA.ADMISSIONSTATUS2 = ''D17'' THEN ''Payroll - Payment Issues''
		  WHEN CA.ADMISSIONSTATUS2 = ''D18'' THEN ''Case Mgmt - Communication''
		  WHEN CA.ADMISSIONSTATUS2 = ''D19'' THEN ''Case Mgmt - Customer Service''
		  WHEN CA.ADMISSIONSTATUS2 = ''D20'' THEN ''Field Staff - Payrate''
		  WHEN CA.ADMISSIONSTATUS2 = ''D21'' THEN ''Operations - SOPs''
		  WHEN CA.ADMISSIONSTATUS2 = ''D22'' THEN ''Authorization Voided''
	ELSE CA.ADMISSIONSTATUS2 END )
ELSE NULL END
AS DISCHARGE_REASON, -- Values taken from Sandata UI
 :STR_ETL_TASK_KEY AS ETL_TASK_KEY,
 :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY,
 convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
     CURRENT_USER as ETL_INSERTED_BY,
     convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
     CURRENT_USER as ETL_LAST_UPDATED_BY,
     0  as ETL_DELETED_FLAG,
CASE WHEN CA.ADMISSIONSTATUS = ''01'' THEN ''Referral''
WHEN CA.ADMISSIONSTATUS = ''02'' THEN ''Active''
WHEN CA.ADMISSIONSTATUS = ''03'' THEN ''Hold''
WHEN CA.ADMISSIONSTATUS = ''04'' THEN ''Discharge''
WHEN CA.ADMISSIONSTATUS = ''05'' THEN ''Cancelled''
ELSE NULL END AS STATUS -- Values taken from Sandata UI
FROM DISC_PROD.BI_REPOSITORY.SANDATAVISITS SV
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_CLIENTADMISSIONS CA
	ON SV.AGENCYID = CA.AGENCYID AND SV.ADMISSIONID = CA.ADMISSIONID
LEFT JOIN CLIENT AS CLIENT ON CLIENT.AGENCYID = SV.AGENCYID AND CLIENT.CLIENTID = SV.CLIENTID
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_REFERRALSOURCES RS
    ON CA.REFERRALSOURCEID = RS.REFERRALID AND CA.AGENCYID = RS.AGENCYID
LEFT JOIN ADMISSION_DIAGNOSIS AS ADM_D           
    ON ADM_D.ADMISSIONID = ca.ADMISSIONID and adm_d.AGENCYID = ca.AGENCYID
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_PAYORS P ON P."NAME" = SV.PAYORNAME AND P.AGENCYID =8485
LEFT JOIN DISC_PROD.SANDATAIMPORT.SANDATA_AUTHORIZATIONS AUTH
	    	ON AUTH.ADMISSIONID =CA.ADMISSIONID AND AUTH.AGENCYID=CA.AGENCYID 
WHERE SV.AGENCYID = ''8485''
ORDER BY DISCHARGE_DATE ASC ;


SELECT CONCAT(''Message : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
RETURN return_result;

END;

';