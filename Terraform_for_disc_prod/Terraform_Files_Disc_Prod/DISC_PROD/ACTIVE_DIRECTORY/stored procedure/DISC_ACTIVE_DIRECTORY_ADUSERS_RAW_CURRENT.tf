resource "snowflake_procedure" "DISC_ACTIVE_DIRECTORY_ADUSERS_RAW_CURRENT" {
	name ="ADUSERS_RAW_CURRENT"
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "ACTIVE_DIRECTORY"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT


CREATE OR REPLACE TABLE DISC_${var.SF_ENVIRONMENT}.ACTIVE_DIRECTORY.ADUSERS_RAW_CURRENT AS

WITH CURR_V AS (
	SELECT 
		OBJECTGUID,
		MAX(ETL_LAST_UPDATED_DATE) AS ETL_LAST_UPDATED_DATE
	FROM DISC_${var.SF_ENVIRONMENT}.ACTIVE_DIRECTORY.HIST_ADUSERS_RAW
	GROUP BY 1
)
SELECT 
	P.* EXCLUDE ETL_DELETED_FLAG,
	CASE
		WHEN ETL_INSERTED_DATE::DATE <> CURRENT_DATE THEN TRUE
		ELSE P.ETL_DELETED_FLAG
	END AS ETL_DELETED_FLAG
FROM DISC_${var.SF_ENVIRONMENT}.ACTIVE_DIRECTORY.HIST_ADUSERS_RAW P
INNER JOIN CURR_V
	ON /*CURR_V.EMPLOYEEID = P.EMPLOYEEID 
	AND CURR_V.EMAILADDRESS = P.EMAILADDRESS*/
	CURR_V.ETL_LAST_UPDATED_DATE = P.ETL_LAST_UPDATED_DATE
	AND CURR_V.OBJECTGUID = P.OBJECTGUID
	AND ETL_DELETED_FLAG = FALSE;
	

 EOT
}

