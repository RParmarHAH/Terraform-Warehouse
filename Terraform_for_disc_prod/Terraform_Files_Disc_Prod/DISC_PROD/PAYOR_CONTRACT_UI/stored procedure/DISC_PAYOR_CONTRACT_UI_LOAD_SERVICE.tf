resource "snowflake_procedure" "DISC_PAYOR_CONTRACT_UI_LOAD_SERVICE" {
	name ="LOAD_SERVICE"
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "PAYOR_CONTRACT_UI"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    RETURN_RESULT VARCHAR;
BEGIN
MERGE INTO DISC_${var.SF_ENVIRONMENT}.PAYOR_CONTRACT_UI.Service TGT
USING APP_DB_${var.SF_ENVIRONMENT}.PAYOR_CONTRACT_MAPPING.Service AS STAGE 
ON TGT.ORIGINAL_SOURCE_SYSTEM_ID = STAGE.SOURCE_SYSTEM_ID
	AND TGT.ORIGINAL_SYSTEM_CODE = STAGE.SYSTEM_CODE
 AND TGT.CONTRACT_CODE = STAGE.CONTRACT_CODE
 AND TGT.CONTRACT_NAME = STAGE.CONTRACT_NAME
 AND IFNULL(TGT.CONTRACT_STATE_CODE, '')(^#!?'') = IFNULL(STAGE.CONTRACT_STATE_CODE, '')(^#!?'')
 AND IFNULL( STAGE.SERVICE_CODE_ID, '')(^#!?'') = IFNULL( TGT.SERVICE_CODE_ID, '')(^#!?'')
 AND IFNULL(TGT.BILLABLE_FLAG, 0) =  IFNULL(STAGE.BILLABLE_FLAG, 0)
WHEN MATCHED THEN 
UPDATE SET 
     TGT.SOURCE_SYSTEM_ID = ''28''
    ,TGT.SYSTEM_CODE = ''Payor_Contract UI''
	,TGT.ORIGINAL_SOURCE_SYSTEM_NAME = STAGE.SOURCE_SYSTEM_NAME 
    ,TGT.CONTRACT_CODE = STAGE.CONTRACT_CODE
	,TGT.CONTRACT_NAME = STAGE.CONTRACT_NAME
    ,TGT.SERVICE_NAME = STAGE.SERVICE_NAME
    ,TGT.REVENUE_CATEGORY_CODE = STAGE.REVENUE_CATEGORY_CODE
    ,TGT.REVENUE_CATEGORY_NAME = STAGE.REVENUE_CATEGORY_NAME
    ,TGT.REVENUE_SUBCATEGORY_CODE = STAGE.REVENUE_SUBCATEGORY_CODE
    ,TGT.REVENUE_SUBCATEGORY_NAME = STAGE.REVENUE_SUBCATEGORY_NAME
    ,TGT.MILEAGE_FLAG = STAGE.MILEAGE_FLAG
    ,TGT.PAYABLE_FLAG = STAGE.PAYABLE_FLAG
    ,TGT.BILLABLE_FLAG = STAGE.BILLABLE_FLAG
    ,TGT.ETL_TASK_KEY = STAGE.ETL_TASK_KEY
	,TGT.ETL_LAST_UPDATED_DATE = CONVERT_TIMEZONE(''UTC'',CURRENT_TIMESTAMP)::TIMESTAMP_NTZ
	,TGT.ETL_LAST_UPDATED_BY = CURRENT_USER
WHEN NOT MATCHED THEN 
INSERT 
    (SOURCE_SYSTEM_ID, 
    SYSTEM_CODE,
    ORIGINAL_SOURCE_SYSTEM_ID, 
    ORIGINAL_SYSTEM_CODE,
    ORIGINAL_SOURCE_SYSTEM_NAME,
    CONTRACT_CODE, 
    CONTRACT_NAME, 
    CONTRACT_STATE_CODE, 
    SERVICE_CODE_ID, 
    SERVICE_NAME, 
    REVENUE_CATEGORY_CODE, 
    REVENUE_CATEGORY_NAME,
    REVENUE_SUBCATEGORY_CODE, 
    REVENUE_SUBCATEGORY_NAME, 
    MILEAGE_FLAG, 
    PAYABLE_FLAG,
    BILLABLE_FLAG,
    ETL_TASK_KEY,
    ETL_INSERTED_TASK_KEY,
    ETL_INSERTED_DATE,
    ETL_INSERTED_BY,
    ETL_LAST_UPDATED_DATE,
    ETL_LAST_UPDATED_BY)
VALUES 
	(''28'',
    ''Payor_Contract UI'',
    STAGE.SOURCE_SYSTEM_ID, 
    STAGE.SYSTEM_CODE,
    STAGE.SOURCE_SYSTEM_NAME,
    STAGE.CONTRACT_CODE, 
    STAGE.CONTRACT_NAME, 
    STAGE.CONTRACT_STATE_CODE, 
    STAGE.SERVICE_CODE_ID, 
    STAGE.SERVICE_NAME, 
    STAGE.REVENUE_CATEGORY_CODE, 
    STAGE.REVENUE_CATEGORY_NAME,
    STAGE.REVENUE_SUBCATEGORY_CODE, 
    STAGE.REVENUE_SUBCATEGORY_NAME, 
    STAGE.MILEAGE_FLAG, 
    STAGE.PAYABLE_FLAG,
    STAGE.BILLABLE_FLAG,
	:STR_ETL_TASK_KEY ,
    :STR_ETL_TASK_KEY ,
	CONVERT_TIMEZONE(''UTC'',CURRENT_TIMESTAMP)::TIMESTAMP_NTZ,
	CURRENT_USER,
	CONVERT_TIMEZONE(''UTC'',CURRENT_TIMESTAMP)::TIMESTAMP_NTZ,
	CURRENT_USER)
;
SELECT CONCAT(''Message : '',"number of rows inserted", '' Rows Inserted & '' ,"number of rows updated",'' Rows Updated.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return return_result;
END;

 EOT
}

