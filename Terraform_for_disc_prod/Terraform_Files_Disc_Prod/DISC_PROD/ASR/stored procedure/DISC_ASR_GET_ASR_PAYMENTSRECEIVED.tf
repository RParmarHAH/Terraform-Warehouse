resource "snowflake_procedure" "DISC_ASR_GET_ASR_PAYMENTSRECEIVED" {
	name ="GET_ASR_PAYMENTSRECEIVED"
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "ASR"
	language  = "SQL"

	arguments {
		name = "TASKKEY"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

--*****************************************************************************************************************************
-- NAME:  DISC_${var.SF_ENVIRONMENT}.ASR.GET_ASR_PAYMENTSRECEIVED 
--
-- PURPOSE: To Load Discovery Layer Tables
--
-- DEVELOPMENT LOG:
-- DATE        		AUTHOR                	NOTES:
-- ----------  		-------------------   	-----------------------------------------------------------------------------------------------
-- 2023-11-20 		Ravi Suthar            	Initial Development
--*****************************************************************************************************************************

BEGIN 
    --TargetSQL
    COPY INTO DISC_${var.SF_ENVIRONMENT}.ASR.HIST_ASR_PAYMENTSRECEIVED FROM ( SELECT A.$1 AS PAYMENTID, A.$2 AS CUSTOMERID, A.$3 AS VISITDATE, A.$4 AS PAIDDATE, A.$5 AS REIMBAMOUNT, A.$6 AS CLAIMSTATUS,A.$7 AS EXTERNTRANID, A.$8 AS BILLINGTRANSACTIONID, A.$9 AS INVOICENUMBER, A.$10 AS MEMO, A.$11 AS DEPOSITDATE, A.$12 AS CLAIMNUMBER, A.$13 AS CHECKNUMBER, A.$14 AS ADJUSTMENTPOS, A.$15 AS ADJUSTMENTNEG, A.$16 AS LASTMODIFIEDBY, A.$17 AS LASTMODIFIEDON, A.$18 AS FILEID, A.$19 AS SERVICEVISITACTUALID, A.$20 AS ADJUSTMENTSMEMO, A.$21 AS BILLEDAMOUNT, A.$22 AS BILLINGMEMO, A.$23 AS BILLINGDATE, A.$24 AS SERVICETYPE, A.$25 AS LOCATIONID, A.$26 AS SERVICEVISITID, A.$27 AS PAYERSOURCEID, A.$28 AS PROGRAMID, A.$29 AS BILLINGCODEID, :TaskKey AS ETL_TASK_KEY, :TaskKey AS ETL_INSERTED_TASK_KEY, current_timestamp::TIMESTAMP_NTZ(9) AS ETL_INSERTED_DATE, current_user() AS ETL_INSERTED_BY, current_timestamp::TIMESTAMP_NTZ(9) AS ETL_LAST_UPDATED_DATE, current_user() AS ETL_LAST_UPDATED_BY, FALSE as ETL_DELETED_FLAG FROM @DISC_${var.SF_ENVIRONMENT}.Stage.AWSAZSTAGEPROD/ASR/Daily_Files/ASR_Data_Extract_PaymentsReceived(file_format => DISC_${var.SF_ENVIRONMENT}.STAGE.PSV_FORMAT_ENCLOSED_BY_NONE) A);

    --ViewSQL
    CREATE OR REPLACE TABLE DISC_${var.SF_ENVIRONMENT}.ASR.ASR_PAYMENTSRECEIVED AS WITH curr_v AS (SELECT PAYMENTID, MAX(ETL_LAST_UPDATED_DATE) AS MAX_LAST_UPDATED_DATE FROM DISC_${var.SF_ENVIRONMENT}.ASR.HIST_ASR_PAYMENTSRECEIVED GROUP BY PAYMENTID) SELECT t.* FROM DISC_${var.SF_ENVIRONMENT}.ASR.HIST_ASR_PAYMENTSRECEIVED T INNER JOIN curr_v v ON t.PAYMENTID = v.PAYMENTID AND t.ETL_DELETED_FLAG = FALSE AND t.ETL_LAST_UPDATED_DATE = v.MAX_LAST_UPDATED_DATE;

    return ''Success'';
END;

 EOT
}

