resource "snowflake_procedure" "DISC_ASR_GET_ASR_CUSTOMERS" {
	name ="GET_ASR_CUSTOMERS"
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "ASR"
	language  = "SQL"

	arguments {
		name = "TASKKEY"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

--*****************************************************************************************************************************
-- NAME:  DISC_${var.SF_ENVIRONMENT}.ASR.GET_ASR_CUSTOMERS 
--
-- PURPOSE: To Load Discovery Layer Tables
--
-- DEVELOPMENT LOG:
-- DATE        		AUTHOR                	NOTES:
-- ----------  		-------------------   	-----------------------------------------------------------------------------------------------
-- 2023-11-20 		Ravi Suthar            	Initial Development
--*****************************************************************************************************************************

BEGIN 
    --TargetSQL
    COPY INTO DISC_${var.SF_ENVIRONMENT}.ASR.HIST_ASR_CUSTOMERS FROM (SELECT A.$1 AS CUSTOMERID, A.$2 AS CLIENTID, A.$3 AS PROGRAMID, A.$4 AS FIRSTNAME, A.$5 AS LASTNAME, A.$6 AS ADDRESS, A.$7 AS CITY, A.$8 AS STATE, A.$9 AS POSTALCODE, A.$10 AS HOMEPHONE, A.$11 AS CASEWORKERID, A.$12 AS PHONE2, A.$13 AS EMERGENCYCONTACT, A.$14 AS EMERGENCYPHONE, A.$15 AS NOTES, A.$16 AS HOURSASSIGNED, A.$17 AS LASTREVIEWDATE, A.$18 AS NEXTREVIEWDATE, A.$19 AS NEXTREVIEWTYPE, A.$20 AS STARTDATE, A.$21 AS CUSTOMERTYPE, A.$22 AS CUSTOMERSTATUS, A.$23 AS CUSTOMERNAME, A.$24 AS EMAIL, A.$25 AS FAX, A.$26 AS SERVICETYPE, A.$27 AS SUPERVISORID, A.$28 AS PRIORITYLEVEL, A.$29 AS MONITORSERVICEVISITCHECKINS, A.$30 AS EXTERNALID, A.$31 AS LOCATIONID, A.$32 AS COUNTYID, A.$33 AS SERVICEENDDATE, A.$34 AS LOCATIONLATITUDE, A.$35 AS LOCATIONLONGITUDE, A.$36 AS EVV_SEQUENCEID, A.$37 AS LASTMODIFIEDON, A.$38 AS LASTMODIFIEDBY, A.$39 AS EVV_LASTSUBMITTEDON, A.$40 AS EVV_TRANSACTIONID, A.$41 AS IMPORTNOTES, A.$42 AS EVV_LASTSUBMITTEDBY, A.$43 AS REVIEWPERIOD, :TaskKey AS ETL_TASK_KEY, :TaskKey AS ETL_INSERTED_TASK_KEY, CURRENT_TIMESTAMP::TIMESTAMP_NTZ(9) AS ETL_INSERTED_DATE, CURRENT_USER() AS ETL_INSERTED_BY, CURRENT_TIMESTAMP::TIMESTAMP_NTZ(9) AS ETL_LAST_UPDATED_DATE, CURRENT_USER() AS ETL_LAST_UPDATED_BY, FALSE AS ETL_DELETED_FLAG FROM @DISC_${var.SF_ENVIRONMENT}.Stage.AWSAZSTAGEPROD/ASR/Daily_Files/ASR_Data_Extract_Customers(file_format => DISC_${var.SF_ENVIRONMENT}.STAGE.PSV_FORMAT) A);

    --ViewSQL
    CREATE OR REPLACE TABLE DISC_${var.SF_ENVIRONMENT}.ASR.ASR_CUSTOMERS AS WITH curr_v AS (SELECT CUSTOMERID, MAX(ETL_LAST_UPDATED_DATE) AS MAX_LAST_UPDATED_DATE FROM DISC_${var.SF_ENVIRONMENT}.ASR.HIST_ASR_CUSTOMERS GROUP BY CUSTOMERID) SELECT t.* FROM DISC_${var.SF_ENVIRONMENT}.ASR.HIST_ASR_CUSTOMERS t INNER JOIN curr_v v ON t.CUSTOMERID = v.CUSTOMERID AND t.ETL_DELETED_FLAG = FALSE and t.ETL_LAST_UPDATED_DATE = v.MAX_LAST_UPDATED_DATE;

    return ''Success'';
END;

 EOT
}

