resource "snowflake_procedure" "DISC_DATA_CLEANSING_UPD_STD_EMPLOYEE_DATA_CLEANS_POSTPROCESSING" {
	name ="UPD_STD_EMPLOYEE_DATA_CLEANS_POSTPROCESSING"
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "DATA_CLEANSING"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
    return_result VARCHAR;
BEGIN
    --*****************************************************************************************************************************
-- NAME: ADPALLIANCE_SRC_Employee
--
-- PURPOSE: Creates script for data cleanse for ADPALLIANCE source
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 08/07/23     Darshan Gosai           Initial development
--*****************************************************************************************************************************
--

/* Update SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG from EMPLOYEE_STANDARDIZED_ADDRESSES basis of EMPLOYEE_ID  */

	UPDATE DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES" 
    FROM (
    SELECT 
    STD_ATTRBT."SOURCE_SYSTEM_ID" ,
    STD_ATTRBT."SYSTEM_CODE" ,
    STD_ATTRBT."EMPLOYEE_ID" 
    FROM 
    DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STANDARDIZED_ADDRESSES" ADD_OUTPT
    JOIN DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES" STD_ATTRBT
    ON ADD_OUTPT."SOURCE_SYSTEM_ID"  = STD_ATTRBT."SOURCE_SYSTEM_ID" 
    AND ADD_OUTPT."SYSTEM_CODE"  = STD_ATTRBT."SYSTEM_CODE" 
    AND ADD_OUTPT."EMPLOYEE_NUMBER"  = STD_ATTRBT."EMPLOYEE_ID" 
	AND STD_ATTRBT.SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG = FALSE 
    GROUP BY 1,2,3 ) X
    SET 
    SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG = TRUE 
    WHERE 
    DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"."SOURCE_SYSTEM_ID"  = X.SOURCE_SYSTEM_ID
    AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES".SYSTEM_CODE = X.SYSTEM_CODE
    AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES".EMPLOYEE_ID = X.EMPLOYEE_ID ;

	
/* Update SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG where  METHD_UPD is not null */
	
	UPDATE DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"  FROM 
	(
	SELECT 
	"SOURCE_SYSTEM_ID" ,
	"SYSTEM_CODE" ,
	"EMPLOYEE_ID" 
	FROM 
	DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES" 
	WHERE 
	METHD_UPD IS NOT NULL 
	AND "SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG" = FALSE 
	AND ( METHD_UPD LIKE ''%LOD%'' OR METHD_UPD like ''%UPD_FRM_ADD_TBL'')
	GROUP BY 1,2,3 )xx
	SET 
	SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG = TRUE 
	WHERE 
	DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"."SOURCE_SYSTEM_ID"  = xx.SOURCE_SYSTEM_ID
	AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES".SYSTEM_CODE = xx.SYSTEM_CODE
	AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES".EMPLOYEE_ID = xx.EMPLOYEE_ID ;


/* PROCESSED and CLEANSED FLAG ALONG WITH OTHER ADDRESS WHICH HAS SAME ADDRESS within table and will update whose CLEANSE_FLG is FALSE  */

	UPDATE  DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"  
	FROM 
	(SELECT Y."SOURCE_SYSTEM_ID" ,Y."SYSTEM_CODE" ,Y."EMPLOYEE_ID" ,X.STD_EMPLOYEE_ADDRESS,
	X.STD_EMPLOYEE_CITY,X.STD_EMPLOYEE_COUNTY,X.STD_EMPLOYEE_STATE_NAME,X.STD_EMPLOYEE_STATE_CODE,X.STD_EMPLOYEE_ZIP,X.STD_EMPLOYEE_ZIP_PLUS_FOUR,X.LABEL,
	X.STD_EMPLOYEE_COUNTRY_CODE,
	X.ADDRESS_NUMBER,X.STREET,X.POINTS,X.LATITUDE ,X.LONGITUDE ,X.RELEVANCE
	FROM  
	(SELECT 
	"SRC_EMPLOYEE_ADDRESS" ,
	"SRC_EMPLOYEE_CITY" ,
	"SRC_EMPLOYEE_STATE_CODE" ,
	"SRC_EMPLOYEE_ZIP" ,
	STD_EMPLOYEE_ADDRESS,
	STD_EMPLOYEE_CITY,
	STD_EMPLOYEE_COUNTY,
	STD_EMPLOYEE_STATE_NAME,
	STD_EMPLOYEE_STATE_CODE,
	STD_EMPLOYEE_ZIP,
	STD_EMPLOYEE_ZIP_PLUS_FOUR,
	STD_EMPLOYEE_COUNTRY_CODE,
	ADDRESS_NUMBER,
	STREET,
	LABEL,
	POINTS,
	LATITUDE ,
	LONGITUDE ,
	RELEVANCE 
	FROM  
	DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES" 
	WHERE "SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG" = TRUE 	
	GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)x
	JOIN (SELECT source_system_id,system_code,employee_id,SRC_EMPLOYEE_ADDRESS,SRC_EMPLOYEE_CITY, SRC_EMPLOYEE_STATE_CODE,
	SRC_EMPLOYEE_ZIP FROM  DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"  
		WHERE "SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG" = FALSE )   Y 
	ON X.SRC_EMPLOYEE_ADDRESS = Y.SRC_EMPLOYEE_ADDRESS 
	AND X.SRC_EMPLOYEE_CITY = Y."SRC_EMPLOYEE_CITY" 
	AND X.SRC_EMPLOYEE_STATE_CODE = Y.SRC_EMPLOYEE_STATE_CODE 
	AND X.SRC_EMPLOYEE_ZIP = Y.SRC_EMPLOYEE_ZIP
	GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18) XX
	SET 
	STD_EMPLOYEE_ADDRESS = XX.STD_EMPLOYEE_ADDRESS,
	STD_EMPLOYEE_CITY  = XX.STD_EMPLOYEE_CITY,
	STD_EMPLOYEE_COUNTY  = XX.STD_EMPLOYEE_COUNTY,
	STD_EMPLOYEE_STATE_NAME  = XX.STD_EMPLOYEE_STATE_NAME,
	STD_EMPLOYEE_STATE_CODE  = XX.STD_EMPLOYEE_STATE_CODE,
	STD_EMPLOYEE_ZIP  = XX.STD_EMPLOYEE_ZIP,
	STD_EMPLOYEE_ZIP_PLUS_FOUR = XX.STD_EMPLOYEE_ZIP_PLUS_FOUR,
	STD_EMPLOYEE_COUNTRY_CODE  = XX.STD_EMPLOYEE_COUNTRY_CODE ,
	ADDRESS_NUMBER  = XX.ADDRESS_NUMBER ,
	STREET  = XX.STREET ,
	POINTS  = XX. POINTS,
	LABEL = XX.LABEL,
	LATITUDE  = XX.LATITUDE ,
	LONGITUDE  = XX.LONGITUDE ,
	RELEVANCE  = XX.RELEVANCE,
	METHD_UPD = COALESCE(METHD_UPD,'''')||''UPD_FRM_STD_ADD_TBL'' ,
	SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG =  TRUE ,
	SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG = TRUE 
	WHERE 
	DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES".SOURCE_SYSTEM_ID = XX.SOURCE_SYSTEM_ID
	AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"."SYSTEM_CODE"  = XX.SYSTEM_CODE
	AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"."EMPLOYEE_ID"  = XX.EMPLOYEE_ID ;

/* Update Process flag which has not cleansed successfully with all attribute*/


	UPDATE  DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES" 
	FROM (
	SELECT y.source_system_id,y.system_code,y.employee_id,X.STD_EMPLOYEE_ADDRESS,
	X.STD_EMPLOYEE_CITY,X.STD_EMPLOYEE_COUNTY,X.STD_EMPLOYEE_STATE_NAME,X.STD_EMPLOYEE_STATE_CODE,X.STD_EMPLOYEE_ZIP,X.STD_EMPLOYEE_ZIP_PLUS_FOUR,X.LABEL,
	X.STD_EMPLOYEE_COUNTRY_CODE,
	X.ADDRESS_NUMBER,X.STREET,X.POINTS,X.LATITUDE ,X.LONGITUDE ,X.RELEVANCE
	FROM 
	(SELECT 
		"SRC_EMPLOYEE_ADDRESS" ,
		"SRC_EMPLOYEE_CITY" ,
		"SRC_EMPLOYEE_STATE_CODE" ,
		"SRC_EMPLOYEE_ZIP" ,
		STD_EMPLOYEE_ADDRESS,
		STD_EMPLOYEE_CITY,
		STD_EMPLOYEE_COUNTY,
		STD_EMPLOYEE_STATE_NAME,
		STD_EMPLOYEE_STATE_CODE,
		STD_EMPLOYEE_ZIP,
		STD_EMPLOYEE_ZIP_PLUS_FOUR,
		STD_EMPLOYEE_COUNTRY_CODE,
		ADDRESS_NUMBER,
		STREET,
		LABEL,
		POINTS,
		LATITUDE ,
		LONGITUDE ,
		RELEVANCE 
	FROM DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"
	WHERE "SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG" = TRUE 
	AND "SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG" = FALSE 
	GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)x 
	JOIN (SELECT source_system_id,system_code,employee_id,"SRC_EMPLOYEE_ADDRESS" ,
		"SRC_EMPLOYEE_CITY" ,
		"SRC_EMPLOYEE_STATE_CODE" ,
		"SRC_EMPLOYEE_ZIP" 
	FROM DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES"
	WHERE "SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG" = FALSE  
	AND "SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG" = FALSE 
	)y 
	ON x.SRC_EMPLOYEE_ADDRESS = y.SRC_EMPLOYEE_ADDRESS
	AND x.SRC_EMPLOYEE_CITY = y.SRC_EMPLOYEE_CITY 
	AND x.SRC_EMPLOYEE_STATE_CODE = y.SRC_EMPLOYEE_STATE_CODE
	AND x.SRC_EMPLOYEE_ZIP = y.SRC_EMPLOYEE_ZIP )xx
	SET
	STD_EMPLOYEE_ADDRESS = xx.STD_EMPLOYEE_ADDRESS,
	STD_EMPLOYEE_CITY  = xx.STD_EMPLOYEE_CITY,
	STD_EMPLOYEE_COUNTY  =xx.STD_EMPLOYEE_COUNTY,
	STD_EMPLOYEE_STATE_NAME  = xx.STD_EMPLOYEE_STATE_NAME,
	STD_EMPLOYEE_STATE_CODE  = xx.STD_EMPLOYEE_STATE_CODE,
	STD_EMPLOYEE_ZIP  = xx.STD_EMPLOYEE_ZIP,
	STD_EMPLOYEE_ZIP_PLUS_FOUR = xx.STD_EMPLOYEE_ZIP_PLUS_FOUR,
	STD_EMPLOYEE_COUNTRY_CODE  = xx.STD_EMPLOYEE_COUNTRY_CODE ,
	ADDRESS_NUMBER  = xx.ADDRESS_NUMBER ,
	STREET  = xx.STREET ,
	POINTS  = xx. POINTS,
	LABEL = xx.LABEL,
	LATITUDE  = xx.LATITUDE ,
	LONGITUDE  = xx.LONGITUDE ,
	RELEVANCE  = xx.RELEVANCE,
	SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG = TRUE ,
	METHD_UPD = COALESCE (METHD_UPD,'''')||''| PROCS_FLG_UPD_NON_CLENS_REC''
	WHERE 
	DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES".source_system_id = xx.source_system_id
	AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES".system_code = xx.system_code
	AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES".employee_id = xx.employee_id  ;



/* FLAG UPDATE FROM  STANDARD ATTRIBUTE TO SOURCE ATTRIBUTE  */

	UPDATE  DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_SRC_ATTRIBUTES" FROM 
	(SELECT  
	SRC."SOURCE_SYSTEM_ID" ,
	SRC."SYSTEM_CODE" ,
	SRC."EMPLOYEE_ID" ,
	STD."SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG" ,
	STD."SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG" 
	FROM 
	DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_SRC_ATTRIBUTES" SRC
	JOIN DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_STD_ATTRIBUTES" STD 
	ON SRC.SOURCE_SYSTEM_ID =  STD."SOURCE_SYSTEM_ID" 
	AND SRC.SYSTEM_CODE =  STD."SYSTEM_CODE" 
	AND SRC.EMPLOYEE_ID = STD."EMPLOYEE_ID" )XX
	SET 
	"SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG"  = XX.SRC_EMPLOYEE_ADDRESS_PROCESSED_FLAG,
	"SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG" = XX.SRC_EMPLOYEE_ADDRESS_SUCCESSFULLY_CLEANSED_FLAG
	WHERE 
	DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_SRC_ATTRIBUTES"."SOURCE_SYSTEM_ID"  = XX.SOURCE_SYSTEM_ID
	AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_SRC_ATTRIBUTES"."SYSTEM_CODE"  = XX.SYSTEM_CODE
	AND DISC_${var.SF_ENVIRONMENT}.DATA_CLEANSING."EMPLOYEE_SRC_ATTRIBUTES"."EMPLOYEE_ID"  = XX.EMPLOYEE_ID ;


 
 RETURN ''SUCCESS'';
    END;

 EOT
}

