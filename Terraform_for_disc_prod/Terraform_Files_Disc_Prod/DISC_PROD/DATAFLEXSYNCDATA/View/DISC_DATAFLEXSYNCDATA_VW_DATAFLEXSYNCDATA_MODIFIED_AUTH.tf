resource "snowflake_view" "DISC_DATAFLEXSYNCDATA_VW_DATAFLEXSYNCDATA_MODIFIED_AUTH" {
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "DATAFLEXSYNCDATA"
	name = "VW_DATAFLEXSYNCDATA_MODIFIED_AUTH"
	statement = <<-SQL
	 (
	SELECT * FROM (
	SELECT MAX(RN) OVER(PARTITION BY D.DBNAME,D.CLIENTNUMBER,D.CONTRACTCODE) AS MAXRN,D.* FROM  
	(SELECT ROW_NUMBER() OVER(PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE ORDER BY ETL_LAST_UPDATED_DATE ) AS RN,
	DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, DATECHANGED
	FROM DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.HIST_DFCLIENTCONTRACTS )D
	INNER JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCLIENTCONTRACTS DC
	ON D.DBNAME=dc.DBNAME AND D.CLIENTNUMBER=dc.CLIENTNUMBER AND D.CONTRACTCODE=dc.CONTRACTCODE
))
 -- TO GET LAST DAY OF MONTH of LAST visit FOR END date NULL records
, v_data AS( 
SELECT CASE WHEN SYSTEM_CODE ='IL - 8380' THEN 'IL' 
						WHEN SYSTEM_CODE ='MO - 8463' THEN 'MO' 
						ELSE SYSTEM_CODE END AS SYSTEM_CODE
			,CLIENT_NUMBER,CONTRACT_CODE,MAX(REPORT_DATE)AS REPORT_DATE 
FROM  DW_${var.SF_ENVIRONMENT}.HAH.FACT_VISIT WHERE source_system_id=3 GROUP BY 1,2,3
)
,CURRENT_AUTH AS (
	SELECT DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE,AUTHEND AS ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, DATECHANGED FROM 
	(SELECT AR.*,COALESCE(AR.ENDSERVICEDATE,LAST_DAY(FV.REPORT_DATE),LAST_DAY(GETDATE())) AS AUTHEND 
	FROM ALL_RECORDS AR 
	LEFT JOIN v_data fv ON
	fv.SYSTEM_CODE =AR.dbname
	AND  fv.CONTRACT_CODE = AR.CONTRACTCODE AND fv.CLIENT_NUMBER = AR.CLIENTNUMBER::varchar
	WHERE MAXRN=RN)
)
, OLD_auth AS 
(
SELECT AR.*,
FIRST_VALUE(DATECHANGED) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE,BEGINSERVICEDATE,ENDSERVICEDATE,WEEKLYMAXHOURS,MONTHLYMAXHOURS ORDER BY RN) AS NEWDATECHANGED
FROM ALL_RECORDS AR WHERE MAXRN!=RN  
AND ((BEGINSERVICEDATE IS NOT NULL AND ENDSERVICEDATE IS NOT NULL) 
--	 OR (BEGINSERVICEDATE IS NULL AND ENDSERVICEDATE IS NOT NULL)
-- 	 OR (BEGINSERVICEDATE IS NOT NULL AND ENDSERVICEDATE IS NULL)
 	 )
AND MONTHLYMAXHOURS!=9999
QUALIFY NEWDATECHANGED IS NOT NULL
)
, AUTHS AS (
SELECT DISTINCT DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, NEWDATECHANGED AS DATECHANGED FROM OLD_AUTH
UNION ALL 
SELECT DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, DATECHANGED FROM CURRENT_AUTH
)
, CLEANED_AUTHS AS (
SELECT * FROM 
(SELECT MAX(RN) OVER(PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE) AS MAXRN,* FROM
(SELECT DISTINCT ROW_NUMBER() OVER(PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE ORDER BY DATECHANGED ) AS RN,* FROM
(SELECT DISTINCT DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, NEWDATECHANGED AS DATECHANGED FROM 
(SELECT FIRST_VALUE(DATECHANGED) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE,BEGINSERVICEDATE,ENDSERVICEDATE,WEEKLYMAXHOURS,MONTHLYMAXHOURS ORDER BY DATECHANGED) AS NEWDATECHANGED,*FROM
(SELECT DISTINCT DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE , ENDSERVICEDATE,
		MONTHnew AS MONTHLYMAXHOURS,weeknew AS WEEKLYMAXHOURS, DATECHANGED FROM
(SELECT DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, DATECHANGED
 		, FIRST_VALUE(MONTHLYMAXHOURS) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE,BEGINSERVICEDATE,ENDSERVICEDATE,DATECHANGED ORDER BY MONTHLYMAXHOURS DESC) AS MONTHnew
 		, FIRST_VALUE(WEEKLYMAXHOURS) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE,BEGINSERVICEDATE,ENDSERVICEDATE,DATECHANGED ORDER BY WEEKLYMAXHOURS DESC) AS weeknew FROM 
(SELECT DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE, AEND AS  ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, DATECHANGED FROM 
(SELECT DBNAME, CLIENTNUMBER, CONTRACTCODE, BEGINSERVICEDATE, ENDSERVICEDATE, MONTHLYMAXHOURS, WEEKLYMAXHOURS, DATECHANGED
 		, FIRST_VALUE(ENDSERVICEDATE) OVER (PARTITION BY DBNAME,CLIENTNUMBER,CONTRACTCODE,BEGINSERVICEDATE ORDER BY ENDSERVICEDATE DESC,DATECHANGED DESC) AS AEND
 FROM AUTHS))))))))
)
, DATA AS (
SELECT DISTINCT CA.*,
	CASE WHEN RN =1 THEN iff(COALESCE(CA.BEGINSERVICEDATE,DC.BEGINSERVICEDATE)<DC.BEGINSERVICEDATE,DC.BEGINSERVICEDATE,COALESCE(CA.BEGINSERVICEDATE,DC.BEGINSERVICEDATE))
		 WHEN RN!=1 THEN iff(IFF(CA.DATECHANGED>CA.ENDSERVICEDATE,CA.ENDSERVICEDATE,CA.DATECHANGED)<DC.BEGINSERVICEDATE,DC.BEGINSERVICEDATE,IFF(CA.DATECHANGED>CA.ENDSERVICEDATE,CA.ENDSERVICEDATE,CA.DATECHANGED))		 	   
    END AS MODIFIED_START_DATE,
	CASE WHEN RN =MAXRN THEN iff(CA.ENDSERVICEDATE>DC.ENDSERVICEDATE,DC.ENDSERVICEDATE,CA.ENDSERVICEDATE)
		 WHEN RN!=MAXRN THEN iff(COALESCE(LEAD(DATEADD(DAY,-1,MODIFIED_START_DATE))OVER (PARTITION BY CA.DBNAME,CA.CLIENTNUMBER,CA.CONTRACTCODE,CA.BEGINSERVICEDATE,CA.ENDSERVICEDATE ORDER BY RN),CA.ENDSERVICEDATE)
		 					>DC.ENDSERVICEDATE,DC.ENDSERVICEDATE,
		 					COALESCE(LEAD(DATEADD(DAY,-1,MODIFIED_START_DATE))OVER (PARTITION BY CA.DBNAME,CA.CLIENTNUMBER,CA.CONTRACTCODE,CA.BEGINSERVICEDATE,CA.ENDSERVICEDATE ORDER BY RN),CA.ENDSERVICEDATE))
	END AS MODIFIED_END_DATE
FROM CLEANED_AUTHS CA
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCLIENTS DC
ON DC.NUMBER  = CA.CLIENTNUMBER AND DC.DBNAME = CA.DBNAME)
--------------------
, authdata AS (sELECT DISTINCT D.*
		, IFF(datediff(DAY,MODIFIED_START_DATE,MODIFIED_END_DATE)+1<0,0,datediff(DAY,MODIFIED_START_DATE,MODIFIED_END_DATE)+1) AS AUTHDAYS
		, COALESCE(iff(EC.AUTHTYPE='WEEKLY_CAREPLAN','WEEKLY',EC.AUTHTYPE),'MONTHLY') AS AUTHTYPE
		, c.ONHOLDSTARTDATE , c.ONHOLDENDDATE 
FROM DATA D
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATAFLEXSYNCDATA.DFCLIENTS C 
	ON C.DBNAME = D.DBNAME 
	AND C.NUMBER = D.CLIENTNUMBER 
LEFT JOIN DISC_${var.SF_ENVIRONMENT}.BI_REPOSITORY.EXTERNALCONTRACTS EC
    ON EC.DBNAME = d.DBNAME AND EC.INTCOD = d.CONTRACTCODE
WHERE AUTHDAYS>0 )
SELECT *     
--, CASE WHEN ONHOLDSTARTDATE IS NULL OR MODIFIED_START_DATE IS NULL OR ONHOLDSTARTDATE > MODIFIED_END_DATE THEN NULL
--     	 	   WHEN ONHOLDSTARTDATE < MODIFIED_START_DATE AND ONHOLDENDDATE < MODIFIED_END_DATE THEN NULL
--      		   WHEN ONHOLDSTARTDATE <= MODIFIED_START_DATE THEN MODIFIED_START_DATE
-- 		  ELSE ONHOLDSTARTDATE END AS PERIOD_ONHOLD_BEGIN_DATE
--		, CASE WHEN PERIOD_ONHOLD_BEGIN_DATE IS NULL THEN NULL 
-- 		  ELSE IFF(COALESCE(ONHOLDENDDATE, MODIFIED_END_DATE) >= MODIFIED_END_DATE,
--		  MODIFIED_END_DATE, COALESCE(ONHOLDENDDATE, MODIFIED_END_DATE)) END AS PERIOD_ONHOLD_END_DATE
--		, IFF(datediff(DAY,PERIOD_ONHOLD_BEGIN_DATE,PERIOD_ONHOLD_END_DATE)+1<0,0,datediff(DAY,PERIOD_ONHOLD_BEGIN_DATE,PERIOD_ONHOLD_END_DATE)+1) AS Onhold_Days
--		, IFNULL(AUTHDAYS-Onhold_Days,0) AS DERIVED_AUTH_DAYS_WOH
--		, IFNULL(IFF(AUTHTYPE = 'WEEKLY', (WEEKLYMAXHOURS/7)*IFF(AUTHDAYS<0,0,AUTHDAYS),
--    	  (MONTHLYMAXHOURS/30)*IFF(AUTHDAYS<0,0,AUTHDAYS)),0) AS PERIOD_HOURS_AUTHORIZED
----		, IFNULL(IFF(AUTHTYPE = 'WEEKLY', (WEEKLYMAXHOURS/7)*DERIVED_AUTH_DAYS_WOH,
----    	  (MONTHLYMAXHOURS/30)*DERIVED_AUTH_DAYS_WOH),0) AS PERIOD_HOURS_AUTHORIZED_WOH
--		, IFNULL(IFF(AUTHTYPE = 'WEEKLY', WEEKLYMAXHOURS*
--					iff(datediff(week,MODIFIED_START_DATE,MODIFIED_END_DATE)+1<0,0,datediff(WEEK,MODIFIED_START_DATE,MODIFIED_END_DATE)+1),
--    	  MONTHLYMAXHOURS*iff(datediff(MONTH,MODIFIED_START_DATE,MODIFIED_END_DATE)+1<0,0,datediff(MONTH,MODIFIED_START_DATE,MODIFIED_END_DATE)+1)),0) AS PERIOD_HOURS_AUTHORIZED_MAX
FROM authdata d
--where
--D.DBNAME='IL'AND D.CLIENTNUMBER=682784 AND D.CONTRACTCODE='DU'
--D.DBNAME='AL'AND D.CLIENTNUMBER=318582 AND D.CONTRACTCODE='6'
--D.DBNAME='AL'AND D.CLIENTNUMBER=330850 AND D.CONTRACTCODE='M'
--D.DBNAME='MS'AND D.CLIENTNUMBER=71105 and D.CONTRACTCODE='H'
--D.DBNAME='IL'AND D.CLIENTNUMBER=559634 and D.CONTRACTCODE='1K'
--RN!=RN1
--BEGINSERVICEDATE IS NULL
--ORDER BY D.DBNAME,D.CLIENTNUMBER,D.CONTRACTCODE
)
);
SQL
	or_replace = true 
	is_secure = false 
}

