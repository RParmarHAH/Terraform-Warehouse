resource "snowflake_procedure" "DISC_DATA_VAULT_LOAD_SAT_EMPLOYEE_SANDATA" {
	name ="LOAD_SAT_EMPLOYEE_SANDATA"
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "DATA_VAULT"
	language  = "SQL"

	arguments {
		name = "STR_ETL_TASK_KEY"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_START"
		type = "VARCHAR(16777216)"
}	

	arguments {
		name = "STR_CDC_END"
		type = "VARCHAR(16777216)"
}	
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
  RETURN_RESULT VARCHAR(1000);
  return_result_temp varchar(1000);
BEGIN
	INSERT INTO DATA_VAULT.HUB_EMPLOYEE
					WITH base AS (SELECT st.ssn, st.STAFFAGENCYID AS EMPLOYEE_ID,
									RANK() OVER (PARTITION BY SSN
									ORDER BY IFF(st.UPDATEDAT::date=''1900-01-01'', ''9999-12-31'',st.UPDATEDAT::date) DESC,NVL(st.REHIREDATE,''1900-01-01'') desc, 
									NVL(st.EOE,''1900-01-01'') DESC,NVL(st.STATE,''A'') DESC,st.STAFFID desc,st.ETL_LAST_UPDATED_DATE DESC, st.ETL_INSERTED_DATE DESC) as rnk_SSN
									,RANK() OVER (PARTITION BY st.STAFFAGENCYID
									ORDER BY IFF(st.UPDATEDAT::date=''1900-01-01'', ''9999-12-31'',st.UPDATEDAT::date) DESC,NVL(st.REHIREDATE,''1900-01-01'') desc, 
									NVL(st.EOE,''1900-01-01'') DESC,NVL(st.STATE,''A'') DESC,st.STAFFID desc,st.ETL_LAST_UPDATED_DATE DESC, st.ETL_INSERTED_DATE DESC) as rnk_pay
						FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_STAFFS st
						WHERE st.ETL_LAST_UPDATED_DATE >= ''1900-01-01'' and AGENCYID=''8485'' AND SSN<>''''
    						UNION 
							SELECT st.SSN, st.STAFFAGENCYID AS EMPLOYEE_ID,
								1 as rnk_SSN
								,RANK() OVER (PARTITION BY st.STAFFAGENCYID
								ORDER BY IFF(st.UPDATEDAT::date=''1900-01-01'', ''9999-12-31'',st.UPDATEDAT::date) DESC,NVL(st.REHIREDATE,''1900-01-01'') desc, 
								NVL(st.EOE,''1900-01-01'') DESC,NVL(st.STATE,''A'') DESC,st.STAFFID desc,st.ETL_LAST_UPDATED_DATE DESC, st.ETL_INSERTED_DATE DESC) as rnk_pay
						FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_STAFFS st
						WHERE st.ETL_LAST_UPDATED_DATE >= ''1900-01-01'' and AGENCYID=''8485'' AND SSN=''''
						AND TRY_CAST(st.STAFFAGENCYID AS integer) NOT IN (SELECT E.EMPLOYEE_NUMBER FROM DISC_${var.SF_ENVIRONMENT}.TRUSTPOINTDATA.EMPLOYEES E )
						)
					SELECT
						 MD5(IFF(SDEmp.ssn='''', SDEmp.staffagencyid, SDEmp.ssn)) AS HASH_EMPLOYEE_KEY
--						 MD5(SDEmp.ssn) AS HASH_EMPLOYEE_KEY
						, SDEmp.ssn AS EMPLOYEE_SID
						, FIRSTNAME AS EMPLOYEE_FIRST_NAME
						, LASTNAME AS EMPLOYEE_LAST_NAME
--						, SDEmp.ID as EMPLOYEE_ID
						, SDEmp.STAFFAGENCYID as EMPLOYEE_ID
						, AGENCYID AS RECORD_SYSTEM_CODE
						, 4 AS RECORD_SOURCE_SYSTEM_ID
						, :STR_ETL_TASK_KEY AS ETL_TASK_KEY
                        , :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
						, convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE
						, CURRENT_USER as ETL_INSERTED_BY
						, convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE
						, CURRENT_USER as ETL_LAST_UPDATED_BY
						, 0 as ETL_DELETED_FLAG
					FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_STAFFS SDEmp
					JOIN base b ON SDEmp.STAFFAGENCYID = b.EMPLOYEE_ID AND SDEmp.ssn=b.SSN AND b.rnk_ssn = 1 AND b.rnk_pay = 1
--					AND MD5(SDEmp.ssn) NOT IN (SELECT HASH_EMPLOYEE_KEY FROM DATA_VAULT.HUB_EMPLOYEE)
AND MD5(SDEmp.ssn) IN 
(
SELECT MD5(SDEmp.ssn)
FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_STAFFS SDEmp
WHERE SDEmp.AGENCYID=''8485'' AND (SDEmp.ssn NOT LIKE ''000000%'') AND (SDEmp.ssn NOT LIKE ''999%'')
EXCEPT 
SELECT MD5(s.EMPLOYEE_SSN) 
FROM DISC_${var.SF_ENVIRONMENT}.TRUSTPOINTDATA.EMPLOYEES s
)
WHERE SDEmp.AGENCYID=''8485'' AND (SDEmp.ssn NOT LIKE ''000000%'') AND (SDEmp.ssn NOT LIKE ''999%'')
AND SDEmp.ssn NOT IN (SELECT SSN FROM Data_Management.Data_Quality.Invalid_SSN);
SELECT CONCAT (''MESSAGE : '',"number of rows inserted",'' Rows Inserted.'') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
	
	     CREATE OR REPLACE TABLE DATA_VAULT.SAT_EMPLOYEE_SANDATA as
					SELECT
						COALESCE(tp.HASH_EMPLOYEE_KEY, MD5(sd.ssn)) AS HASH_EMPLOYEE_KEY
						, sd.*
					FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_STAFFS sd
					LEFT JOIN DISC_${var.SF_ENVIRONMENT}.DATA_VAULT.HUB_EMPLOYEE tp ON sd.STAFFAGENCYID = tp.EMPLOYEE_ID
						AND sd.AGENCYID=''8485'' AND tp.RECORD_SOURCE_SYSTEM_ID = ''6''
					WHERE sd.EMAIL NOT LIKE ''%@test.com'' AND sd.AGENCYID=''8485'' 
					AND (sd.ssn<>'''') AND (sd.ssn NOT LIKE ''000000%'') AND (sd.ssn NOT LIKE ''999%'');
	
	     CREATE OR REPLACE TABLE DATA_VAULT.VW_SAT_EMPLOYEE_SANDATA AS
					WITH latest as (SELECT HASH_EMPLOYEE_KEY,STAFFAGENCYID, 
									RANK() OVER (PARTITION BY SSN ORDER BY IFF(st.UPDATEDAT::date=''1900-01-01'', ''9999-12-31'',st.UPDATEDAT::date) DESC,
												 NVL(st.REHIREDATE,''1900-01-01'') desc, NVL(st.EOE,''1900-01-01'') DESC,NVL(st.STATE,''A'') DESC,
													 st.STAFFID desc,st.ETL_LAST_UPDATED_DATE DESC, st.ETL_INSERTED_DATE DESC) as rnk_SSN
									FROM DISC_${var.SF_ENVIRONMENT}.DATA_VAULT.SAT_EMPLOYEE_SANDATA st )
					SELECT sat.*
					FROM DISC_${var.SF_ENVIRONMENT}.DATA_VAULT.SAT_EMPLOYEE_SANDATA sat
					JOIN latest vw ON sat.HASH_EMPLOYEE_KEY = vw.HASH_EMPLOYEE_KEY
						AND sat.STAFFAGENCYID =  vw.STAFFAGENCYID
					    AND vw.rnk_SSN=1;

	
	      INSERT INTO DATA_VAULT.LINK_EMPLOYEE
					WITH new_rec AS (
						SELECT MD5(NVL(s.AGENCYID,''S'') || ''-'' || TRY_CAST(NVL(s.STAFFAGENCYID,'''') AS Integer) || ''-'' || ''1900-01-01'' || ''-'' || ''SANDATAIMPORT'') AS LINK_EMPLOYEE_KEY
--                      SELECT MD5(NVL(s.AGENCYID,''S'') || ''-'' || TRY_CAST(s.STAFFAGENCYID AS Integer) || ''-'' || ''1900-01-01'' || ''-'' || ''SANDATAIMPORT'') AS LINK_EMPLOYEE_KEY
							 , NVL(VSNDT.HASH_EMPLOYEE_KEY,s.STAFFAGENCYID) as HASH_EMPLOYEE_KEY
							 , TRY_CAST(NVL(s.STAFFAGENCYID,'''') AS Integer)
							 , s.AGENCYID
							 , ''4'' AS SOURCE_SYSTEM_ID
							 , :STR_ETL_TASK_KEY AS ETL_TASK_KEY
                             , :STR_ETL_TASK_KEY AS ETL_INSERTED_TASK_KEY
							 , convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz AS ETL_INSERTED_DATE
							 , CURRENT_USER AS ETL_INSERTED_BY
							 , 0 AS ETL_DELETED_FLAG
						FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_STAFFS s
						LEFT JOIN DATA_VAULT.VW_SAT_EMPLOYEE_SANDATA VSNDT ON VSNDT.HASH_EMPLOYEE_KEY =  MD5(s.SSN)
						WHERE s.AGENCYID=''8485'' and  (s.ssn<>'''' or s.STAFFAGENCYID<>'''' ) AND (s.ssn NOT LIKE ''000000%'') AND (s.ssn NOT LIKE ''999%'') 
						      and (TRY_CAST(s.STAFFAGENCYID AS Integer) not in (select tp.EMPLOYEE_NUMBER from DISC_${var.SF_ENVIRONMENT}.TRUSTPOINTDATA.EMPLOYEES tp))
					)
					SELECT ct.*
					FROM new_rec ct
					WHERE ct.LINK_EMPLOYEE_KEY IN 
(
SELECT MD5(NVL(s.AGENCYID,''S'') || ''-'' || TRY_CAST(s.STAFFAGENCYID AS Integer) || ''-'' || ''1900-01-01'' || ''-'' || ''SANDATAIMPORT'') AS LINK_EMPLOYEE_KEY
FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_STAFFS s
where 
(s.ssn='''')
or 
MD5(s.ssn) in 
(
SELECT MD5(SDEmp.ssn)
FROM DISC_${var.SF_ENVIRONMENT}.SANDATAIMPORT.SANDATA_STAFFS SDEmp
WHERE SDEmp.AGENCYID=''8485'' AND (SDEmp.ssn<>'''') AND (SDEmp.ssn NOT LIKE ''000000%'') AND (SDEmp.ssn NOT LIKE ''999%'')
EXCEPT 
SELECT MD5(s.EMPLOYEE_SSN) 
FROM DISC_${var.SF_ENVIRONMENT}.TRUSTPOINTDATA.EMPLOYEES s
)
);
SELECT CONCAT('' '',"number of rows inserted",'' Rows Inserted.'') into :return_result_temp FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
return CONCAT(return_result,'' | '',return_result_temp);
END;

 EOT
}

