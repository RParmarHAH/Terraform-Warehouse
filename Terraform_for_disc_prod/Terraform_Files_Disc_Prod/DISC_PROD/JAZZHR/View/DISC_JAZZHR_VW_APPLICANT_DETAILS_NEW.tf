resource "snowflake_view" "DISC_JAZZHR_VW_APPLICANT_DETAILS_NEW" {
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "JAZZHR"
	name = "VW_APPLICANT_DETAILS_NEW"
	statement = <<-SQL
	 SELECT * FROM DISC_${var.SF_ENVIRONMENT}.JAZZHR.APPLICANT_DETAILS AD 
WHERE ID NOT IN (SELECT ID FROM DISC_DEDUPE_${var.SF_ENVIRONMENT}.JAZZHR.EMPLOYEE_DEDUPE_OUTPUT) 
AND ID IS NOT NULL 
UNION 
SELECT EML.MASTER_ID, AD.FIRST_NAME, AD.LAST_NAME, AD.EMAIL, AD.ADDRESS, AD.LOCATION, AD.PHONE, AD.LINKEDIN_URL, AD.EEO_GENDER, AD.EEO_RACE, AD.EEO_DISABILITY, AD.WEBSITE, AD.DESIRED_SALARY, AD.DESIRED_START_DATE, AD.REFERRER, AD.LANGUAGES, AD.WMYU, AD.HAS_DRIVER_LICENSE, AD.WILLING_TO_RELOCATE, AD.CITIZENSHIP_STATUS, AD.EDUCATION_LEVEL, AD.HAS_CDL, AD.OVER_18, AD.CAN_WORK_WEEKENDS, AD.CAN_WORK_EVENINGS, AD.CAN_WORK_OVERTIME, AD.HAS_FELONY, AD.FELONY_EXPLANATION, AD.TWITTER_USERNAME, AD.COLLEGE, AD.REFERENCES, AD.NOTES, AD.APPLY_DATE, AD.COMMENTS_COUNT, AD.SOURCE, AD.RECRUITER_ID, AD.EEOC_VETERAN, AD.EEOC_DISABILITY, AD.EEOC_DISABILITY_SIGNATURE, AD.EEOC_DISABILITY_DATE, AD.ETL_TASK_KEY, AD.ETL_INSERTED_TASK_KEY, AD.ETL_INSERTED_DATE, AD.ETL_INSERTED_BY, AD.ETL_LAST_UPDATED_DATE, AD.ETL_LAST_UPDATED_BY, AD.ETL_DELETED_FLAG 
FROM DISC_${var.SF_ENVIRONMENT}.JAZZHR.APPLICANT_DETAILS AD 
INNER JOIN DISC_DEDUPE_${var.SF_ENVIRONMENT}.JAZZHR.EMPLOYEE_MASTER_LIST EML ON AD.ID = EML.MASTER_ID 
WHERE AD.ID IS NOT NULL;
SQL
	or_replace = true 
	is_secure = false 
}

