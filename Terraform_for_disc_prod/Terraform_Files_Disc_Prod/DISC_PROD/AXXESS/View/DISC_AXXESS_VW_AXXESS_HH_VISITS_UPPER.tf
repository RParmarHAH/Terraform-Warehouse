resource "snowflake_view" "DISC_AXXESS_VW_AXXESS_HH_VISITS_UPPER" {
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "AXXESS"
	name = "VW_AXXESS_HH_VISITS_UPPER"
	statement = <<-SQL
	 SELECT 
VISIT_ID,
	BRANCH_ID,
	EPISODE_ID,
	PATIENT_ID,
	ACCOUNT,
	BRANCH,
	PAYOR_TYPE,
	PAYOR_CLASS,
	EPISODE_PRIMARY_INSURANCE,
	CURRENT_PRIMARY_INSURANCE,
	START_OF_CARE_DATE,
	EPISODE_START_DATE,
	EPISODE_END_DATE,
	EPISODE_DISCHARGE_DATE,
	MRN,
	PATIENT_FIRST_NAME,
	PATIENT_LAST_NAME,
	PATIENT_STATUS,
	ADMISSION_STATUS,
	DATE_OF_BIRTH,
	PATIENT_AGE,
	CITY,
	COUNTY,
	STATE,
	ZIP_CODE,
	VISIT_NAME,
	VISIT_TYPE,
	VISIT_STATUS,
	VISIT_DATE,
	VISIT_TIME_IN,
	VISIT_TIME_OUT,
	SCHEDULE_DATE,
	CLINICIAN_NAME,
	IS_MISSED_VISIT,
	ADDRESSLINE_1,
	ADDRESSLINE_2,
	IS_ORDER_FOR_NEXT_EPISODE,
	IS_VISIT_AUTHORIZATION_REQUIRED,
	IS_VISIT_AUTHORIZED,
	ORDER_NUMBER,
	ORDER_EPISODE_ID,
	ORDER_CERTIFICATION_START_DATE,
	ORDER_CERTIFICATION_END_DATE,
	ORDER_MD_SIGNATURE_DATE,
	ORDER_PHYSICIAN,
	ORDER_RECEIVED_BY,
	ORDER_RECEIVED_DATE,
	ORDER_SENT_DATE,
	ORDER_TYPE,
	FACT_AR_ID,
	ISBILLABLE,
	IS_COMPLETED_VISIT,
	CASE_MANAGER_ID,
	CLINICIAN_ID,
	INSURANCE_FEE_SCHEDULE_ID,
	UPPER(TRIM(IU.UNIT)) AS UNIT_TYPE,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
FROM AXXESS.AXXESS_PATIENTVISITS PV
LEFT JOIN AXXESS.AXXESS_INSURANCE_UNIT_TYPE IU ON TRIM(UPPER(PV.EPISODE_PRIMARY_INSURANCE)) = TRIM(UPPER(IU.PRIMARY_INSURANCE))
WHERE UPPER(PV.VISIT_NAME)  NOT IN (
'CHANGE IN FOCUS (SN)', -- Added BY PJShah ON 06/10
'10-DAY SUMMARY/CASE CONFERENCE',
'30 DAY SUMMARY/ CASE CONFERENCE',
'485 PLAN OF CARE' ,
'60 DAY SUMMARY/ CASE CONFERENCE', 
'COMMUNICATION NOTE',
'COORDINATION OF CARE', 
'COTA SUPERVISORY VISIT',
'DISCHARGE SUMMARY( AUTO GENERATED )',
'DRIVER / TRANSPORTATION LOG' ,
'END OF EPISODE SUMARRY ( AUTO – GENERATED )', 
'FACE TO FACE ENCOUNTER', 
'HHA CARE PLAN',
'HHA SUP VISIT',
'INCIDENT LOG' ,
'INFECTION LOG' ,
'MEDICAID POC',
'MEDICARE ELIGIBILITY REPORT' ,
'OT DISCHARGE SUMMARY' ,
'PHYSICAN ORDER' ,
'PLAN OF CARE',
'PLAN OF TREATMENT' ,
'POST HOSPITALIZATION ORDER', 
'PT DISCHARGE SUMMARY' ,
'PT PLAN OF CARE',
'ST discharge SUMMARY', 
'TRANSFER SUMMARY' ,
'TRANSFER SUMMARY ( AUTO GENERATED )')
--AND VISIT_STATUS IN ('Submitted', 'Returned for Review ',')
AND
(UPPER(PV.VISIT_STATUS) IN ('SUBMITTED ( PENDING QA REVIEW )' 
,'RETURNED FOR REVIEW'
--,'Completed ( Pending QA Review)'
--,'Completed ( Export Ready)'
,'EXPORTED'
,'OASISEXPORTED'
--,'Completed ( not exported)' 
,'COMPLETED'
,'MISSED – IF YOU WANT TO SEE MISSED VISIITS' 
,'MISSED VISITS ( PENDING QA REVIEW) IF YOU WANT TO SEE MISSED'
,'SUBMITTED WITH SIGNATURE '
,'RETURNED FOR CLINICIAN SIGNATURE')
OR 
UPPER (PV.VISIT_STATUS)  LIKE '%COMPLETED%'
)
AND
UPPER(VISIT_TYPE) NOT IN ('REPORTSANDNOTES') AND
UPPER(PV.VISIT_STATUS) NOT IN ('ORDERRETURNEDWPhYSICIANSIGNATURE','NOTENOTSTARTED')
AND UPPER(PV.EPISODE_PRIMARY_INSURANCE) IS NOT NULL;
SQL
	or_replace = true 
	is_secure = false 
}

