resource "snowflake_procedure" "DISC_DOCEBO_MERGE_STAGE_FACT_PAYROLL" {
	name ="MERGE_STAGE_FACT_PAYROLL"
	database = "DISC_${var.SF_ENVIRONMENT}"
	schema = "DOCEBO"
	language  = "SQL"
	return_type = "VARCHAR(16777216)"
	execute_as = "OWNER"
	statement = <<-EOT

DECLARE
	return_result VARCHAR(1000);
BEGIN
	MERGE INTO DOCEBO.FACT_PAYROLL TGT
	USING DOCEBO.PAYROLL STAGE
	ON TGT.COURSE_UNIQUE_ID = STAGE.COURSE_UNIQUE_ID AND TGT.USER_UNIQUE_ID = STAGE.USER_UNIQUE_ID 
	WHEN MATCHED THEN 
	UPDATE SET 
	    TGT.STATE= STAGE.STATE
	    ,TGT.PAYROLL_ID= STAGE.PAYROLL_ID
	   ,TGT.USER_UNIQUE_ID= STAGE.USER_UNIQUE_ID
	--   ,TGT.COURSE_UNIQUE_ID= STAGE.COURSE_UNIQUE_ID
	   ,TGT.CREDITS_CEUS= STAGE.CREDITS_CEUS
	   ,TGT.LOCATION= STAGE.LOCATION
	WHEN NOT MATCHED THEN 
	INSERT ( 
	    STATE
	,PAYROLL_ID 
	,USER_UNIQUE_ID 
	,COURSE_UNIQUE_ID 
	,CREDITS_CEUS 
	,"LOCATION"  
	,CDATE
	) 
	VALUES (
	    STAGE.STATE
	    ,STAGE.PAYROLL_ID 
	,STAGE.USER_UNIQUE_ID 
	,STAGE.COURSE_UNIQUE_ID 
	,STAGE.CREDITS_CEUS 
	,STAGE."LOCATION"  
	,CURRENT_TIMESTAMP()::timestamp_ntz
	);
	 
	SELECT CONCAT (''MESSAGE : '',"number of rows inserted",'' Rows Inserted & '',"number of rows updated",'' Rows Updated. '') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
	RETURN return_result;
END;

 EOT
}

