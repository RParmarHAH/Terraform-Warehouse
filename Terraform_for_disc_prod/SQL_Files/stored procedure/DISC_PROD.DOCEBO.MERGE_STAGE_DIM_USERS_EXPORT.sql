CREATE OR REPLACE PROCEDURE DISC_PROD.DOCEBO.MERGE_STAGE_DIM_USERS_EXPORT()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
	return_result VARCHAR(1000);
BEGIN
	MERGE INTO DOCEBO.DIM_USERS_EXPORT TGT
	USING DOCEBO.USERS_EXPORT STAGE
	ON  TGT.USER_UNIQUE_ID = STAGE.USER_UNIQUE_ID 
	WHEN MATCHED THEN 
	UPDATE SET 
	    TGT.USERNAME= STAGE.USERNAME
	    ,TGT.ARE_YOU_OR_ARE_YOU_APPLYING_TO_BE_AN_INHOME_CAREGIVER= STAGE.ARE_YOU_OR_ARE_YOU_APPLYING_TO_BE_AN_INHOME_CAREGIVER
	   ,TGT.BRANCHES= STAGE.BRANCHES
		,TGT.BUSINESS_UNIT= STAGE.BUSINESS_UNIT
	   ,TGT.DEACTIVATED= STAGE.DEACTIVATED
	   ,TGT.DIRECT_MANAGER= STAGE.DIRECT_MANAGER
	   ,TGT.DO_YOU_HAVE_A_HOME_HEALTH_CERTIFICATION= STAGE.DO_YOU_HAVE_A_HOME_HEALTH_CERTIFICATION
	   ,TGT.EMAIL= STAGE.EMAIL
	   ,TGT.EMAIL_ADDRESS= STAGE.EMAIL_ADDRESS
	   ,TGT.FIELD_OR_ADMIN= STAGE.FIELD_OR_ADMIN
	   ,TGT.FIRST_NAME= STAGE.FIRST_NAME
	   ,TGT.FIRST_SERVICE_DATE= STAGE.FIRST_SERVICE_DATE
	   ,TGT.FULL_NAME= STAGE.FULL_NAME
	   ,TGT.HIRE_DATE= STAGE.HIRE_DATE
	   ,TGT.HOURLY= STAGE.HOURLY
	   ,TGT.JOB_LEVEL= STAGE.JOB_LEVEL
	   ,TGT.JOB_TITLE= STAGE.JOB_TITLE
	   ,TGT.LANGUAGE= STAGE.LANGUAGE
	   ,TGT.LAST_NAME= STAGE.LAST_NAME
	   ,TGT.LOCATION= STAGE.LOCATION
	   ,TGT.MANAGER_NAME= STAGE.MANAGER_NAME
	    ,TGT.PAYROLL_ID= STAGE.PAYROLL_ID
		,TGT.STATE= STAGE.STATE
		,TGT.TIME_ZONE= STAGE.TIME_ZONE
		,TGT.USER_EXPIRATION_DATE= STAGE.USER_EXPIRATION_DATE
		,TGT.USER_LEVEL= STAGE.USER_LEVEL
		,TGT.ETL_TASK_KEY= STAGE.ETL_TASK_KEY
		,TGT.ETL_INSERTED_TASK_KEY= STAGE.ETL_INSERTED_TASK_KEY
		,TGT.ETL_INSERTED_DATE= STAGE.ETL_INSERTED_DATE
		,TGT.ETL_INSERTED_BY= STAGE.ETL_INSERTED_BY
		,TGT.ETL_LAST_UPDATED_DATE= STAGE.ETL_LAST_UPDATED_DATE
		,TGT.ETL_LAST_UPDATED_BY= STAGE.ETL_LAST_UPDATED_BY
		,TGT.ETL_DELETED_FLAG= STAGE.ETL_DELETED_FLAG	  
	WHEN NOT MATCHED THEN 
	INSERT ( 
	    USERNAME, ARE_YOU_OR_ARE_YOU_APPLYING_TO_BE_AN_INHOME_CAREGIVER, BRANCHES, BUSINESS_UNIT, DEACTIVATED, DIRECT_MANAGER, DO_YOU_HAVE_A_HOME_HEALTH_CERTIFICATION, EMAIL, EMAIL_ADDRESS, FIELD_OR_ADMIN, FIRST_NAME, FIRST_SERVICE_DATE, FULL_NAME, HIRE_DATE, HOURLY, JOB_LEVEL, JOB_TITLE, "LANGUAGE", LAST_NAME, "LOCATION", MANAGER_NAME, PAYROLL_ID, STATE, TIME_ZONE, USER_EXPIRATION_DATE, USER_LEVEL, USER_UNIQUE_ID, ETL_TASK_KEY, ETL_INSERTED_TASK_KEY, ETL_INSERTED_DATE, ETL_INSERTED_BY, ETL_LAST_UPDATED_DATE, ETL_LAST_UPDATED_BY, ETL_DELETED_FLAG 
	,CDATE
	) 
	VALUES (
	   STAGE.USERNAME, STAGE.ARE_YOU_OR_ARE_YOU_APPLYING_TO_BE_AN_INHOME_CAREGIVER, STAGE.BRANCHES, STAGE.BUSINESS_UNIT, STAGE.DEACTIVATED, STAGE.DIRECT_MANAGER, STAGE.DO_YOU_HAVE_A_HOME_HEALTH_CERTIFICATION, STAGE.EMAIL, STAGE.EMAIL_ADDRESS, STAGE.FIELD_OR_ADMIN, STAGE.FIRST_NAME, STAGE.FIRST_SERVICE_DATE, STAGE.FULL_NAME, STAGE.HIRE_DATE, STAGE.HOURLY, STAGE.JOB_LEVEL, STAGE.JOB_TITLE, STAGE."LANGUAGE", STAGE.LAST_NAME, STAGE."LOCATION", STAGE.MANAGER_NAME, STAGE.PAYROLL_ID, STAGE.STATE, STAGE.TIME_ZONE, STAGE.USER_EXPIRATION_DATE, STAGE.USER_LEVEL, STAGE.USER_UNIQUE_ID, STAGE.ETL_TASK_KEY, STAGE.ETL_INSERTED_TASK_KEY, STAGE.ETL_INSERTED_DATE, STAGE.ETL_INSERTED_BY, STAGE.ETL_LAST_UPDATED_DATE, STAGE.ETL_LAST_UPDATED_BY, STAGE.ETL_DELETED_FLAG,CURRENT_TIMESTAMP()::TIMESTAMP_NTZ
	  );
	 
	SELECT CONCAT (''MESSAGE : '',"number of rows inserted",'' Rows Inserted & '',"number of rows updated",'' Rows Updated. '') into :return_result FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
	RETURN return_result;
END;
';