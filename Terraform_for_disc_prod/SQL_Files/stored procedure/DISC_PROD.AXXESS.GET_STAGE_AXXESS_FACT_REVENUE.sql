CREATE OR REPLACE PROCEDURE DISC_PROD.AXXESS.GET_STAGE_AXXESS_FACT_REVENUE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS '
        var sql = `
    --*****************************************************************************************************************************
-- NAME:  ASR_DIM_CLIENT
--
--
-- DEVELOPMENT LOG:
-- DATE			AUTHOR					NOTES:
-- --------		-------------------		---------------------------------------------------------------------------------------
-- 07/08/2022	JIGAR		             Initial Development
--*****************************************************************************************************************************

INSERT OVERWRITE INTO STAGE.AXXESS_FACT_REVENUE 
WITH CLIENT AS
(
    SELECT * FROM
    (
        SELECT MASTER_ID, PATIENT_ID
        FROM DISC_DEDUPE_DEV.AXXESS.CLIENT_MASTER_LIST
    )
    UNION
    SELECT * FROM
    (
        SELECT DISTINCT MASTER_ID, PATIENT_ID
        FROM DISC_DEDUPE_DEV.AXXESS.CLIENT_MATCH_LIST
        WHERE PATIENT_ID NOT IN (SELECT PATIENT_ID FROM DISC_DEDUPE_DEV.AXXESS.CLIENT_MASTER_LIST)
    )
) --SELECT * FROM CLIENT;
, EMPLOYEE AS
(
    SELECT * FROM
    (
        SELECT MASTER_ID, EMPLOYEE_ID,(FIRST_NAME || ''  '' || LAST_NAME) AS EMP_NAME
        FROM DISC_DEDUPE_DEV.AXXESS.EMPLOYEE_MASTER_LIST
    )
    UNION
    SELECT * FROM
    (
        SELECT DISTINCT MASTER_ID, EMPLOYEE_ID,(FIRST_NAME || ''  '' || LAST_NAME) AS EMP_NAME
       -- SELECT *
		FROM DISC_DEDUPE_DEV.AXXESS.EMPLOYEE_MATCH_LIST
        WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM DISC_DEDUPE_DEV.AXXESS.EMPLOYEE_MASTER_LIST)
    )
) --SELECT * FROM EMPLOYEE;
, 
SUPERVISOR AS 
( -- THERE ARE NO PATIENTS WITH MULTIPLE SUPERVISORS. CHECKED MANUALLY ON 07/11
SELECT DISTINCT
			PATIENT_ID, PV.CASE_MANAGER_ID AS CASE_MANAGER_ID
            ,MD5(''PRIME'' || UPPER(TRIM(PV.CASE_MANAGER_ID)) || ''-'' || ''AXXESS'') AS SUPERVISOR_KEY -- ADDED BY PJSHAH ON 07/11 
			,EMP.EMP_NAME AS SUPERVISOR_NAME -- ADDED BY PJSHAH ON 07/11 
		FROM DISC_DEV.AXXESS.AXXESS_PATIENTVISITS PV 
		LEFT JOIN EMPLOYEE EMP ON EMP.EMPLOYEE_ID = PV.CASE_MANAGER_ID
) --SELECT * FROM SUPERVISOR ;
SELECT 
		DISTINCT
--		MD5(''PRIME'' ||ID || ''-'' || ''AXXESS'') AS REVENUE_KEY,
		MD5(''PRIME'' || ''-'' || IFNULL(TRIM(ARS.ID),''UNKNOWN'') || ''-'' || ''AXXESS'') AS REVENUE_KEY,	-- Added by Pinkal on 02/08/22
		to_timestamp(COALESCE(FINAL_OR_MANAGEDCARE_BILL_DATE,RAP_BILL_DATE,''12/31/1999 12:00:00 AM +00:00''), ''mm/dd/yyyy HH12:MI:SS AM TZH:TZM'')::date AS REPORT_DATE,  --need to change later
--		MD5(''PRIME'' || UPPER(TRIM(ARS.BRANCH_ID)) || ''-'' || ''AXXESS'') AS BRANCH_KEY,
		MD5(''PRIME'' || ''-'' || IFNULL(UPPER(TRIM(ARS.BRANCH_ID)),''UNKNOWN'') || ''-'' || ''AXXESS'') AS BRANCH_KEY,  -- Added by Pinkal on 02/08/22
--		MD5(''PRIME'' || ''UNKNOWN'' || ''-'' || ''AXXESS'') AS EMPLOYEE_KEY, -- NEED TO CHECK WHY SOME EMPLOYEES ARE NOT COMING 
		MD5(''PRIME'' || ''-'' || ''UNKNOWN'' || ''-'' || ''AXXESS'') AS EMPLOYEE_KEY,	-- Added by Pinkal on 02/08/22
--		MD5(''PRIME'' || TRIM(COALESCE(CLI.MASTER_ID,ARS.PATIENT_ID)) || ''-'' || ''AXXESS'') AS CLIENT_KEY, 
		MD5(''PRIME'' || ''-'' || TRIM(COALESCE(CLI.MASTER_ID,ARS.PATIENT_ID)) || ''-'' || ''AXXESS'') AS CLIENT_KEY, 	-- Added by Pinkal on 02/08/22
--		MD5(''PRIME'' || TRIM(COALESCE(PRIMARY_INSURANCE_NAME,CON.EPISODE_PRIMARY_INSURANCE)) || ''-'' || ''AXXESS'')  AS CONTRACT_KEY,  
--		MD5(''PRIME'' || TRIM(PRIMARY_INSURANCE_NAME) || ''-'' || ''AXXESS'')  AS CONTRACT_KEY,
		MD5(''PRIME'' || ''-'' || TRIM(PRIMARY_INSURANCE_NAME) || ''-'' || ''AXXESS'')  AS CONTRACT_KEY,	-- Added by Pinkal on 02/08/22
--		MD5(''PRIME'' ||ID || ''-'' || ''AXXESS'') AS INVOICE_KEY,
		MD5(''PRIME'' || ''-'' || TRIM(ARS.ID) || ''-'' || ''AXXESS'') AS INVOICE_KEY,	 -- Added by Pinkal on 02/08/22
		14 AS SOURCE_SYSTEM_ID,
--		MD5(''PRIME'' || UPPER(COALESCE(SUP.CASE_MANAGER_ID,''UNKNOWN'')) || ''-'' || ''AXXESS'') AS SUPERVISOR_KEY,-- NEED TO CHECK WHY SOME SUPERVISOR ARE NOT COMING
		MD5(''PRIME'' || ''-'' || IFNULL(TRIM(SUP.CASE_MANAGER_ID),''UNKNOWN'') || ''-'' || ''AXXESS'') AS SUPERVISOR_KEY, 	-- Added by Pinkal on 02/08/22
		to_timestamp(COALESCE(FINAL_OR_MANAGEDCARE_BILL_DATE,RAP_BILL_DATE,''12/31/1999 12:00:00 AM +00:00''), ''mm/dd/yyyy HH12:MI:SS AM TZH:TZM'')::date AS REVENUE_DATE, --TO TO CHANGE later
		to_timestamp(COALESCE(FINAL_CLAIM_PAYMENT_DATE, RAP_CLAIM_PAYMENT_DATE ), ''mm/dd/yyyy HH12:MI:SS AM TZH:TZM'')::date AS PAYMENT_DATE, 
--		UPPER(TRIM(BR.BRANCH))  AS BRANCH_NAME, 
		IFNULL(TRIM(BR.BRANCH),''UNKNOWN'') AS BRANCH_NAME,  -- Added by Pinkal on 02/08/22
		''UNKNOWN'' AS EMPLOYEE_ID,  --- Open query to client added by pjshah on 7/12
		-1 AS CLIENT_NUMBER,  --getting null because alpha num value
		TRIM(PRIMARY_INSURANCE_NAME)  AS CONTRACT_CODE, 
		ID AS INVOICE_NUMBER,   
		''REGULAR''AS INVOICE_TYPE,
		1 AS NUMBER_OF_CLIENTS,
		''PRIME'' AS SYSTEM_CODE,
		SUP.CASE_MANAGER_ID AS SUPERVISOR_CODE,  
		null AS BILL_CODE, 
		null AS INVOICE_HOURS, 
		null AS INVOICE_RATE,
		NVL(RAP_AMOUNT,0) + NVL(FINAL_OR_MANAGEDCARE_AMOUNT,0) + NVL(NET_ADJUSTMENTS,0) AS AMOUNT_BILLED, 
		NVL(CASH_RECEIVED,0) AS AMOUNT_COLLECTED,  
		NVL(NET_RECEIVABLE,0) AS AMOUNT_OUTSTANDING 
		,-1 AS ETL_TASK_KEY
		,-1 AS ETL_INSERTED_TASK_KEY
		,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE
		,CURRENT_USER AS ETL_INSERTED_BY
		,CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_UPDATED_DATE
		,CURRENT_USER AS ETL_LAST_UPDATED_BY
		,FALSE AS ETL_DELETED_FLAG			
FROM DISC_DEV.AXXESS.AXXESS_ARS ARS
LEFT JOIN CLIENT CLI ON ARS.PATIENT_ID = CLI.PATIENT_ID
LEFT JOIN SUPERVISOR SUP ON SUP.PATIENT_ID = ARS.PATIENT_ID
LEFT JOIN (SELECT  BRANCH_ID, BRANCH FROM DISC_DEV.AXXESS.AXXESS_EPISODESNAPSHOTS WHERE BRANCH_ID IS NOT NULL GROUP BY  BRANCH_ID, BRANCH)
BR ON BR.BRANCH_ID=ARS.BRANCH_ID
-- Home-Care Data
UNION ALL
-- WITH VISITFINANCIAL AS (
SELECT
REVENUE_KEY
,REPORT_DATE
,BRANCH_KEY
,EMPLOYEE_KEY
,CLIENT_KEY
,CONTRACT_KEY
,INVOICE_KEY
,SOURCE_SYSTEM_ID
,SUPERVISOR_KEY
,REVENUE_DATE
,MAX(PAYMENT_DATE) AS PAYMENT_DATE
,BRANCH_NAME
,EMPLOYEE_ID
,CLIENT_NUMBER
,CONTRACT_CODE
,INVOICE_NUMBER
,INVOICE_TYPE
,NUMBER_OF_CLIENTS
,SYSTEM_CODE
,SUPERVISOR_CODE
,BILL_CODE
,INVOICE_HOURS
,INVOICE_RATE
,SUM(AMOUNT_BILLED) AS AMOUNT_BILLED
,SUM(AMOUNT_COLLECTED) AS AMOUNT_COLLECTED
,SUM(AMOUNT_OUTSTANDING) AS AMOUNT_OUTSTANDING
,ETL_TASK_KEY
,ETL_INSERTED_TASK_KEY
,ETL_INSERTED_DATE
,ETL_INSERTED_BY
,ETL_UPDATED_DATE
,ETL_LAST_UPDATED_BY
,ETL_DELETED_FLAG
FROM
(
SELECT DISTINCT
		MD5(''PRIME'' || ''-'' || IFNULL(TRIM(FIN.CLAIM_ID),''UNKNOWN'') || ''-'' || ''AXXESS'') AS REVENUE_KEY,
		TRY_TO_DATE(COALESCE(FIN.BILLED_DATE,''1999-12-31''), ''YYYY-MM-DD'') AS REPORT_DATE,		
		MD5(''PRIME'' || ''-'' || IFNULL(UPPER(TRIM(FIN.BRANCH_ID)),''UNKNOWN'') || ''-'' || ''AXXESS'') AS BRANCH_KEY,
		MD5(''PRIME'' || ''-'' || ''UNKNOWN'' || ''-'' || ''AXXESS'') AS EMPLOYEE_KEY,
		MD5(''PRIME'' || ''-'' || TRIM(FIN.CLIENT_ID) || ''-'' || ''AXXESS'') AS CLIENT_KEY,
		MD5(''PRIME'' || ''-'' || TRIM(FIN.PRIMARY_INSURANCE_ID) || ''-'' || ''AXXESS'') AS CONTRACT_KEY,
		MD5(''PRIME'' || ''-'' || TRIM(FIN.CLAIM_ID) || ''-'' || ''AXXESS'') AS INVOICE_KEY,
		14 AS SOURCE_SYSTEM_ID,
		MD5(''PRIME'' || ''-'' || IFNULL(TRIM(VISIT.CAREPERIOD_CASEMANAGER_ID),''UNKNOWN'') || ''-'' || ''AXXESS'') AS SUPERVISOR_KEY,
		TRY_TO_DATE(COALESCE(FIN.BILLED_DATE,''1999-12-31''),''YYYY-MM-DD'') AS REVENUE_DATE,
		TRY_TO_DATE(FIN.PAYMENT_DATE , ''YYYY-MM-DD'') AS PAYMENT_DATE,
		IFNULL(TRIM(FIN.BRANCH_NAME),''UNKNOWN'') AS BRANCH_NAME,
		''UNKNOWN'' AS EMPLOYEE_ID,
		-1 AS CLIENT_NUMBER,
		TRIM(FIN.PRIMARY_INSURANCE_ID) AS CONTRACT_CODE,
		FIN.CLAIM_ID AS INVOICE_NUMBER,
		''REGULAR''AS INVOICE_TYPE,
		1 AS NUMBER_OF_CLIENTS,
		''PRIME'' AS SYSTEM_CODE,
		VISIT.CAREPERIOD_CASEMANAGER_ID AS SUPERVISOR_CODE,
		null AS BILL_CODE,
		null AS INVOICE_HOURS,
		null AS INVOICE_RATE,
		NVL(FIN.CLAIM_AMOUNT,0) AS AMOUNT_BILLED,
		NVL(FIN.PAYMENT_AMOUNT,0) AS AMOUNT_COLLECTED,
		(NVL(FIN.CLAIM_AMOUNT,0) - NVL(FIN.PAYMENT_AMOUNT,0)) AS AMOUNT_OUTSTANDING,
		-1 AS ETL_TASK_KEY,
		-1 AS ETL_INSERTED_TASK_KEY,
		CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_INSERTED_DATE,
		CURRENT_USER AS ETL_INSERTED_BY,
		CONVERT_TIMEZONE(''UTC'', CURRENT_TIMESTAMP)::TIMESTAMP_NTZ AS ETL_UPDATED_DATE,
		CURRENT_USER AS ETL_LAST_UPDATED_BY,
		FALSE AS ETL_DELETED_FLAG			
FROM (SELECT Distinct CLAIM_ID,FIRST_VALUE(CAREPERIOD_CASEMANAGER_ID) over (partition by CLAIM_ID    order by CLAIM_ID) as CAREPERIOD_CASEMANAGER_ID 
FROM DISC_DEV.AXXESS.AXXESS_VISITFINANCIALS
WHERE CLAIM_ID IS NOT NULL AND CAREPERIOD_CASEMANAGER_ID IS NOT NULL) VISIT
JOIN DISC_DEV.AXXESS.AXXESS_FINANCIALTRANSACTIONS FIN ON FIN.CLAIM_ID = VISIT.CLAIM_ID
 )T
GROUP BY
REVENUE_KEY
,REPORT_DATE
,BRANCH_KEY
,EMPLOYEE_KEY
,CLIENT_KEY
,CONTRACT_KEY
,INVOICE_KEY
,SOURCE_SYSTEM_ID
,SUPERVISOR_KEY
,REVENUE_DATE
,BRANCH_NAME
,EMPLOYEE_ID
,CLIENT_NUMBER
,CONTRACT_CODE
,INVOICE_NUMBER
,INVOICE_TYPE
,NUMBER_OF_CLIENTS
,SYSTEM_CODE
,SUPERVISOR_CODE
,BILL_CODE
,INVOICE_HOURS
,INVOICE_RATE
,ETL_TASK_KEY
,ETL_INSERTED_TASK_KEY
,ETL_INSERTED_DATE
,ETL_INSERTED_BY
,ETL_UPDATED_DATE
,ETL_LAST_UPDATED_BY
,ETL_DELETED_FLAG
`;
          try {
                snowflake.execute (
                    {sqlText: sql}
                    );
                return "Succeeded.";   // Return a success/error indicator.
                }
            catch (err)  {
                return "Failed: " + err;   // Return a success/error indicator.
                }  
          ';