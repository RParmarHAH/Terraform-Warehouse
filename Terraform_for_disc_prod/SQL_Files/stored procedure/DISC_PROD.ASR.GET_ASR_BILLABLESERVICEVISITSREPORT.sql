CREATE OR REPLACE PROCEDURE DISC_PROD.ASR.GET_ASR_BILLABLESERVICEVISITSREPORT("TASKKEY" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS ' 
--*****************************************************************************************************************************
-- NAME:  DISC_PROD.ASR.GET_ASR_BILLABLESERVICEVISITSREPORT 
--
-- PURPOSE: To Load Discovery Layer Tables
--
-- DEVELOPMENT LOG:
-- DATE        		AUTHOR                	NOTES:
-- ----------  		-------------------   	-----------------------------------------------------------------------------------------------
-- 2023-11-20 		Ravi Suthar            	Initial Development
--*****************************************************************************************************************************

BEGIN 
    --TargetSQL
    COPY INTO DISC_PROD.ASR.HIST_ASR_BILLABLESERVICEVISITSREPORT FROM (SELECT A.$1 AS VISITDATE, A.$2 AS WEEKDAY, A.$3 AS BILLABLE_HOURS, A.$4 AS BILLABLE_UNITS, A.$5 AS CUSTOMER_NAME, A.$6 AS SCHEDULED_CHECK_IN, A.$7 AS SCHEDULED_CHECK_OUT, A.$8 AS SCHEDULED_DURATION, A.$9 AS SCHEDULED_REQD_HRS, A.$10 AS ACTUAL_CHECK_IN, A.$11 AS ACTUAL_CHECK_OUT, A.$12 AS ACTUAL_DURATION, A.$13 AS PAYER_SOURCE, A.$14 AS SERVICE_TYPE, A.$15 AS SERVICE_CODE, A.$16 AS CUSTOMER_ID, A.$17 AS EMPLOYEE_ID, A.$18 AS SERVICEVISITID, A.$19 AS SERVICEVISITACTUALID, :TaskKey AS ETL_TASK_KEY, :TaskKey AS ETL_INSERTED_TASK_KEY, CURRENT_TIMESTAMP::TIMESTAMP_NTZ(9) AS ETL_INSERTED_DATE, CURRENT_USER() AS ETL_INSERTED_BY, CURRENT_TIMESTAMP::TIMESTAMP_NTZ(9) AS ETL_LAST_UPDATED_DATE, CURRENT_USER() AS ETL_LAST_UPDATED_BY, FALSE AS ETL_DELETED_FLAG FROM @DISC_PROD.Stage.AWSAZSTAGEPROD/ASR/Daily_Files/ASR_Data_Extract_BillableServiceVisitsReport(file_format => DISC_PROD.STAGE.PSV_FORMAT) A);

    --ViewSQL
    CREATE OR REPLACE TABLE DISC_PROD.ASR.ASR_BILLABLESERVICEVISITSREPORT AS WITH curr_v AS (SELECT SERVICEVISITID, MAX(ETL_LAST_UPDATED_DATE) AS MAX_LAST_UPDATED_DATE FROM DISC_PROD.ASR.HIST_ASR_BILLABLESERVICEVISITSREPORT WHERE SERVICEVISITID IS NOT NULL GROUP BY SERVICEVISITID) SELECT t.* FROM DISC_PROD.ASR.HIST_ASR_BILLABLESERVICEVISITSREPORT t INNER JOIN curr_v v ON t.SERVICEVISITID = v.SERVICEVISITID AND t.ETL_DELETED_FLAG = FALSE and t.ETL_LAST_UPDATED_DATE = v.MAX_LAST_UPDATED_DATE;

    return ''Success'';
END;
';