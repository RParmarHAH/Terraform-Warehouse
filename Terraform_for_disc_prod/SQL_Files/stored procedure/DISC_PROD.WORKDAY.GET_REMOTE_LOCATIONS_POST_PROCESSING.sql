CREATE OR REPLACE PROCEDURE DISC_PROD.WORKDAY.GET_REMOTE_LOCATIONS_POST_PROCESSING()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS ' DECLARE
  RETURN_RESULT VARCHAR(1000);
begin
INSERT INTO DISC_PROD.WORKDAY.REMOTE_LOCATIONS(BUSINESS_SITE_NAME,ETL_INSERTED_DATE,ETL_INSERTED_BY,ETL_LAST_UPDATED_DATE,ETL_LAST_UPDATED_BY,ETL_DELETED_FLAG)
SELECT DISTINCT 
  BUSINESS_SITE_NAME
-- ,COALESCE(TRY_CONVERT(INT,BUSINESS_SITE),BUSINESS_SITE) AS BUSINESS_SITE 
 ,convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE
 ,CURRENT_USER as ETL_INSERTED_BY
 ,convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE
 ,CURRENT_USER as ETL_LAST_UPDATED_BY
 ,FALSE as ETL_DELETED_FLAG
FROM DISC_PROD.WORKDAY.WORKER_POSITION_DATA 
WHERE BUSINESS_SITE_NAME NOT IN (SELECT DISTINCT BUSINESS_SITE_NAME FROM DISC_PROD.WORKDAY.REMOTE_LOCATIONS) 
AND (UPPER(BUSINESS_SITE_NAME) ILIKE ''%Remote -%'' OR UPPER(BUSINESS_SITE_NAME) ILIKE ''%- Remote%'' OR TRY_TO_NUMBER(BUSINESS_SITE) IS NULL);--TRY_TO_CONVERT(INT,BUSINESS_SITE) IS NULL);
SELECT CONCAT (''MESSAGE : '',"number of rows inserted",'' Rows Inserted.'') into :RETURN_RESULT FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
    RETURN RETURN_RESULT;
end;';