CREATE OR REPLACE PROCEDURE DISC_PROD.ASR.GET_ASR_EMPLOYEES("TASKKEY" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS ' 
--*****************************************************************************************************************************
-- NAME:  DISC_PROD.ASR.GET_ASR_EMPLOYEES 
--
-- PURPOSE: To Load Discovery Layer Tables
--
-- DEVELOPMENT LOG:
-- DATE        		AUTHOR                	NOTES:
-- ----------  		-------------------   	-----------------------------------------------------------------------------------------------
-- 2023-11-20 		Ravi Suthar            	Initial Development
--*****************************************************************************************************************************

BEGIN 
    --TargetSQL
    COPY INTO DISC_PROD.ASR.HIST_ASR_EMPLOYEES FROM (SELECT A.$1 AS EMPLOYEEID, A.$2 AS EMPLOYEEPUBLICID, A.$3 AS LASTNAME, A.$4 AS FIRSTNAME, A.$5 AS TITLE, A.$6 AS TITLEOFCOURTESY, A.$7 AS BIRTHDATE, A.$8 AS HIREDATE, A.$9 AS ADDRESS, A.$10 AS CITY, A.$11 AS REGION, A.$12 AS POSTALCODE, A.$13 AS COUNTRY, A.$14 AS HOMEPHONE, A.$15 AS EXTENSION, A.$16 AS PHOTO, A.$17 AS NOTES, A.$18 AS REPORTSTO, A.$19 AS PHOTOPATH, A.$20 AS SSN, A.$21 AS PHONE2, A.$22 AS EMERGENCYCONTACT, A.$23 AS EMERGENCYCONTACTPHONE, A.$24 AS DEPENDANTSCLAIMED, A.$25 AS DIRECTDEPOSIT, A.$26 AS EMAIL, A.$27 AS TERMINATIONDATE, A.$28 AS TERMINATIONREASON, A.$29 AS REVIEWPERIOD, A.$30 AS EMPLOYEESTATUS, A.$31 AS SUPERVISORID, A.$32 AS LOCATIONID, A.$33 AS EMPLOYEETYPEID, A.$34 AS ADPFILENUMBER, A.$35 AS LOCATIONLATITUDE, A.$36 AS LOCATIONLONGITUDE, A.$37 AS CREATEDON, A.$38 AS CREATEDBY, A.$39 AS LASTMODIFIEDON, A.$40 AS LASTMODIFIEDBY, A.$41 AS EMPLOYMENTTYPE, A.$42 AS EVV_SEQUENCEID, A.$43 AS EVV_LASTSUBMITTEDON, A.$44 AS EVV_TRANSACTIONID, A.$45 AS EVV_LASTSUBMITTEDBY, A.$46 AS EVV_LASTMODIFIEDON, :TaskKey AS ETL_TASK_KEY, :TaskKey AS ETL_INSERTED_TASK_KEY, CURRENT_TIMESTAMP::TIMESTAMP_NTZ(9) AS ETL_INSERTED_DATE, CURRENT_USER() AS ETL_INSERTED_BY, CURRENT_TIMESTAMP::TIMESTAMP_NTZ(9) AS ETL_LAST_UPDATED_DATE, CURRENT_USER() AS ETL_LAST_UPDATED_BY, FALSE AS ETL_DELETED_FLAG FROM @DISC_PROD.Stage.AWSAZSTAGEPROD/ASR/Daily_Files/ASR_Data_Extract_Employees(file_format => DISC_PROD.STAGE.PSV_FORMAT) A);

    --ViewSQL
    CREATE OR REPLACE TABLE DISC_PROD.ASR.ASR_EMPLOYEES AS WITH curr_v AS (SELECT EMPLOYEEID, MAX(ETL_LAST_UPDATED_DATE) AS MAX_LAST_UPDATED_DATE FROM DISC_PROD.ASR.HIST_ASR_EMPLOYEES GROUP BY EMPLOYEEID) SELECT t.* FROM DISC_PROD.ASR.HIST_ASR_EMPLOYEES t INNER JOIN curr_v v ON t.EMPLOYEEID = v.EMPLOYEEID AND t.ETL_DELETED_FLAG = FALSE and t.ETL_LAST_UPDATED_DATE = v.MAX_LAST_UPDATED_DATE;

    return ''Success'';
END;
';