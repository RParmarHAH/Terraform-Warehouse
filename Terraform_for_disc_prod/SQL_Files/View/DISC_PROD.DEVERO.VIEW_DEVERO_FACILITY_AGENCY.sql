create or replace view DISC_PROD.DEVERO.VIEW_DEVERO_FACILITY_AGENCY(
	FACILITY_ID,
	AGENCY_ID,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
) as (
WITH RESULT_DATA AS
(
SELECT DISTINCT 	
          F.FACILITY_ID
		, FACILITY.VALUE :"$" :: STRING AS AGENCY_ID
		, F.ETL_TASK_KEY
		, F.ETL_INSERTED_TASK_KEY
		, F.ETL_INSERTED_DATE
		, F.ETL_INSERTED_BY
		, F.ETL_LAST_UPDATED_DATE
		, F.ETL_LAST_UPDATED_BY
		, F.ETL_DELETED_FLAG
		, ROW_NUMBER() OVER(PARTITION BY FACILITY_ID,AGENCY_ID ORDER BY DATE_MODIFIED DESC) AS LATEST_MODIFIED
  FROM DISC_PROD.DEVERO.HIST_DEVERO_FACILITY  F
, LATERAL FLATTEN(XMLGET(PARSE_XML(F.FACILITY_XML), 'AGENCY_IDS'):"$":: ARRAY) FACILITY
--WHERE DATE(F.ETL_LAST_UPDATED_DATE) = COALESCE((
--SELECT MAX(DATE(ETL_LAST_UPDATED_DATE)) FROM DISC_PROD.DEVERO.HIST_DEVERO_FACILITY),DATE(GETDATE()))
)
SELECT 
FACILITY_ID
		,AGENCY_ID
		, ETL_TASK_KEY
		, ETL_INSERTED_TASK_KEY
		, ETL_INSERTED_DATE
		, ETL_INSERTED_BY
		, ETL_LAST_UPDATED_DATE
		, ETL_LAST_UPDATED_BY
		, ETL_DELETED_FLAG
FROM RESULT_DATA
WHERE LATEST_MODIFIED = 1
);