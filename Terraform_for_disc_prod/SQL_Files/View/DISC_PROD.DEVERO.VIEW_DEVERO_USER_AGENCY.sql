create or replace view DISC_PROD.DEVERO.VIEW_DEVERO_USER_AGENCY(
	USER_ID,
	AGENCY_NAME,
	BILLING_SYSTEM_AGENCY_ID,
	DATE_MODIFIED,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
) as (
WITH RESULT_DATA AS
(
SELECT DISTINCT
          U.USER_ID
        , XMLGET(UA.VALUE, 'AGENCY_NAME'):"$" :: STRING AS AGENCY_NAME
         , XMLGET(UA.VALUE, 'BILLING_SYSTEM_AGENCY_ID'):"$" :: STRING AS BILLING_SYSTEM_AGENCY_ID
         ,XMLGET(PARSE_XML(U.USER_XML), 'DATE_MODIFIED'):"$" :: STRING AS DATE_MODIFIED
        , U.ETL_TASK_KEY
        , U.ETL_INSERTED_TASK_KEY
        , U.ETL_INSERTED_DATE
        , U.ETL_INSERTED_BY
        , U.ETL_LAST_UPDATED_DATE
        , U.ETL_LAST_UPDATED_BY
        , U.ETL_DELETED_FLAG
        , ROW_NUMBER() OVER(PARTITION BY U.USER_ID,AGENCY_NAME,BILLING_SYSTEM_AGENCY_ID ORDER BY DATE_MODIFIED DESC) AS LATEST_MODIFIED
  FROM DISC_PROD.DEVERO.HIST_DEVERO_USER  U
, LATERAL FLATTEN(XMLGET(PARSE_XML(U.USER_XML), 'USER_AGENCIES'):"$":: ARRAY) UA
--WHERE DATE(U.ETL_LAST_UPDATED_DATE) = COALESCE((
--SELECT MAX(DATE(ETL_LAST_UPDATED_DATE)) FROM DISC_PROD.DEVERO.HIST_DEVERO_USER),DATE(GETDATE()))
)
SELECT USER_ID,
    AGENCY_NAME,
    BILLING_SYSTEM_AGENCY_ID,
    DATE_MODIFIED,
    ETL_TASK_KEY,
    ETL_INSERTED_TASK_KEY,
    ETL_INSERTED_DATE,
    ETL_INSERTED_BY,
    ETL_LAST_UPDATED_DATE,
    ETL_LAST_UPDATED_BY,
    ETL_DELETED_FLAG
FROM RESULT_DATA
WHERE LATEST_MODIFIED = 1
);