create or replace view DISC_PROD.PUBLIC.VIEW_DEVERO_ADMISSION_AGENCY(
	ADMISSION_SOURCE_ID,
	AGENCY_ID,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
) as (
WITH RESULT_DATA AS
(
SELECT DISTINCT 	
		  A.ADMISSION_SOURCE_ID
		, ADMISSION.VALUE:"$" :: STRING AS AGENCY_ID
		, A.ETL_TASK_KEY 
		, A.ETL_INSERTED_TASK_KEY
		, A.ETL_INSERTED_DATE
		, A.ETL_INSERTED_BY 
		, A.ETL_LAST_UPDATED_DATE
		, A.ETL_LAST_UPDATED_BY
		, A.ETL_DELETED_FLAG
		,ROW_NUMBER() OVER(PARTITION BY ADMISSION_SOURCE_ID ORDER BY DATE_MODIFIED DESC) AS LATEST_MODIFIED
  FROM DISC_PROD.DEVERO.HIST_DEVERO_ADMISSION A
, LATERAL FLATTEN(XMLGET(PARSE_XML(A.ADMISSION_XML), 'AGENCY_IDS'):"$":: ARRAY) ADMISSION
WHERE DATE(A.ETL_LAST_UPDATED_DATE) = (
SELECT MAX(DATE(ETL_LAST_UPDATED_DATE)) FROM DISC_PROD.DEVERO.HIST_DEVERO_ADMISSION)
)
SELECT 
ADMISSION_SOURCE_ID,
	AGENCY_ID,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
FROM RESULT_DATA
WHERE LATEST_MODIFIED =1
);