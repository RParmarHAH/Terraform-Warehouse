create or replace view DISC_PROD.DEVERO.VIEW_DEVERO_INSURANCE_AGENCY(
	INSURANCE_ID,
	AGENCY_IDS,
	DATE_MODIFIED,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
) as (
WITH RESULT_DATA AS
(
SELECT     DISTINCT
      I.INSURANCE_ID
    , INSURANCE.VALUE:"$" :: STRING AS AGENCY_IDS
    ,XMLGET(PARSE_XML(I.INSURANCE_XML), 'DATE_MODIFIED'):"$" :: STRING AS DATE_MODIFIED
    , I.ETL_TASK_KEY
    , I.ETL_INSERTED_TASK_KEY
    , I.ETL_INSERTED_DATE
    , I.ETL_INSERTED_BY
    , I.ETL_LAST_UPDATED_DATE
    , I.ETL_LAST_UPDATED_BY
    , I.ETL_DELETED_FLAG
    , ROW_NUMBER() OVER(PARTITION BY I.INSURANCE_ID,AGENCY_IDS ORDER BY DATE_MODIFIED DESC) AS LATEST_MODIFIED
  FROM DISC_PROD.DEVERO.HIST_DEVERO_INSURANCE  I
, LATERAL FLATTEN(XMLGET(PARSE_XML(I.INSURANCE_XML), 'AGENCY_IDS'):"$":: ARRAY) INSURANCE
--WHERE DATE(I.ETL_LAST_UPDATED_DATE) = COALESCE((
--SELECT MAX(DATE(ETL_LAST_UPDATED_DATE)) FROM DISC_PROD.DEVERO.HIST_DEVERO_INSURANCE),DATE(GETDATE()))
)
SELECT  INSURANCE_ID
        , AGENCY_IDS
        , DATE_MODIFIED
         , ETL_TASK_KEY
        , ETL_INSERTED_TASK_KEY
        , ETL_INSERTED_DATE
        , ETL_INSERTED_BY
        , ETL_LAST_UPDATED_DATE
        , ETL_LAST_UPDATED_BY
        , ETL_DELETED_FLAG
FROM RESULT_DATA
WHERE LATEST_MODIFIED = 1
);