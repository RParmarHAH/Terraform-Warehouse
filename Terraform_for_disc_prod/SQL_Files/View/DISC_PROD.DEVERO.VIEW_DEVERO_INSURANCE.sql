create or replace view DISC_PROD.DEVERO.VIEW_DEVERO_INSURANCE(
	INSURANCE_ID,
	NAME,
	ADDRESS_1,
	ADDRESS_2,
	CITY,
	STATE,
	ZIP_CODE,
	PHONE,
	CATEGORY,
	TYPE,
	CODE,
	AUTHORIZATION,
	REQUIRES_THERAPY_COMPLIANCE,
	PDGM_EFFECTIVE_DATE,
	REQUIRES_EVV,
	AGENCY_ID,
	ACTIVE,
	DATE_MODIFIED,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
) as (
WITH RESULT_DATA AS 
(
SELECT 	
      I.INSURANCE_ID
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'NAME'):"$" :: STRING AS NAME
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'ADDRESS_1'):"$" :: STRING AS ADDRESS_1
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'ADDRESS_2'):"$" :: STRING AS ADDRESS_2
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'CITY'):"$" :: STRING AS CITY
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'STATE'):"$" :: STRING AS STATE
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'ZIP_CODE'):"$" :: STRING AS ZIP_CODE
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'PHONE'):"$" :: STRING AS PHONE
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'CATEGORY'):"$" :: STRING AS CATEGORY
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'TYPE'):"$" :: STRING AS TYPE
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'CODE'):"$" :: STRING AS CODE
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'AUTHORIZATION'):"$" :: STRING AS AUTHORIZATION
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'REQUIRES_THERAPY_COMPLIANCE'):"$" :: STRING AS REQUIRES_THERAPY_COMPLIANCE
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'PDGM_EFFECTIVE_DATE'):"$" :: STRING AS PDGM_EFFECTIVE_DATE
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'REQUIRES_EVV'):"$" :: STRING AS REQUIRES_EVV
--	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'EVV_VENDOR_PAYER_ID'):"$" :: STRING AS EVV_VENDOR_PAYER_ID
--	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'EVV_VENDOR_PLAN_ID'):"$" :: STRING AS EVV_VENDOR_PLAN_ID
--	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'REQUIRES_EXTERNAL_CLAIMING_FOR_EVV'):"$" :: STRING AS REQUIRES_EXTERNAL_CLAIMING_FOR_EVV
	, NULL AS AGENCY_ID  --INSURANCE.VALUE:"$" :: STRING AS AGENCY_IDS
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'ACTIVE'):"$" :: STRING AS ACTIVE
	, XMLGET(PARSE_XML(I.INSURANCE_XML), 'DATE_MODIFIED'):"$" :: STRING AS DATE_MODIFIED
	, I.ETL_TASK_KEY
	, I.ETL_INSERTED_TASK_KEY
	, I.ETL_INSERTED_DATE
	, I.ETL_INSERTED_BY
	, I.ETL_LAST_UPDATED_DATE
	, I.ETL_LAST_UPDATED_BY
	, I.ETL_DELETED_FLAG
	, ROW_NUMBER() OVER(PARTITION BY I.INSURANCE_ID ORDER BY DATE_MODIFIED DESC) AS LATEST_MODIFIED
  FROM DISC_PROD.DEVERO.HIST_DEVERO_INSURANCE  I
--, LATERAL FLATTEN(XMLGET(PARSE_XML(I.INSURANCE_XML), 'AGENCY_IDS'):"$":: ARRAY) INSURANCE
--WHERE DATE(I.ETL_LAST_UPDATED_DATE) = COALESCE((
--SELECT MAX(DATE(ETL_LAST_UPDATED_DATE)) FROM DISC_PROD.DEVERO.HIST_DEVERO_INSURANCE),DATE(GETDATE()))
)
SELECT DISTINCT
INSURANCE_ID
	, NAME
	, ADDRESS_1
	, ADDRESS_2
	, CITY
	, STATE
	, ZIP_CODE
	, PHONE
	, CATEGORY
	, TYPE
	, CODE
	, AUTHORIZATION
	, REQUIRES_THERAPY_COMPLIANCE
	, PDGM_EFFECTIVE_DATE
	, REQUIRES_EVV
--	, EVV_VENDOR_PAYER_ID
--	, EVV_VENDOR_PLAN_ID
--	, REQUIRES_EXTERNAL_CLAIMING_FOR_EVV
	, AGENCY_ID 
	, ACTIVE
	, DATE_MODIFIED
	, ETL_TASK_KEY
	, ETL_INSERTED_TASK_KEY
	, ETL_INSERTED_DATE
	, ETL_INSERTED_BY
	, ETL_LAST_UPDATED_DATE
	, ETL_LAST_UPDATED_BY
	, ETL_DELETED_FLAG
FROM RESULT_DATA
WHERE LATEST_MODIFIED = 1
);