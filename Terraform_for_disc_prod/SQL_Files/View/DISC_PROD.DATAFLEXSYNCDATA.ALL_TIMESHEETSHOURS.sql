create or replace view DISC_PROD.DATAFLEXSYNCDATA.ALL_TIMESHEETSHOURS(
	DBNAME,
	REFERENCENO,
	WEEKENDDATE,
	SERVICEDATE,
	SERVICEDAYOFWEEK,
	SERVICEHOURS,
	BILLED,
	STARTTIME,
	ENDTIME,
	CREATEDDATE,
	UPDATEBATCH,
	UPDATEDTIME,
	PAID,
	SYS_CHANGE_VERSION,
	SYS_CHANGE_OPERATION,
	ETL_TASK_KEY,
	ETL_INSERTED_TASK_KEY,
	ETL_INSERTED_DATE,
	ETL_INSERTED_BY,
	ETL_LAST_UPDATED_DATE,
	ETL_LAST_UPDATED_BY,
	ETL_DELETED_FLAG
) as 
WITH BILLED AS 
(
	SELECT  RECORD_NUMBER, CASE WHEN BILLED = 'Y' THEN TRUE ELSE FALSE END AS BILLED, DAYS_BILLED
	,CASE  WHEN DAYS_BILLED = 'MON_BILLED' THEN WEEK_END_DATE - 6
	 	  WHEN DAYS_BILLED = 'TUE_BILLED' THEN WEEK_END_DATE - 5
	 	  WHEN DAYS_BILLED = 'WED_BILLED' THEN WEEK_END_DATE - 4
	 	  WHEN DAYS_BILLED = 'THU_BILLED' THEN WEEK_END_DATE - 3
	 	  WHEN DAYS_BILLED = 'FRI_BILLED' THEN WEEK_END_DATE - 2
	 	  WHEN DAYS_BILLED = 'SAT_BILLED' THEN WEEK_END_DATE - 1
	 	  WHEN DAYS_BILLED = 'SUN_BILLED' THEN WEEK_END_DATE - 0
	 	  END AS SERVICE_DATE
	 FROM DATAFLEXSYNCDATA.IL_HOURSOL1 
	   UNPIVOT(BILLED for DAYS_BILLED in (MON_BILLED, TUE_BILLED, WED_BILLED, THU_BILLED, FRI_BILLED, SAT_BILLED, SUN_BILLED))
)
--SELECT * FROM BILLED WHERE RECORD_NUMBER =5;
, PAID AS 
(
	SELECT  RECORD_NUMBER, CASE WHEN PAID = 'Y' THEN TRUE ELSE FALSE END AS PAID, DAYS_PAID
	,CASE  WHEN DAYS_PAID = 'MON_PAID' THEN WEEK_END_DATE - 6
	 	  WHEN DAYS_PAID = 'TUE_PAID' THEN WEEK_END_DATE - 5
	 	  WHEN DAYS_PAID = 'WED_PAID' THEN WEEK_END_DATE - 4
	 	  WHEN DAYS_PAID = 'THU_PAID' THEN WEEK_END_DATE - 3
	 	  WHEN DAYS_PAID = 'FRI_PAID' THEN WEEK_END_DATE - 2
	 	  WHEN DAYS_PAID = 'SAT_PAID' THEN WEEK_END_DATE - 1
	 	  WHEN DAYS_PAID = 'SUN_PAID' THEN WEEK_END_DATE - 0
	 	  END AS SERVICE_DATE
	 FROM  DATAFLEXSYNCDATA.IL_HOURSOL1 
	   UNPIVOT(PAID for DAYS_PAID in (MON_PAID, TUE_PAID, WED_PAID, THU_PAID, FRI_PAID, SAT_PAID, SUN_PAID))
)
--SELECT * FROM PAID WHERE RECORD_NUMBER =5
, HOURS AS 
(
SELECT RECORD_NUMBER AS RECORD_NUMBER_NEW, DAYS_HOURS,SERVICEHOURS AS  SERVICEHOURS_NEW, WEEK_END_DATE,
 CASE WHEN DAYS_HOURS = 'MON_HOURS' THEN WEEK_END_DATE - 6
 	  WHEN DAYS_HOURS = 'TUE_HOURS' THEN WEEK_END_DATE - 5
 	  WHEN DAYS_HOURS = 'WED_HOURS' THEN WEEK_END_DATE - 4
 	  WHEN DAYS_HOURS = 'THU_HOURS' THEN WEEK_END_DATE - 3
 	  WHEN DAYS_HOURS = 'FRI_HOURS' THEN WEEK_END_DATE - 2
 	  WHEN DAYS_HOURS = 'SAT_HOURS' THEN WEEK_END_DATE - 1
 	  WHEN DAYS_HOURS = 'SUN_HOURS' THEN WEEK_END_DATE - 0
 	  END AS SERVICE_DATE_HOUR,
  CASE WHEN DAYS_HOURS = 'MON_HOURS' THEN 1
 	  WHEN DAYS_HOURS = 'TUE_HOURS' THEN 2
 	  WHEN DAYS_HOURS = 'WED_HOURS' THEN 3
 	  WHEN DAYS_HOURS = 'THU_HOURS' THEN 4
 	  WHEN DAYS_HOURS = 'FRI_HOURS' THEN 5
 	  WHEN DAYS_HOURS = 'SAT_HOURS' THEN 6
 	  WHEN DAYS_HOURS = 'SUN_HOURS' THEN 7
 	  END AS SERVICEDAYOFWEEK,	  
 	  WEEK_END_DATE AS WEEK_END_DATE_NEW , *
 	  --PAYROLL_DATE,	WEEK_END_DATE,	EMP_NUMBER,	CLIENT_NUMBER,	CONTRACT,	MON_HOURS,	MON_BILLED,	TUE_HOURS,	TUE_BILLED,	WED_HOURS,	WED_BILLED,	THU_HOURS,	THU_BILLED,	FRI_HOURS,	FRI_BILLED,	SAT_HOURS,	SAT_BILLED,	SUN_HOURS,	SUN_BILLED,	DUMMY,	BILLED_FLAG,	BILLED_SUPPL_NO,	HIGH_SUPPL_NO,	CHANGED_DATE,	CHANGED_BY,	LOGIN_NAME,	PAID_FLAG,	MON_PAID,	TUE_PAID,	WED_PAID,	THU_PAID,	FRI_PAID,	SAT_PAID,	SUN_PAID,	AUDIT_NUMBER,	SEQ_NUMBER,	OFFICE,	SUPERVISOR,	HOLD_TIMESHEET,	REVIEW_AUDIT_NUMBER,	CHANGED_TIME,	TRACKINGID,	ISEVV,	TYPE,	OLDRECNUM,	SYS_CHANGE_VERSION,	SYS_CHANGE_OPERATION,	ETL_TASK_KEY,	ETL_INSERTED_TASK_KEY,	ETL_INSERTED_DATE,	ETL_INSERTED_BY,	ETL_LAST_UPDATED_DATE,	ETL_LAST_UPDATED_BY,	ETL_DELETED_FLAG
 	  FROM DATAFLEXSYNCDATA.IL_HOURSOL1
    UNPIVOT(SERVICEHOURS for DAYS_HOURS in (MON_HOURS, TUE_HOURS, WED_HOURS, THU_HOURS, FRI_HOURS, SAT_HOURS, SUN_HOURS))
)
--SELECT * FROM HOURS WHERE RECORD_NUMBER =5
SELECT DISTINCT
'IL' AS DBNAME,
'OLD_' || OLDRECNUM AS REFERENCENO,
H.WEEK_END_DATE_NEW  AS WEEKENDDATE,
H.SERVICE_DATE_HOUR AS SERVICEDATE,
--date_trunc('SECOND', H.SERVICE_DATE_HOUR) AS SERVICEDATE,
H.SERVICEDAYOFWEEK AS SERVICEDAYOFWEEK,
H.SERVICEHOURS_NEW AS SERVICEHOURS,
B.BILLED AS BILLED,
NULL AS STARTTIME,
NULL  AS ENDTIME,
NULL AS CREATEDDATE,
NULL  AS UPDATEBATCH,
NULL AS UPDATEDTIME,
P.PAID AS PAID,
H.SYS_CHANGE_VERSION,
H.SYS_CHANGE_OPERATION,
H.ETL_TASK_KEY,
H.ETL_INSERTED_TASK_KEY,
H.ETL_INSERTED_DATE,
H.ETL_INSERTED_BY,
H.ETL_LAST_UPDATED_DATE,
H.ETL_LAST_UPDATED_BY,
H.ETL_DELETED_FLAG
FROM HOURS H 
LEFT JOIN BILLED B ON B.RECORD_NUMBER = H.RECORD_NUMBER_NEW AND B.SERVICE_DATE = H.SERVICE_DATE_HOUR 
LEFT JOIN PAID P ON P.RECORD_NUMBER = H.RECORD_NUMBER_NEW AND P.SERVICE_DATE = H.SERVICE_DATE_HOUR 
WHERE H.SERVICEHOURS_NEW > 0 --AND OLDRECNUM=5
UNION 
SELECT
DBNAME,
REFERENCENO::VARCHAR,
WEEKENDDATE,
DATE_TRUNC('DAY',SERVICEDATE::DATE) AS SERVICEDATE_1,
SERVICEDAYOFWEEK,
SERVICEHOURS,
BILLED,
STARTTIME,
ENDTIME,
CREATEDDATE,
UPDATEBATCH,
UPDATEDTIME,
PAID,
SYS_CHANGE_VERSION,
SYS_CHANGE_OPERATION,
ETL_TASK_KEY,
ETL_INSERTED_TASK_KEY,
ETL_INSERTED_DATE,
ETL_INSERTED_BY,
ETL_LAST_UPDATED_DATE,
ETL_LAST_UPDATED_BY,
ETL_DELETED_FLAG
FROM DATAFLEXSYNCDATA.DFTIMESHEETHOURS;